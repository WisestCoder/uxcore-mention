webpackJsonp([0,1],[
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\r\n * example index\r\n */\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _index = __webpack_require__(2);\n\nvar _index2 = _interopRequireDefault(_index);\n\n__webpack_require__(11);\n\nfunction formatter(data) {\n    return data.map(function (item) {\n        return {\n            text: item\n        };\n    });\n}\n\nvar source = ['aaaaa', 'aabbb', 'aaccc', 'bbbcc', 'dddee', 'fffqq', 'pppaa', 'ppccc'];\n\n_react2['default'].render(_react2['default'].createElement(\n    _index2['default'],\n    {\n        matchRange: [1, 6],\n        source: source,\n        formatter: formatter,\n        selectTpl: '${text}' },\n    'default content'\n), document.getElementById('content'));//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2V4YW1wbGUvaW5kZXguanN4P2U3MWIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIGV4YW1wbGUgaW5kZXhcclxuICovXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBNZW50aW9uIGZyb20gJy4uL2luZGV4JztcclxuaW1wb3J0ICcuL3N0eWxlLmxlc3MnO1xyXG5cclxuZnVuY3Rpb24gZm9ybWF0dGVyKGRhdGEpe1xyXG4gICAgcmV0dXJuIGRhdGEubWFwKChpdGVtKT0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB0ZXh0OiBpdGVtXHJcbiAgICAgICAgfTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5sZXQgc291cmNlID0gWydhYWFhYScsICdhYWJiYicsICdhYWNjYycsICdiYmJjYycsICdkZGRlZScsICdmZmZxcScsICdwcHBhYScsICdwcGNjYyddO1xyXG5cclxuUmVhY3QucmVuZGVyKChcclxuICAgIDxNZW50aW9uXHJcbiAgICAgICAgbWF0Y2hSYW5nZT17WzEsIDZdfVxyXG4gICAgICAgIHNvdXJjZT17c291cmNlfVxyXG4gICAgICAgIGZvcm1hdHRlcj17Zm9ybWF0dGVyfVxyXG4gICAgICAgIHNlbGVjdFRwbD17JyR7dGV4dH0nfT5cclxuICAgICAgICBkZWZhdWx0IGNvbnRlbnRcclxuICAgIDwvTWVudGlvbj5cclxuKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRlbnQnKSk7XHJcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vZXhhbXBsZS9pbmRleC5qc3hcbiAqKi8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFHQTtBQUNBOzs7QUFBQTtBQUNBOzs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("var require;var require;/**\n * React v0.13.3\n *\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\"use strict\";!(function(e){if(true)module.exports = e();else if(\"function\" == typeof define && define.amd)define([],e);else {var t;t = \"undefined\" != typeof window?window:\"undefined\" != typeof global?global:\"undefined\" != typeof self?self:this,t.React = e();}})(function(){return (function e(t,n,r){function o(a,u){if(!n[a]){if(!t[a]){var s=\"function\" == typeof require && require;if(!u && s)return require(a,!0);if(i)return i(a,!0);var l=new Error(\"Cannot find module '\" + a + \"'\");throw (l.code = \"MODULE_NOT_FOUND\",l);}var c=n[a] = {exports:{}};t[a][0].call(c.exports,function(e){var n=t[a][1][e];return o(n?n:e);},c,c.exports,e,t,n,r);}return n[a].exports;}for(var i=\"function\" == typeof require && require,a=0;a < r.length;a++) o(r[a]);return o;})({1:[function(e,t,n){\"use strict\";var r=e(19),o=e(32),i=e(34),a=e(33),u=e(38),s=e(39),l=e(55),c=(e(56),e(40)),p=e(51),d=e(54),f=e(64),h=e(68),m=e(73),v=e(76),g=e(79),y=e(82),C=e(27),E=e(115),b=e(142);d.inject();var _=l.createElement,x=l.createFactory,D=l.cloneElement,M=m.measure(\"React\",\"render\",h.render),N={Children:{map:o.map,forEach:o.forEach,count:o.count,only:b},Component:i,DOM:c,PropTypes:v,initializeTouchEvents:function initializeTouchEvents(e){r.useTouchEvents = e;},createClass:a.createClass,createElement:_,cloneElement:D,createFactory:x,createMixin:function createMixin(e){return e;},constructAndRenderComponent:h.constructAndRenderComponent,constructAndRenderComponentByID:h.constructAndRenderComponentByID,findDOMNode:E,render:M,renderToString:y.renderToString,renderToStaticMarkup:y.renderToStaticMarkup,unmountComponentAtNode:h.unmountComponentAtNode,isValidElement:l.isValidElement,withContext:u.withContext,__spread:C};\"undefined\" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && \"function\" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject && __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({CurrentOwner:s,InstanceHandles:f,Mount:h,Reconciler:g,TextComponent:p});N.version = \"0.13.3\",t.exports = N;},{115:115,142:142,19:19,27:27,32:32,33:33,34:34,38:38,39:39,40:40,51:51,54:54,55:55,56:56,64:64,68:68,73:73,76:76,79:79,82:82}],2:[function(e,t,n){\"use strict\";var r=e(117),o={componentDidMount:function componentDidMount(){this.props.autoFocus && r(this.getDOMNode());}};t.exports = o;},{117:117}],3:[function(e,t,n){\"use strict\";function r(){var e=window.opera;return \"object\" == typeof e && \"function\" == typeof e.version && parseInt(e.version(),10) <= 12;}function o(e){return (e.ctrlKey || e.altKey || e.metaKey) && !(e.ctrlKey && e.altKey);}function i(e){switch(e){case T.topCompositionStart:return P.compositionStart;case T.topCompositionEnd:return P.compositionEnd;case T.topCompositionUpdate:return P.compositionUpdate;}}function a(e,t){return e === T.topKeyDown && t.keyCode === b;}function u(e,t){switch(e){case T.topKeyUp:return -1 !== E.indexOf(t.keyCode);case T.topKeyDown:return t.keyCode !== b;case T.topKeyPress:case T.topMouseDown:case T.topBlur:return !0;default:return !1;}}function s(e){var t=e.detail;return \"object\" == typeof t && \"data\" in t?t.data:null;}function l(e,t,n,r){var o,l;if((_?o = i(e):w?u(e,r) && (o = P.compositionEnd):a(e,r) && (o = P.compositionStart),!o))return null;M && (w || o !== P.compositionStart?o === P.compositionEnd && w && (l = w.getData()):w = v.getPooled(t));var c=g.getPooled(o,n,r);if(l)c.data = l;else {var p=s(r);null !== p && (c.data = p);}return (h.accumulateTwoPhaseDispatches(c),c);}function c(e,t){switch(e){case T.topCompositionEnd:return s(t);case T.topKeyPress:var n=t.which;return n !== N?null:(R = !0,I);case T.topTextInput:var r=t.data;return r === I && R?null:r;default:return null;}}function p(e,t){if(w){if(e === T.topCompositionEnd || u(e,t)){var n=w.getData();return (v.release(w),w = null,n);}return null;}switch(e){case T.topPaste:return null;case T.topKeyPress:return t.which && !o(t)?String.fromCharCode(t.which):null;case T.topCompositionEnd:return M?null:t.data;default:return null;}}function d(e,t,n,r){var o;if((o = D?c(e,r):p(e,r),!o))return null;var i=y.getPooled(P.beforeInput,n,r);return (i.data = o,h.accumulateTwoPhaseDispatches(i),i);}var f=e(15),h=e(20),m=e(21),v=e(22),g=e(91),y=e(95),C=e(139),E=[9,13,27,32],b=229,_=m.canUseDOM && \"CompositionEvent\" in window,x=null;m.canUseDOM && \"documentMode\" in document && (x = document.documentMode);var D=m.canUseDOM && \"TextEvent\" in window && !x && !r(),M=m.canUseDOM && (!_ || x && x > 8 && 11 >= x),N=32,I=String.fromCharCode(N),T=f.topLevelTypes,P={beforeInput:{phasedRegistrationNames:{bubbled:C({onBeforeInput:null}),captured:C({onBeforeInputCapture:null})},dependencies:[T.topCompositionEnd,T.topKeyPress,T.topTextInput,T.topPaste]},compositionEnd:{phasedRegistrationNames:{bubbled:C({onCompositionEnd:null}),captured:C({onCompositionEndCapture:null})},dependencies:[T.topBlur,T.topCompositionEnd,T.topKeyDown,T.topKeyPress,T.topKeyUp,T.topMouseDown]},compositionStart:{phasedRegistrationNames:{bubbled:C({onCompositionStart:null}),captured:C({onCompositionStartCapture:null})},dependencies:[T.topBlur,T.topCompositionStart,T.topKeyDown,T.topKeyPress,T.topKeyUp,T.topMouseDown]},compositionUpdate:{phasedRegistrationNames:{bubbled:C({onCompositionUpdate:null}),captured:C({onCompositionUpdateCapture:null})},dependencies:[T.topBlur,T.topCompositionUpdate,T.topKeyDown,T.topKeyPress,T.topKeyUp,T.topMouseDown]}},R=!1,w=null,O={eventTypes:P,extractEvents:function extractEvents(e,t,n,r){return [l(e,t,n,r),d(e,t,n,r)];}};t.exports = O;},{139:139,15:15,20:20,21:21,22:22,91:91,95:95}],4:[function(e,t,n){\"use strict\";function r(e,t){return e + t.charAt(0).toUpperCase() + t.substring(1);}var o={boxFlex:!0,boxFlexGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,strokeDashoffset:!0,strokeOpacity:!0,strokeWidth:!0},i=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(o).forEach(function(e){i.forEach(function(t){o[r(t,e)] = o[e];});});var a={background:{backgroundImage:!0,backgroundPosition:!0,backgroundRepeat:!0,backgroundColor:!0},border:{borderWidth:!0,borderStyle:!0,borderColor:!0},borderBottom:{borderBottomWidth:!0,borderBottomStyle:!0,borderBottomColor:!0},borderLeft:{borderLeftWidth:!0,borderLeftStyle:!0,borderLeftColor:!0},borderRight:{borderRightWidth:!0,borderRightStyle:!0,borderRightColor:!0},borderTop:{borderTopWidth:!0,borderTopStyle:!0,borderTopColor:!0},font:{fontStyle:!0,fontVariant:!0,fontWeight:!0,fontSize:!0,lineHeight:!0,fontFamily:!0}},u={isUnitlessNumber:o,shorthandPropertyExpansions:a};t.exports = u;},{}],5:[function(e,t,n){\"use strict\";var r=e(4),o=e(21),i=(e(106),e(111)),a=e(131),u=e(141),s=(e(150),u(function(e){return a(e);})),l=\"cssFloat\";o.canUseDOM && void 0 === document.documentElement.style.cssFloat && (l = \"styleFloat\");var c={createMarkupForStyles:function createMarkupForStyles(e){var t=\"\";for(var n in e) if(e.hasOwnProperty(n)){var r=e[n];null != r && (t += s(n) + \":\",t += i(n,r) + \";\");}return t || null;},setValueForStyles:function setValueForStyles(e,t){var n=e.style;for(var o in t) if(t.hasOwnProperty(o)){var a=i(o,t[o]);if((\"float\" === o && (o = l),a))n[o] = a;else {var u=r.shorthandPropertyExpansions[o];if(u)for(var s in u) n[s] = \"\";else n[o] = \"\";}}}};t.exports = c;},{106:106,111:111,131:131,141:141,150:150,21:21,4:4}],6:[function(e,t,n){\"use strict\";function r(){this._callbacks = null,this._contexts = null;}var o=e(28),i=e(27),a=e(133);i(r.prototype,{enqueue:function enqueue(e,t){this._callbacks = this._callbacks || [],this._contexts = this._contexts || [],this._callbacks.push(e),this._contexts.push(t);},notifyAll:function notifyAll(){var e=this._callbacks,t=this._contexts;if(e){a(e.length === t.length),this._callbacks = null,this._contexts = null;for(var n=0,r=e.length;r > n;n++) e[n].call(t[n]);e.length = 0,t.length = 0;}},reset:function reset(){this._callbacks = null,this._contexts = null;},destructor:function destructor(){this.reset();}}),o.addPoolingTo(r),t.exports = r;},{133:133,27:27,28:28}],7:[function(e,t,n){\"use strict\";function r(e){return \"SELECT\" === e.nodeName || \"INPUT\" === e.nodeName && \"file\" === e.type;}function o(e){var t=x.getPooled(T.change,R,e);E.accumulateTwoPhaseDispatches(t),_.batchedUpdates(i,t);}function i(e){C.enqueueEvents(e),C.processEventQueue();}function a(e,t){P = e,R = t,P.attachEvent(\"onchange\",o);}function u(){P && (P.detachEvent(\"onchange\",o),P = null,R = null);}function s(e,t,n){return e === I.topChange?n:void 0;}function l(e,t,n){e === I.topFocus?(u(),a(t,n)):e === I.topBlur && u();}function c(e,t){P = e,R = t,w = e.value,O = Object.getOwnPropertyDescriptor(e.constructor.prototype,\"value\"),Object.defineProperty(P,\"value\",k),P.attachEvent(\"onpropertychange\",d);}function p(){P && (delete P.value,P.detachEvent(\"onpropertychange\",d),P = null,R = null,w = null,O = null);}function d(e){if(\"value\" === e.propertyName){var t=e.srcElement.value;t !== w && (w = t,o(e));}}function f(e,t,n){return e === I.topInput?n:void 0;}function h(e,t,n){e === I.topFocus?(p(),c(t,n)):e === I.topBlur && p();}function m(e,t,n){return e !== I.topSelectionChange && e !== I.topKeyUp && e !== I.topKeyDown || !P || P.value === w?void 0:(w = P.value,R);}function v(e){return \"INPUT\" === e.nodeName && (\"checkbox\" === e.type || \"radio\" === e.type);}function g(e,t,n){return e === I.topClick?n:void 0;}var y=e(15),C=e(17),E=e(20),b=e(21),_=e(85),x=e(93),D=e(134),M=e(136),N=e(139),I=y.topLevelTypes,T={change:{phasedRegistrationNames:{bubbled:N({onChange:null}),captured:N({onChangeCapture:null})},dependencies:[I.topBlur,I.topChange,I.topClick,I.topFocus,I.topInput,I.topKeyDown,I.topKeyUp,I.topSelectionChange]}},P=null,R=null,w=null,O=null,S=!1;b.canUseDOM && (S = D(\"change\") && (!(\"documentMode\" in document) || document.documentMode > 8));var A=!1;b.canUseDOM && (A = D(\"input\") && (!(\"documentMode\" in document) || document.documentMode > 9));var k={get:function get(){return O.get.call(this);},set:function set(e){w = \"\" + e,O.set.call(this,e);}},L={eventTypes:T,extractEvents:function extractEvents(e,t,n,o){var i,a;if((r(t)?S?i = s:a = l:M(t)?A?i = f:(i = m,a = h):v(t) && (i = g),i)){var u=i(e,t,n);if(u){var c=x.getPooled(T.change,u,o);return (E.accumulateTwoPhaseDispatches(c),c);}}a && a(e,t,n);}};t.exports = L;},{134:134,136:136,139:139,15:15,17:17,20:20,21:21,85:85,93:93}],8:[function(e,t,n){\"use strict\";var r=0,o={createReactRootIndex:function createReactRootIndex(){return r++;}};t.exports = o;},{}],9:[function(e,t,n){\"use strict\";function r(e,t,n){e.insertBefore(t,e.childNodes[n] || null);}var o=e(12),i=e(70),a=e(145),u=e(133),s={dangerouslyReplaceNodeWithMarkup:o.dangerouslyReplaceNodeWithMarkup,updateTextContent:a,processUpdates:function processUpdates(e,t){for(var n,s=null,l=null,c=0;c < e.length;c++) if((n = e[c],n.type === i.MOVE_EXISTING || n.type === i.REMOVE_NODE)){var p=n.fromIndex,d=n.parentNode.childNodes[p],f=n.parentID;u(d),s = s || {},s[f] = s[f] || [],s[f][p] = d,l = l || [],l.push(d);}var h=o.dangerouslyRenderMarkup(t);if(l)for(var m=0;m < l.length;m++) l[m].parentNode.removeChild(l[m]);for(var v=0;v < e.length;v++) switch((n = e[v],n.type)){case i.INSERT_MARKUP:r(n.parentNode,h[n.markupIndex],n.toIndex);break;case i.MOVE_EXISTING:r(n.parentNode,s[n.parentID][n.fromIndex],n.toIndex);break;case i.TEXT_CONTENT:a(n.parentNode,n.textContent);break;case i.REMOVE_NODE:}}};t.exports = s;},{12:12,133:133,145:145,70:70}],10:[function(e,t,n){\"use strict\";function r(e,t){return (e & t) === t;}var o=e(133),i={MUST_USE_ATTRIBUTE:1,MUST_USE_PROPERTY:2,HAS_SIDE_EFFECTS:4,HAS_BOOLEAN_VALUE:8,HAS_NUMERIC_VALUE:16,HAS_POSITIVE_NUMERIC_VALUE:48,HAS_OVERLOADED_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function injectDOMPropertyConfig(e){var t=e.Properties || {},n=e.DOMAttributeNames || {},a=e.DOMPropertyNames || {},s=e.DOMMutationMethods || {};e.isCustomAttribute && u._isCustomAttributeFunctions.push(e.isCustomAttribute);for(var l in t) {o(!u.isStandardName.hasOwnProperty(l)),u.isStandardName[l] = !0;var c=l.toLowerCase();if((u.getPossibleStandardName[c] = l,n.hasOwnProperty(l))){var p=n[l];u.getPossibleStandardName[p] = l,u.getAttributeName[l] = p;}else u.getAttributeName[l] = c;u.getPropertyName[l] = a.hasOwnProperty(l)?a[l]:l,s.hasOwnProperty(l)?u.getMutationMethod[l] = s[l]:u.getMutationMethod[l] = null;var d=t[l];u.mustUseAttribute[l] = r(d,i.MUST_USE_ATTRIBUTE),u.mustUseProperty[l] = r(d,i.MUST_USE_PROPERTY),u.hasSideEffects[l] = r(d,i.HAS_SIDE_EFFECTS),u.hasBooleanValue[l] = r(d,i.HAS_BOOLEAN_VALUE),u.hasNumericValue[l] = r(d,i.HAS_NUMERIC_VALUE),u.hasPositiveNumericValue[l] = r(d,i.HAS_POSITIVE_NUMERIC_VALUE),u.hasOverloadedBooleanValue[l] = r(d,i.HAS_OVERLOADED_BOOLEAN_VALUE),o(!u.mustUseAttribute[l] || !u.mustUseProperty[l]),o(u.mustUseProperty[l] || !u.hasSideEffects[l]),o(!!u.hasBooleanValue[l] + !!u.hasNumericValue[l] + !!u.hasOverloadedBooleanValue[l] <= 1);}}},a={},u={ID_ATTRIBUTE_NAME:\"data-reactid\",isStandardName:{},getPossibleStandardName:{},getAttributeName:{},getPropertyName:{},getMutationMethod:{},mustUseAttribute:{},mustUseProperty:{},hasSideEffects:{},hasBooleanValue:{},hasNumericValue:{},hasPositiveNumericValue:{},hasOverloadedBooleanValue:{},_isCustomAttributeFunctions:[],isCustomAttribute:function isCustomAttribute(e){for(var t=0;t < u._isCustomAttributeFunctions.length;t++) {var n=u._isCustomAttributeFunctions[t];if(n(e))return !0;}return !1;},getDefaultValueForProperty:function getDefaultValueForProperty(e,t){var n,r=a[e];return (r || (a[e] = r = {}),t in r || (n = document.createElement(e),r[t] = n[t]),r[t]);},injection:i};t.exports = u;},{133:133}],11:[function(e,t,n){\"use strict\";function r(e,t){return null == t || o.hasBooleanValue[e] && !t || o.hasNumericValue[e] && isNaN(t) || o.hasPositiveNumericValue[e] && 1 > t || o.hasOverloadedBooleanValue[e] && t === !1;}var o=e(10),i=e(143),a=(e(150),{createMarkupForID:function createMarkupForID(e){return o.ID_ATTRIBUTE_NAME + \"=\" + i(e);},createMarkupForProperty:function createMarkupForProperty(e,t){if(o.isStandardName.hasOwnProperty(e) && o.isStandardName[e]){if(r(e,t))return \"\";var n=o.getAttributeName[e];return o.hasBooleanValue[e] || o.hasOverloadedBooleanValue[e] && t === !0?n:n + \"=\" + i(t);}return o.isCustomAttribute(e)?null == t?\"\":e + \"=\" + i(t):null;},setValueForProperty:function setValueForProperty(e,t,n){if(o.isStandardName.hasOwnProperty(t) && o.isStandardName[t]){var i=o.getMutationMethod[t];if(i)i(e,n);else if(r(t,n))this.deleteValueForProperty(e,t);else if(o.mustUseAttribute[t])e.setAttribute(o.getAttributeName[t],\"\" + n);else {var a=o.getPropertyName[t];o.hasSideEffects[t] && \"\" + e[a] == \"\" + n || (e[a] = n);}}else o.isCustomAttribute(t) && (null == n?e.removeAttribute(t):e.setAttribute(t,\"\" + n));},deleteValueForProperty:function deleteValueForProperty(e,t){if(o.isStandardName.hasOwnProperty(t) && o.isStandardName[t]){var n=o.getMutationMethod[t];if(n)n(e,void 0);else if(o.mustUseAttribute[t])e.removeAttribute(o.getAttributeName[t]);else {var r=o.getPropertyName[t],i=o.getDefaultValueForProperty(e.nodeName,r);o.hasSideEffects[t] && \"\" + e[r] === i || (e[r] = i);}}else o.isCustomAttribute(t) && e.removeAttribute(t);}});t.exports = a;},{10:10,143:143,150:150}],12:[function(e,t,n){\"use strict\";function r(e){return e.substring(1,e.indexOf(\" \"));}var o=e(21),i=e(110),a=e(112),u=e(125),s=e(133),l=/^(<[^ \\/>]+)/,c=\"data-danger-index\",p={dangerouslyRenderMarkup:function dangerouslyRenderMarkup(e){s(o.canUseDOM);for(var t,n={},p=0;p < e.length;p++) s(e[p]),t = r(e[p]),t = u(t)?t:\"*\",n[t] = n[t] || [],n[t][p] = e[p];var d=[],f=0;for(t in n) if(n.hasOwnProperty(t)){var h,m=n[t];for(h in m) if(m.hasOwnProperty(h)){var v=m[h];m[h] = v.replace(l,\"$1 \" + c + '=\"' + h + '\" ');}for(var g=i(m.join(\"\"),a),y=0;y < g.length;++y) {var C=g[y];C.hasAttribute && C.hasAttribute(c) && (h = +C.getAttribute(c),C.removeAttribute(c),s(!d.hasOwnProperty(h)),d[h] = C,f += 1);}}return (s(f === d.length),s(d.length === e.length),d);},dangerouslyReplaceNodeWithMarkup:function dangerouslyReplaceNodeWithMarkup(e,t){s(o.canUseDOM),s(t),s(\"html\" !== e.tagName.toLowerCase());var n=i(t,a)[0];e.parentNode.replaceChild(n,e);}};t.exports = p;},{110:110,112:112,125:125,133:133,21:21}],13:[function(e,t,n){\"use strict\";var r=e(139),o=[r({ResponderEventPlugin:null}),r({SimpleEventPlugin:null}),r({TapEventPlugin:null}),r({EnterLeaveEventPlugin:null}),r({ChangeEventPlugin:null}),r({SelectEventPlugin:null}),r({BeforeInputEventPlugin:null}),r({AnalyticsEventPlugin:null}),r({MobileSafariClickEventPlugin:null})];t.exports = o;},{139:139}],14:[function(e,t,n){\"use strict\";var r=e(15),o=e(20),i=e(97),a=e(68),u=e(139),s=r.topLevelTypes,l=a.getFirstReactDOM,c={mouseEnter:{registrationName:u({onMouseEnter:null}),dependencies:[s.topMouseOut,s.topMouseOver]},mouseLeave:{registrationName:u({onMouseLeave:null}),dependencies:[s.topMouseOut,s.topMouseOver]}},p=[null,null],d={eventTypes:c,extractEvents:function extractEvents(e,t,n,r){if(e === s.topMouseOver && (r.relatedTarget || r.fromElement))return null;if(e !== s.topMouseOut && e !== s.topMouseOver)return null;var u;if(t.window === t)u = t;else {var d=t.ownerDocument;u = d?d.defaultView || d.parentWindow:window;}var f,h;if((e === s.topMouseOut?(f = t,h = l(r.relatedTarget || r.toElement) || u):(f = u,h = t),f === h))return null;var m=f?a.getID(f):\"\",v=h?a.getID(h):\"\",g=i.getPooled(c.mouseLeave,m,r);g.type = \"mouseleave\",g.target = f,g.relatedTarget = h;var y=i.getPooled(c.mouseEnter,v,r);return (y.type = \"mouseenter\",y.target = h,y.relatedTarget = f,o.accumulateEnterLeaveDispatches(g,y,m,v),p[0] = g,p[1] = y,p);}};t.exports = d;},{139:139,15:15,20:20,68:68,97:97}],15:[function(e,t,n){\"use strict\";var r=e(138),o=r({bubbled:null,captured:null}),i=r({topBlur:null,topChange:null,topClick:null,topCompositionEnd:null,topCompositionStart:null,topCompositionUpdate:null,topContextMenu:null,topCopy:null,topCut:null,topDoubleClick:null,topDrag:null,topDragEnd:null,topDragEnter:null,topDragExit:null,topDragLeave:null,topDragOver:null,topDragStart:null,topDrop:null,topError:null,topFocus:null,topInput:null,topKeyDown:null,topKeyPress:null,topKeyUp:null,topLoad:null,topMouseDown:null,topMouseMove:null,topMouseOut:null,topMouseOver:null,topMouseUp:null,topPaste:null,topReset:null,topScroll:null,topSelectionChange:null,topSubmit:null,topTextInput:null,topTouchCancel:null,topTouchEnd:null,topTouchMove:null,topTouchStart:null,topWheel:null}),a={topLevelTypes:i,PropagationPhases:o};t.exports = a;},{138:138}],16:[function(e,t,n){var r=e(112),o={listen:function listen(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!1),{remove:function remove(){e.removeEventListener(t,n,!1);}}):e.attachEvent?(e.attachEvent(\"on\" + t,n),{remove:function remove(){e.detachEvent(\"on\" + t,n);}}):void 0;},capture:function capture(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!0),{remove:function remove(){e.removeEventListener(t,n,!0);}}):{remove:r};},registerDefault:function registerDefault(){}};t.exports = o;},{112:112}],17:[function(e,t,n){\"use strict\";var r=e(18),o=e(19),i=e(103),a=e(118),u=e(133),s={},l=null,c=function c(e){if(e){var t=o.executeDispatch,n=r.getPluginModuleForEvent(e);n && n.executeDispatch && (t = n.executeDispatch),o.executeDispatchesInOrder(e,t),e.isPersistent() || e.constructor.release(e);}},p=null,d={injection:{injectMount:o.injection.injectMount,injectInstanceHandle:function injectInstanceHandle(e){p = e;},getInstanceHandle:function getInstanceHandle(){return p;},injectEventPluginOrder:r.injectEventPluginOrder,injectEventPluginsByName:r.injectEventPluginsByName},eventNameDispatchConfigs:r.eventNameDispatchConfigs,registrationNameModules:r.registrationNameModules,putListener:function putListener(e,t,n){u(!n || \"function\" == typeof n);var r=s[t] || (s[t] = {});r[e] = n;},getListener:function getListener(e,t){var n=s[t];return n && n[e];},deleteListener:function deleteListener(e,t){var n=s[t];n && delete n[e];},deleteAllListeners:function deleteAllListeners(e){for(var t in s) delete s[t][e];},extractEvents:function extractEvents(e,t,n,o){for(var a,u=r.plugins,s=0,l=u.length;l > s;s++) {var c=u[s];if(c){var p=c.extractEvents(e,t,n,o);p && (a = i(a,p));}}return a;},enqueueEvents:function enqueueEvents(e){e && (l = i(l,e));},processEventQueue:function processEventQueue(){var e=l;l = null,a(e,c),u(!l);},__purge:function __purge(){s = {};},__getListenerBank:function __getListenerBank(){return s;}};t.exports = d;},{103:103,118:118,133:133,18:18,19:19}],18:[function(e,t,n){\"use strict\";function r(){if(u)for(var e in s) {var t=s[e],n=u.indexOf(e);if((a(n > -1),!l.plugins[n])){a(t.extractEvents),l.plugins[n] = t;var r=t.eventTypes;for(var i in r) a(o(r[i],t,i));}}}function o(e,t,n){a(!l.eventNameDispatchConfigs.hasOwnProperty(n)),l.eventNameDispatchConfigs[n] = e;var r=e.phasedRegistrationNames;if(r){for(var o in r) if(r.hasOwnProperty(o)){var u=r[o];i(u,t,n);}return !0;}return e.registrationName?(i(e.registrationName,t,n),!0):!1;}function i(e,t,n){a(!l.registrationNameModules[e]),l.registrationNameModules[e] = t,l.registrationNameDependencies[e] = t.eventTypes[n].dependencies;}var a=e(133),u=null,s={},l={plugins:[],eventNameDispatchConfigs:{},registrationNameModules:{},registrationNameDependencies:{},injectEventPluginOrder:function injectEventPluginOrder(e){a(!u),u = Array.prototype.slice.call(e),r();},injectEventPluginsByName:function injectEventPluginsByName(e){var t=!1;for(var n in e) if(e.hasOwnProperty(n)){var o=e[n];s.hasOwnProperty(n) && s[n] === o || (a(!s[n]),s[n] = o,t = !0);}t && r();},getPluginModuleForEvent:function getPluginModuleForEvent(e){var t=e.dispatchConfig;if(t.registrationName)return l.registrationNameModules[t.registrationName] || null;for(var n in t.phasedRegistrationNames) if(t.phasedRegistrationNames.hasOwnProperty(n)){var r=l.registrationNameModules[t.phasedRegistrationNames[n]];if(r)return r;}return null;},_resetEventPlugins:function _resetEventPlugins(){u = null;for(var e in s) s.hasOwnProperty(e) && delete s[e];l.plugins.length = 0;var t=l.eventNameDispatchConfigs;for(var n in t) t.hasOwnProperty(n) && delete t[n];var r=l.registrationNameModules;for(var o in r) r.hasOwnProperty(o) && delete r[o];}};t.exports = l;},{133:133}],19:[function(e,t,n){\"use strict\";function r(e){return e === v.topMouseUp || e === v.topTouchEnd || e === v.topTouchCancel;}function o(e){return e === v.topMouseMove || e === v.topTouchMove;}function i(e){return e === v.topMouseDown || e === v.topTouchStart;}function a(e,t){var n=e._dispatchListeners,r=e._dispatchIDs;if(Array.isArray(n))for(var o=0;o < n.length && !e.isPropagationStopped();o++) t(e,n[o],r[o]);else n && t(e,n,r);}function u(e,t,n){e.currentTarget = m.Mount.getNode(n);var r=t(e,n);return (e.currentTarget = null,r);}function s(e,t){a(e,t),e._dispatchListeners = null,e._dispatchIDs = null;}function l(e){var t=e._dispatchListeners,n=e._dispatchIDs;if(Array.isArray(t)){for(var r=0;r < t.length && !e.isPropagationStopped();r++) if(t[r](e,n[r]))return n[r];}else if(t && t(e,n))return n;return null;}function c(e){var t=l(e);return (e._dispatchIDs = null,e._dispatchListeners = null,t);}function p(e){var t=e._dispatchListeners,n=e._dispatchIDs;h(!Array.isArray(t));var r=t?t(e,n):null;return (e._dispatchListeners = null,e._dispatchIDs = null,r);}function d(e){return !!e._dispatchListeners;}var f=e(15),h=e(133),m={Mount:null,injectMount:function injectMount(e){m.Mount = e;}},v=f.topLevelTypes,g={isEndish:r,isMoveish:o,isStartish:i,executeDirectDispatch:p,executeDispatch:u,executeDispatchesInOrder:s,executeDispatchesInOrderStopAtTrue:c,hasDispatches:d,injection:m,useTouchEvents:!1};t.exports = g;},{133:133,15:15}],20:[function(e,t,n){\"use strict\";function r(e,t,n){var r=t.dispatchConfig.phasedRegistrationNames[n];return v(e,r);}function o(e,t,n){var o=t?m.bubbled:m.captured,i=r(e,n,o);i && (n._dispatchListeners = f(n._dispatchListeners,i),n._dispatchIDs = f(n._dispatchIDs,e));}function i(e){e && e.dispatchConfig.phasedRegistrationNames && d.injection.getInstanceHandle().traverseTwoPhase(e.dispatchMarker,o,e);}function a(e,t,n){if(n && n.dispatchConfig.registrationName){var r=n.dispatchConfig.registrationName,o=v(e,r);o && (n._dispatchListeners = f(n._dispatchListeners,o),n._dispatchIDs = f(n._dispatchIDs,e));}}function u(e){e && e.dispatchConfig.registrationName && a(e.dispatchMarker,null,e);}function s(e){h(e,i);}function l(e,t,n,r){d.injection.getInstanceHandle().traverseEnterLeave(n,r,a,e,t);}function c(e){h(e,u);}var p=e(15),d=e(17),f=e(103),h=e(118),m=p.PropagationPhases,v=d.getListener,g={accumulateTwoPhaseDispatches:s,accumulateDirectDispatches:c,accumulateEnterLeaveDispatches:l};t.exports = g;},{103:103,118:118,15:15,17:17}],21:[function(e,t,n){\"use strict\";var r=!(\"undefined\" == typeof window || !window.document || !window.document.createElement),o={canUseDOM:r,canUseWorkers:\"undefined\" != typeof Worker,canUseEventListeners:r && !(!window.addEventListener && !window.attachEvent),canUseViewport:r && !!window.screen,isInWorker:!r};t.exports = o;},{}],22:[function(e,t,n){\"use strict\";function r(e){this._root = e,this._startText = this.getText(),this._fallbackText = null;}var o=e(28),i=e(27),a=e(128);i(r.prototype,{getText:function getText(){return \"value\" in this._root?this._root.value:this._root[a()];},getData:function getData(){if(this._fallbackText)return this._fallbackText;var e,t,n=this._startText,r=n.length,o=this.getText(),i=o.length;for(e = 0;r > e && n[e] === o[e];e++);var a=r - e;for(t = 1;a >= t && n[r - t] === o[i - t];t++);var u=t > 1?1 - t:void 0;return (this._fallbackText = o.slice(e,u),this._fallbackText);}}),o.addPoolingTo(r),t.exports = r;},{128:128,27:27,28:28}],23:[function(e,t,n){\"use strict\";var r,o=e(10),i=e(21),a=o.injection.MUST_USE_ATTRIBUTE,u=o.injection.MUST_USE_PROPERTY,s=o.injection.HAS_BOOLEAN_VALUE,l=o.injection.HAS_SIDE_EFFECTS,c=o.injection.HAS_NUMERIC_VALUE,p=o.injection.HAS_POSITIVE_NUMERIC_VALUE,d=o.injection.HAS_OVERLOADED_BOOLEAN_VALUE;if(i.canUseDOM){var f=document.implementation;r = f && f.hasFeature && f.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\",\"1.1\");}var h={isCustomAttribute:RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\\d_.\\-]*$/),Properties:{accept:null,acceptCharset:null,accessKey:null,action:null,allowFullScreen:a | s,allowTransparency:a,alt:null,async:s,autoComplete:null,autoPlay:s,cellPadding:null,cellSpacing:null,charSet:a,checked:u | s,classID:a,className:r?a:u,cols:a | p,colSpan:null,content:null,contentEditable:null,contextMenu:a,controls:u | s,coords:null,crossOrigin:null,data:null,dateTime:a,defer:s,dir:null,disabled:a | s,download:d,draggable:null,encType:null,form:a,formAction:a,formEncType:a,formMethod:a,formNoValidate:s,formTarget:a,frameBorder:a,headers:null,height:a,hidden:a | s,high:null,href:null,hrefLang:null,htmlFor:null,httpEquiv:null,icon:null,id:u,label:null,lang:null,list:a,loop:u | s,low:null,manifest:a,marginHeight:null,marginWidth:null,max:null,maxLength:a,media:a,mediaGroup:null,method:null,min:null,multiple:u | s,muted:u | s,name:null,noValidate:s,open:s,optimum:null,pattern:null,placeholder:null,poster:null,preload:null,radioGroup:null,readOnly:u | s,rel:null,required:s,role:a,rows:a | p,rowSpan:null,sandbox:null,scope:null,scoped:s,scrolling:null,seamless:a | s,selected:u | s,shape:null,size:a | p,sizes:a,span:p,spellCheck:null,src:null,srcDoc:u,srcSet:a,start:c,step:null,style:null,tabIndex:null,target:null,title:null,type:null,useMap:null,value:u | l,width:a,wmode:a,autoCapitalize:null,autoCorrect:null,itemProp:a,itemScope:a | s,itemType:a,itemID:a,itemRef:a,property:null,unselectable:a},DOMAttributeNames:{acceptCharset:\"accept-charset\",className:\"class\",htmlFor:\"for\",httpEquiv:\"http-equiv\"},DOMPropertyNames:{autoCapitalize:\"autocapitalize\",autoComplete:\"autocomplete\",autoCorrect:\"autocorrect\",autoFocus:\"autofocus\",autoPlay:\"autoplay\",encType:\"encoding\",hrefLang:\"hreflang\",radioGroup:\"radiogroup\",spellCheck:\"spellcheck\",srcDoc:\"srcdoc\",srcSet:\"srcset\"}};t.exports = h;},{10:10,21:21}],24:[function(e,t,n){\"use strict\";function r(e){l(null == e.props.checkedLink || null == e.props.valueLink);}function o(e){r(e),l(null == e.props.value && null == e.props.onChange);}function i(e){r(e),l(null == e.props.checked && null == e.props.onChange);}function a(e){this.props.valueLink.requestChange(e.target.value);}function u(e){this.props.checkedLink.requestChange(e.target.checked);}var s=e(76),l=e(133),c={button:!0,checkbox:!0,image:!0,hidden:!0,radio:!0,reset:!0,submit:!0},p={Mixin:{propTypes:{value:function value(e,t,n){return !e[t] || c[e.type] || e.onChange || e.readOnly || e.disabled?null:new Error(\"You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.\");},checked:function checked(e,t,n){return !e[t] || e.onChange || e.readOnly || e.disabled?null:new Error(\"You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.\");},onChange:s.func}},getValue:function getValue(e){return e.props.valueLink?(o(e),e.props.valueLink.value):e.props.value;},getChecked:function getChecked(e){return e.props.checkedLink?(i(e),e.props.checkedLink.value):e.props.checked;},getOnChange:function getOnChange(e){return e.props.valueLink?(o(e),a):e.props.checkedLink?(i(e),u):e.props.onChange;}};t.exports = p;},{133:133,76:76}],25:[function(e,t,n){\"use strict\";function r(e){e.remove();}var o=e(30),i=e(103),a=e(118),u=e(133),s={trapBubbledEvent:function trapBubbledEvent(e,t){u(this.isMounted());var n=this.getDOMNode();u(n);var r=o.trapBubbledEvent(e,t,n);this._localEventListeners = i(this._localEventListeners,r);},componentWillUnmount:function componentWillUnmount(){this._localEventListeners && a(this._localEventListeners,r);}};t.exports = s;},{103:103,118:118,133:133,30:30}],26:[function(e,t,n){\"use strict\";var r=e(15),o=e(112),i=r.topLevelTypes,a={eventTypes:null,extractEvents:function extractEvents(e,t,n,r){if(e === i.topTouchStart){var a=r.target;a && !a.onclick && (a.onclick = o);}}};t.exports = a;},{112:112,15:15}],27:[function(e,t,n){\"use strict\";function r(e,t){if(null == e)throw new TypeError(\"Object.assign target cannot be null or undefined\");for(var n=Object(e),r=Object.prototype.hasOwnProperty,o=1;o < arguments.length;o++) {var i=arguments[o];if(null != i){var a=Object(i);for(var u in a) r.call(a,u) && (n[u] = a[u]);}}return n;}t.exports = r;},{}],28:[function(e,t,n){\"use strict\";var r=e(133),o=function o(e){var t=this;if(t.instancePool.length){var n=t.instancePool.pop();return (t.call(n,e),n);}return new t(e);},i=function i(e,t){var n=this;if(n.instancePool.length){var r=n.instancePool.pop();return (n.call(r,e,t),r);}return new n(e,t);},a=function a(e,t,n){var r=this;if(r.instancePool.length){var o=r.instancePool.pop();return (r.call(o,e,t,n),o);}return new r(e,t,n);},u=function u(e,t,n,r,o){var i=this;if(i.instancePool.length){var a=i.instancePool.pop();return (i.call(a,e,t,n,r,o),a);}return new i(e,t,n,r,o);},s=function s(e){var t=this;r(e instanceof t),e.destructor && e.destructor(),t.instancePool.length < t.poolSize && t.instancePool.push(e);},l=10,c=o,p=function p(e,t){var n=e;return (n.instancePool = [],n.getPooled = t || c,n.poolSize || (n.poolSize = l),n.release = s,n);},d={addPoolingTo:p,oneArgumentPooler:o,twoArgumentPooler:i,threeArgumentPooler:a,fiveArgumentPooler:u};t.exports = d;},{133:133}],29:[function(e,t,n){\"use strict\";var r=e(115),o={getDOMNode:function getDOMNode(){return r(this);}};t.exports = o;},{115:115}],30:[function(e,t,n){\"use strict\";function r(e){return (Object.prototype.hasOwnProperty.call(e,m) || (e[m] = f++,p[e[m]] = {}),p[e[m]]);}var o=e(15),i=e(17),a=e(18),u=e(59),s=e(102),l=e(27),c=e(134),p={},d=!1,f=0,h={topBlur:\"blur\",topChange:\"change\",topClick:\"click\",topCompositionEnd:\"compositionend\",topCompositionStart:\"compositionstart\",topCompositionUpdate:\"compositionupdate\",topContextMenu:\"contextmenu\",topCopy:\"copy\",topCut:\"cut\",topDoubleClick:\"dblclick\",topDrag:\"drag\",topDragEnd:\"dragend\",topDragEnter:\"dragenter\",topDragExit:\"dragexit\",topDragLeave:\"dragleave\",topDragOver:\"dragover\",topDragStart:\"dragstart\",topDrop:\"drop\",topFocus:\"focus\",topInput:\"input\",topKeyDown:\"keydown\",topKeyPress:\"keypress\",topKeyUp:\"keyup\",topMouseDown:\"mousedown\",topMouseMove:\"mousemove\",topMouseOut:\"mouseout\",topMouseOver:\"mouseover\",topMouseUp:\"mouseup\",topPaste:\"paste\",topScroll:\"scroll\",topSelectionChange:\"selectionchange\",topTextInput:\"textInput\",topTouchCancel:\"touchcancel\",topTouchEnd:\"touchend\",topTouchMove:\"touchmove\",topTouchStart:\"touchstart\",topWheel:\"wheel\"},m=\"_reactListenersID\" + String(Math.random()).slice(2),v=l({},u,{ReactEventListener:null,injection:{injectReactEventListener:function injectReactEventListener(e){e.setHandleTopLevel(v.handleTopLevel),v.ReactEventListener = e;}},setEnabled:function setEnabled(e){v.ReactEventListener && v.ReactEventListener.setEnabled(e);},isEnabled:function isEnabled(){return !(!v.ReactEventListener || !v.ReactEventListener.isEnabled());},listenTo:function listenTo(e,t){for(var n=t,i=r(n),u=a.registrationNameDependencies[e],s=o.topLevelTypes,l=0,p=u.length;p > l;l++) {var d=u[l];i.hasOwnProperty(d) && i[d] || (d === s.topWheel?c(\"wheel\")?v.ReactEventListener.trapBubbledEvent(s.topWheel,\"wheel\",n):c(\"mousewheel\")?v.ReactEventListener.trapBubbledEvent(s.topWheel,\"mousewheel\",n):v.ReactEventListener.trapBubbledEvent(s.topWheel,\"DOMMouseScroll\",n):d === s.topScroll?c(\"scroll\",!0)?v.ReactEventListener.trapCapturedEvent(s.topScroll,\"scroll\",n):v.ReactEventListener.trapBubbledEvent(s.topScroll,\"scroll\",v.ReactEventListener.WINDOW_HANDLE):d === s.topFocus || d === s.topBlur?(c(\"focus\",!0)?(v.ReactEventListener.trapCapturedEvent(s.topFocus,\"focus\",n),v.ReactEventListener.trapCapturedEvent(s.topBlur,\"blur\",n)):c(\"focusin\") && (v.ReactEventListener.trapBubbledEvent(s.topFocus,\"focusin\",n),v.ReactEventListener.trapBubbledEvent(s.topBlur,\"focusout\",n)),i[s.topBlur] = !0,i[s.topFocus] = !0):h.hasOwnProperty(d) && v.ReactEventListener.trapBubbledEvent(d,h[d],n),i[d] = !0);}},trapBubbledEvent:function trapBubbledEvent(e,t,n){return v.ReactEventListener.trapBubbledEvent(e,t,n);},trapCapturedEvent:function trapCapturedEvent(e,t,n){return v.ReactEventListener.trapCapturedEvent(e,t,n);},ensureScrollValueMonitoring:function ensureScrollValueMonitoring(){if(!d){var e=s.refreshScrollValues;v.ReactEventListener.monitorScrollValue(e),d = !0;}},eventNameDispatchConfigs:i.eventNameDispatchConfigs,registrationNameModules:i.registrationNameModules,putListener:i.putListener,getListener:i.getListener,deleteListener:i.deleteListener,deleteAllListeners:i.deleteAllListeners});t.exports = v;},{102:102,134:134,15:15,17:17,18:18,27:27,59:59}],31:[function(e,t,n){\"use strict\";var r=e(79),o=e(116),i=e(132),a=e(147),u={instantiateChildren:function instantiateChildren(e,t,n){var r=o(e);for(var a in r) if(r.hasOwnProperty(a)){var u=r[a],s=i(u,null);r[a] = s;}return r;},updateChildren:function updateChildren(e,t,n,u){var s=o(t);if(!s && !e)return null;var l;for(l in s) if(s.hasOwnProperty(l)){var c=e && e[l],p=c && c._currentElement,d=s[l];if(a(p,d))r.receiveComponent(c,d,n,u),s[l] = c;else {c && r.unmountComponent(c,l);var f=i(d,null);s[l] = f;}}for(l in e) !e.hasOwnProperty(l) || s && s.hasOwnProperty(l) || r.unmountComponent(e[l]);return s;},unmountChildren:function unmountChildren(e){for(var t in e) {var n=e[t];r.unmountComponent(n);}}};t.exports = u;},{116:116,132:132,147:147,79:79}],32:[function(e,t,n){\"use strict\";function r(e,t){this.forEachFunction = e,this.forEachContext = t;}function o(e,t,n,r){var o=e;o.forEachFunction.call(o.forEachContext,t,r);}function i(e,t,n){if(null == e)return e;var i=r.getPooled(t,n);f(e,o,i),r.release(i);}function a(e,t,n){this.mapResult = e,this.mapFunction = t,this.mapContext = n;}function u(e,t,n,r){var o=e,i=o.mapResult,a=!i.hasOwnProperty(n);if(a){var u=o.mapFunction.call(o.mapContext,t,r);i[n] = u;}}function s(e,t,n){if(null == e)return e;var r={},o=a.getPooled(r,t,n);return (f(e,u,o),a.release(o),d.create(r));}function l(e,t,n,r){return null;}function c(e,t){return f(e,l,null);}var p=e(28),d=e(61),f=e(149),h=(e(150),p.twoArgumentPooler),m=p.threeArgumentPooler;p.addPoolingTo(r,h),p.addPoolingTo(a,m);var v={forEach:i,map:s,count:c};t.exports = v;},{149:149,150:150,28:28,61:61}],33:[function(e,t,n){\"use strict\";function r(e,t){var n=D.hasOwnProperty(t)?D[t]:null;N.hasOwnProperty(t) && y(n === _.OVERRIDE_BASE),e.hasOwnProperty(t) && y(n === _.DEFINE_MANY || n === _.DEFINE_MANY_MERGED);}function o(e,t){if(t){y(\"function\" != typeof t),y(!d.isValidElement(t));var n=e.prototype;t.hasOwnProperty(b) && M.mixins(e,t.mixins);for(var o in t) if(t.hasOwnProperty(o) && o !== b){var i=t[o];if((r(n,o),M.hasOwnProperty(o)))M[o](e,i);else {var a=D.hasOwnProperty(o),l=n.hasOwnProperty(o),c=i && i.__reactDontBind,p=\"function\" == typeof i,f=p && !a && !l && !c;if(f)n.__reactAutoBindMap || (n.__reactAutoBindMap = {}),n.__reactAutoBindMap[o] = i,n[o] = i;else if(l){var h=D[o];y(a && (h === _.DEFINE_MANY_MERGED || h === _.DEFINE_MANY)),h === _.DEFINE_MANY_MERGED?n[o] = u(n[o],i):h === _.DEFINE_MANY && (n[o] = s(n[o],i));}else n[o] = i;}}}}function i(e,t){if(t)for(var n in t) {var r=t[n];if(t.hasOwnProperty(n)){var o=(n in M);y(!o);var i=(n in e);y(!i),e[n] = r;}}}function a(e,t){y(e && t && \"object\" == typeof e && \"object\" == typeof t);for(var n in t) t.hasOwnProperty(n) && (y(void 0 === e[n]),e[n] = t[n]);return e;}function u(e,t){return function(){var n=e.apply(this,arguments),r=t.apply(this,arguments);if(null == n)return r;if(null == r)return n;var o={};return (a(o,n),a(o,r),o);};}function s(e,t){return function(){e.apply(this,arguments),t.apply(this,arguments);};}function l(e,t){var n=t.bind(e);return n;}function c(e){for(var t in e.__reactAutoBindMap) if(e.__reactAutoBindMap.hasOwnProperty(t)){var n=e.__reactAutoBindMap[t];e[t] = l(e,f.guard(n,e.constructor.displayName + \".\" + t));}}var p=e(34),d=(e(39),e(55)),f=e(58),h=e(65),m=e(66),v=(e(75),e(74),e(84)),g=e(27),y=e(133),C=e(138),E=e(139),b=(e(150),E({mixins:null})),_=C({DEFINE_ONCE:null,DEFINE_MANY:null,OVERRIDE_BASE:null,DEFINE_MANY_MERGED:null}),x=[],D={mixins:_.DEFINE_MANY,statics:_.DEFINE_MANY,propTypes:_.DEFINE_MANY,contextTypes:_.DEFINE_MANY,childContextTypes:_.DEFINE_MANY,getDefaultProps:_.DEFINE_MANY_MERGED,getInitialState:_.DEFINE_MANY_MERGED,getChildContext:_.DEFINE_MANY_MERGED,render:_.DEFINE_ONCE,componentWillMount:_.DEFINE_MANY,componentDidMount:_.DEFINE_MANY,componentWillReceiveProps:_.DEFINE_MANY,shouldComponentUpdate:_.DEFINE_ONCE,componentWillUpdate:_.DEFINE_MANY,componentDidUpdate:_.DEFINE_MANY,componentWillUnmount:_.DEFINE_MANY,updateComponent:_.OVERRIDE_BASE},M={displayName:function displayName(e,t){e.displayName = t;},mixins:function mixins(e,t){if(t)for(var n=0;n < t.length;n++) o(e,t[n]);},childContextTypes:function childContextTypes(e,t){e.childContextTypes = g({},e.childContextTypes,t);},contextTypes:function contextTypes(e,t){e.contextTypes = g({},e.contextTypes,t);},getDefaultProps:function getDefaultProps(e,t){e.getDefaultProps?e.getDefaultProps = u(e.getDefaultProps,t):e.getDefaultProps = t;},propTypes:function propTypes(e,t){e.propTypes = g({},e.propTypes,t);},statics:function statics(e,t){i(e,t);}},N={replaceState:function replaceState(e,t){v.enqueueReplaceState(this,e),t && v.enqueueCallback(this,t);},isMounted:function isMounted(){var e=h.get(this);return e && e !== m.currentlyMountingInstance;},setProps:function setProps(e,t){v.enqueueSetProps(this,e),t && v.enqueueCallback(this,t);},replaceProps:function replaceProps(e,t){v.enqueueReplaceProps(this,e),t && v.enqueueCallback(this,t);}},I=function I(){};g(I.prototype,p.prototype,N);var T={createClass:function createClass(e){var t=function t(e,_t){this.__reactAutoBindMap && c(this),this.props = e,this.context = _t,this.state = null;var n=this.getInitialState?this.getInitialState():null;y(\"object\" == typeof n && !Array.isArray(n)),this.state = n;};t.prototype = new I(),t.prototype.constructor = t,x.forEach(o.bind(null,t)),o(t,e),t.getDefaultProps && (t.defaultProps = t.getDefaultProps()),y(t.prototype.render);for(var n in D) t.prototype[n] || (t.prototype[n] = null);return (t.type = t,t);},injection:{injectMixin:function injectMixin(e){x.push(e);}}};t.exports = T;},{133:133,138:138,139:139,150:150,27:27,34:34,39:39,55:55,58:58,65:65,66:66,74:74,75:75,84:84}],34:[function(e,t,n){\"use strict\";function r(e,t){this.props = e,this.context = t;}{var o=e(84),i=e(133);e(150);}r.prototype.setState = function(e,t){i(\"object\" == typeof e || \"function\" == typeof e || null == e),o.enqueueSetState(this,e),t && o.enqueueCallback(this,t);},r.prototype.forceUpdate = function(e){o.enqueueForceUpdate(this),e && o.enqueueCallback(this,e);};t.exports = r;},{133:133,150:150,84:84}],35:[function(e,t,n){\"use strict\";var r=e(44),o=e(68),i={processChildrenUpdates:r.dangerouslyProcessChildrenUpdates,replaceNodeWithMarkupByID:r.dangerouslyReplaceNodeWithMarkupByID,unmountIDFromEnvironment:function unmountIDFromEnvironment(e){o.purgeID(e);}};t.exports = i;},{44:44,68:68}],36:[function(e,t,n){\"use strict\";var r=e(133),o=!1,i={unmountIDFromEnvironment:null,replaceNodeWithMarkupByID:null,processChildrenUpdates:null,injection:{injectEnvironment:function injectEnvironment(e){r(!o),i.unmountIDFromEnvironment = e.unmountIDFromEnvironment,i.replaceNodeWithMarkupByID = e.replaceNodeWithMarkupByID,i.processChildrenUpdates = e.processChildrenUpdates,o = !0;}}};t.exports = i;},{133:133}],37:[function(e,t,n){\"use strict\";function r(e){var t=e._currentElement._owner || null;if(t){var n=t.getName();if(n)return \" Check the render method of `\" + n + \"`.\";}return \"\";}var o=e(36),i=e(38),a=e(39),u=e(55),s=(e(56),e(65)),l=e(66),c=e(71),p=e(73),d=e(75),f=(e(74),e(79)),h=e(85),m=e(27),v=e(113),g=e(133),y=e(147),C=(e(150),1),E={construct:function construct(e){this._currentElement = e,this._rootNodeID = null,this._instance = null,this._pendingElement = null,this._pendingStateQueue = null,this._pendingReplaceState = !1,this._pendingForceUpdate = !1,this._renderedComponent = null,this._context = null,this._mountOrder = 0,this._isTopLevel = !1,this._pendingCallbacks = null;},mountComponent:function mountComponent(e,t,n){this._context = n,this._mountOrder = C++,this._rootNodeID = e;var r=this._processProps(this._currentElement.props),o=this._processContext(this._currentElement._context),i=c.getComponentClassForElement(this._currentElement),a=new i(r,o);a.props = r,a.context = o,a.refs = v,this._instance = a,s.set(a,this);var u=a.state;void 0 === u && (a.state = u = null),g(\"object\" == typeof u && !Array.isArray(u)),this._pendingStateQueue = null,this._pendingReplaceState = !1,this._pendingForceUpdate = !1;var p,d,h=l.currentlyMountingInstance;l.currentlyMountingInstance = this;try{a.componentWillMount && (a.componentWillMount(),this._pendingStateQueue && (a.state = this._processPendingState(a.props,a.context))),p = this._getValidatedChildContext(n),d = this._renderValidatedComponent(p);}finally {l.currentlyMountingInstance = h;}this._renderedComponent = this._instantiateReactComponent(d,this._currentElement.type);var m=f.mountComponent(this._renderedComponent,e,t,this._mergeChildContext(n,p));return (a.componentDidMount && t.getReactMountReady().enqueue(a.componentDidMount,a),m);},unmountComponent:function unmountComponent(){var e=this._instance;if(e.componentWillUnmount){var t=l.currentlyUnmountingInstance;l.currentlyUnmountingInstance = this;try{e.componentWillUnmount();}finally {l.currentlyUnmountingInstance = t;}}f.unmountComponent(this._renderedComponent),this._renderedComponent = null,this._pendingStateQueue = null,this._pendingReplaceState = !1,this._pendingForceUpdate = !1,this._pendingCallbacks = null,this._pendingElement = null,this._context = null,this._rootNodeID = null,s.remove(e);},_setPropsInternal:function _setPropsInternal(e,t){var n=this._pendingElement || this._currentElement;this._pendingElement = u.cloneAndReplaceProps(n,m({},n.props,e)),h.enqueueUpdate(this,t);},_maskContext:function _maskContext(e){var t=null;if(\"string\" == typeof this._currentElement.type)return v;var n=this._currentElement.type.contextTypes;if(!n)return v;t = {};for(var r in n) t[r] = e[r];return t;},_processContext:function _processContext(e){var t=this._maskContext(e);return t;},_getValidatedChildContext:function _getValidatedChildContext(e){var t=this._instance,n=t.getChildContext && t.getChildContext();if(n){g(\"object\" == typeof t.constructor.childContextTypes);for(var r in n) g(r in t.constructor.childContextTypes);return n;}return null;},_mergeChildContext:function _mergeChildContext(e,t){return t?m({},e,t):e;},_processProps:function _processProps(e){return e;},_checkPropTypes:function _checkPropTypes(e,t,n){var o=this.getName();for(var i in e) if(e.hasOwnProperty(i)){var a;try{g(\"function\" == typeof e[i]),a = e[i](t,i,o,n);}catch(u) {a = u;}a instanceof Error && (r(this),n === d.prop);}},receiveComponent:function receiveComponent(e,t,n){var r=this._currentElement,o=this._context;this._pendingElement = null,this.updateComponent(t,r,e,o,n);},performUpdateIfNecessary:function performUpdateIfNecessary(e){null != this._pendingElement && f.receiveComponent(this,this._pendingElement || this._currentElement,e,this._context),(null !== this._pendingStateQueue || this._pendingForceUpdate) && this.updateComponent(e,this._currentElement,this._currentElement,this._context,this._context);},_warnIfContextsDiffer:function _warnIfContextsDiffer(e,t){e = this._maskContext(e),t = this._maskContext(t);for(var n=Object.keys(t).sort(),r=(this.getName() || \"ReactCompositeComponent\",0);r < n.length;r++) n[r];},updateComponent:function updateComponent(e,t,n,r,o){var i=this._instance,a=i.context,u=i.props;t !== n && (a = this._processContext(n._context),u = this._processProps(n.props),i.componentWillReceiveProps && i.componentWillReceiveProps(u,a));var s=this._processPendingState(u,a),l=this._pendingForceUpdate || !i.shouldComponentUpdate || i.shouldComponentUpdate(u,s,a);l?(this._pendingForceUpdate = !1,this._performComponentUpdate(n,u,s,a,e,o)):(this._currentElement = n,this._context = o,i.props = u,i.state = s,i.context = a);},_processPendingState:function _processPendingState(e,t){var n=this._instance,r=this._pendingStateQueue,o=this._pendingReplaceState;if((this._pendingReplaceState = !1,this._pendingStateQueue = null,!r))return n.state;if(o && 1 === r.length)return r[0];for(var i=m({},o?r[0]:n.state),a=o?1:0;a < r.length;a++) {var u=r[a];m(i,\"function\" == typeof u?u.call(n,i,e,t):u);}return i;},_performComponentUpdate:function _performComponentUpdate(e,t,n,r,o,i){var a=this._instance,u=a.props,s=a.state,l=a.context;a.componentWillUpdate && a.componentWillUpdate(t,n,r),this._currentElement = e,this._context = i,a.props = t,a.state = n,a.context = r,this._updateRenderedComponent(o,i),a.componentDidUpdate && o.getReactMountReady().enqueue(a.componentDidUpdate.bind(a,u,s,l),a);},_updateRenderedComponent:function _updateRenderedComponent(e,t){var n=this._renderedComponent,r=n._currentElement,o=this._getValidatedChildContext(),i=this._renderValidatedComponent(o);if(y(r,i))f.receiveComponent(n,i,e,this._mergeChildContext(t,o));else {var a=this._rootNodeID,u=n._rootNodeID;f.unmountComponent(n),this._renderedComponent = this._instantiateReactComponent(i,this._currentElement.type);var s=f.mountComponent(this._renderedComponent,a,e,this._mergeChildContext(t,o));this._replaceNodeWithMarkupByID(u,s);}},_replaceNodeWithMarkupByID:function _replaceNodeWithMarkupByID(e,t){o.replaceNodeWithMarkupByID(e,t);},_renderValidatedComponentWithoutOwnerOrContext:function _renderValidatedComponentWithoutOwnerOrContext(){var e=this._instance,t=e.render();return t;},_renderValidatedComponent:function _renderValidatedComponent(e){var t,n=i.current;i.current = this._mergeChildContext(this._currentElement._context,e),a.current = this;try{t = this._renderValidatedComponentWithoutOwnerOrContext();}finally {i.current = n,a.current = null;}return (g(null === t || t === !1 || u.isValidElement(t)),t);},attachRef:function attachRef(e,t){var n=this.getPublicInstance(),r=n.refs === v?n.refs = {}:n.refs;r[e] = t.getPublicInstance();},detachRef:function detachRef(e){var t=this.getPublicInstance().refs;delete t[e];},getName:function getName(){var e=this._currentElement.type,t=this._instance && this._instance.constructor;return e.displayName || t && t.displayName || e.name || t && t.name || null;},getPublicInstance:function getPublicInstance(){return this._instance;},_instantiateReactComponent:null};p.measureMethods(E,\"ReactCompositeComponent\",{mountComponent:\"mountComponent\",updateComponent:\"updateComponent\",_renderValidatedComponent:\"_renderValidatedComponent\"});var b={Mixin:E};t.exports = b;},{113:113,133:133,147:147,150:150,27:27,36:36,38:38,39:39,55:55,56:56,65:65,66:66,71:71,73:73,74:74,75:75,79:79,85:85}],38:[function(e,t,n){\"use strict\";var r=e(27),o=e(113),i=(e(150),{current:o,withContext:function withContext(e,t){var n,o=i.current;i.current = r({},o,e);try{n = t();}finally {i.current = o;}return n;}});t.exports = i;},{113:113,150:150,27:27}],39:[function(e,t,n){\"use strict\";var r={current:null};t.exports = r;},{}],40:[function(e,t,n){\"use strict\";function r(e){return o.createFactory(e);}var o=e(55),i=(e(56),e(140)),a=i({a:\"a\",abbr:\"abbr\",address:\"address\",area:\"area\",article:\"article\",aside:\"aside\",audio:\"audio\",b:\"b\",base:\"base\",bdi:\"bdi\",bdo:\"bdo\",big:\"big\",blockquote:\"blockquote\",body:\"body\",br:\"br\",button:\"button\",canvas:\"canvas\",caption:\"caption\",cite:\"cite\",code:\"code\",col:\"col\",colgroup:\"colgroup\",data:\"data\",datalist:\"datalist\",dd:\"dd\",del:\"del\",details:\"details\",dfn:\"dfn\",dialog:\"dialog\",div:\"div\",dl:\"dl\",dt:\"dt\",em:\"em\",embed:\"embed\",fieldset:\"fieldset\",figcaption:\"figcaption\",figure:\"figure\",footer:\"footer\",form:\"form\",h1:\"h1\",h2:\"h2\",h3:\"h3\",h4:\"h4\",h5:\"h5\",h6:\"h6\",head:\"head\",header:\"header\",hr:\"hr\",html:\"html\",i:\"i\",iframe:\"iframe\",img:\"img\",input:\"input\",ins:\"ins\",kbd:\"kbd\",keygen:\"keygen\",label:\"label\",legend:\"legend\",li:\"li\",link:\"link\",main:\"main\",map:\"map\",mark:\"mark\",menu:\"menu\",menuitem:\"menuitem\",meta:\"meta\",meter:\"meter\",nav:\"nav\",noscript:\"noscript\",object:\"object\",ol:\"ol\",optgroup:\"optgroup\",option:\"option\",output:\"output\",p:\"p\",param:\"param\",picture:\"picture\",pre:\"pre\",progress:\"progress\",q:\"q\",rp:\"rp\",rt:\"rt\",ruby:\"ruby\",s:\"s\",samp:\"samp\",script:\"script\",section:\"section\",select:\"select\",small:\"small\",source:\"source\",span:\"span\",strong:\"strong\",style:\"style\",sub:\"sub\",summary:\"summary\",sup:\"sup\",table:\"table\",tbody:\"tbody\",td:\"td\",textarea:\"textarea\",tfoot:\"tfoot\",th:\"th\",thead:\"thead\",time:\"time\",title:\"title\",tr:\"tr\",track:\"track\",u:\"u\",ul:\"ul\",\"var\":\"var\",video:\"video\",wbr:\"wbr\",circle:\"circle\",clipPath:\"clipPath\",defs:\"defs\",ellipse:\"ellipse\",g:\"g\",line:\"line\",linearGradient:\"linearGradient\",mask:\"mask\",path:\"path\",pattern:\"pattern\",polygon:\"polygon\",polyline:\"polyline\",radialGradient:\"radialGradient\",rect:\"rect\",stop:\"stop\",svg:\"svg\",text:\"text\",tspan:\"tspan\"},r);t.exports = a;},{140:140,55:55,56:56}],41:[function(e,t,n){\"use strict\";var r=e(2),o=e(29),i=e(33),a=e(55),u=e(138),s=a.createFactory(\"button\"),l=u({onClick:!0,onDoubleClick:!0,onMouseDown:!0,onMouseMove:!0,onMouseUp:!0,onClickCapture:!0,onDoubleClickCapture:!0,onMouseDownCapture:!0,onMouseMoveCapture:!0,onMouseUpCapture:!0}),c=i.createClass({displayName:\"ReactDOMButton\",tagName:\"BUTTON\",mixins:[r,o],render:function render(){var e={};for(var t in this.props) !this.props.hasOwnProperty(t) || this.props.disabled && l[t] || (e[t] = this.props[t]);return s(e,this.props.children);}});t.exports = c;},{138:138,2:2,29:29,33:33,55:55}],42:[function(e,t,n){\"use strict\";function r(e){e && (null != e.dangerouslySetInnerHTML && (g(null == e.children),g(\"object\" == typeof e.dangerouslySetInnerHTML && \"__html\" in e.dangerouslySetInnerHTML)),g(null == e.style || \"object\" == typeof e.style));}function o(e,t,n,r){var o=d.findReactContainerForID(e);if(o){var i=o.nodeType === D?o.ownerDocument:o;E(t,i);}r.getPutListenerQueue().enqueuePutListener(e,t,n);}function i(e){P.call(T,e) || (g(I.test(e)),T[e] = !0);}function a(e){i(e),this._tag = e,this._renderedChildren = null,this._previousStyleCopy = null,this._rootNodeID = null;}var u=e(5),s=e(10),l=e(11),c=e(30),p=e(35),d=e(68),f=e(69),h=e(73),m=e(27),v=e(114),g=e(133),y=(e(134),e(139)),C=(e(150),c.deleteListener),E=c.listenTo,b=c.registrationNameModules,_={string:!0,number:!0},x=y({style:null}),D=1,M=null,N={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},I=/^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/,T={},P=({}).hasOwnProperty;a.displayName = \"ReactDOMComponent\",a.Mixin = {construct:function construct(e){this._currentElement = e;},mountComponent:function mountComponent(e,t,n){this._rootNodeID = e,r(this._currentElement.props);var o=N[this._tag]?\"\":\"</\" + this._tag + \">\";return this._createOpenTagMarkupAndPutListeners(t) + this._createContentMarkup(t,n) + o;},_createOpenTagMarkupAndPutListeners:function _createOpenTagMarkupAndPutListeners(e){var t=this._currentElement.props,n=\"<\" + this._tag;for(var r in t) if(t.hasOwnProperty(r)){var i=t[r];if(null != i)if(b.hasOwnProperty(r))o(this._rootNodeID,r,i,e);else {r === x && (i && (i = this._previousStyleCopy = m({},t.style)),i = u.createMarkupForStyles(i));var a=l.createMarkupForProperty(r,i);a && (n += \" \" + a);}}if(e.renderToStaticMarkup)return n + \">\";var s=l.createMarkupForID(this._rootNodeID);return n + \" \" + s + \">\";},_createContentMarkup:function _createContentMarkup(e,t){var n=\"\";(\"listing\" === this._tag || \"pre\" === this._tag || \"textarea\" === this._tag) && (n = \"\\n\");var r=this._currentElement.props,o=r.dangerouslySetInnerHTML;if(null != o){if(null != o.__html)return n + o.__html;}else {var i=_[typeof r.children]?r.children:null,a=null != i?null:r.children;if(null != i)return n + v(i);if(null != a){var u=this.mountChildren(a,e,t);return n + u.join(\"\");}}return n;},receiveComponent:function receiveComponent(e,t,n){var r=this._currentElement;this._currentElement = e,this.updateComponent(t,r,e,n);},updateComponent:function updateComponent(e,t,n,o){r(this._currentElement.props),this._updateDOMProperties(t.props,e),this._updateDOMChildren(t.props,e,o);},_updateDOMProperties:function _updateDOMProperties(e,t){var n,r,i,a=this._currentElement.props;for(n in e) if(!a.hasOwnProperty(n) && e.hasOwnProperty(n))if(n === x){var u=this._previousStyleCopy;for(r in u) u.hasOwnProperty(r) && (i = i || {},i[r] = \"\");this._previousStyleCopy = null;}else b.hasOwnProperty(n)?C(this._rootNodeID,n):(s.isStandardName[n] || s.isCustomAttribute(n)) && M.deletePropertyByID(this._rootNodeID,n);for(n in a) {var l=a[n],c=n === x?this._previousStyleCopy:e[n];if(a.hasOwnProperty(n) && l !== c)if(n === x)if((l?l = this._previousStyleCopy = m({},l):this._previousStyleCopy = null,c)){for(r in c) !c.hasOwnProperty(r) || l && l.hasOwnProperty(r) || (i = i || {},i[r] = \"\");for(r in l) l.hasOwnProperty(r) && c[r] !== l[r] && (i = i || {},i[r] = l[r]);}else i = l;else b.hasOwnProperty(n)?o(this._rootNodeID,n,l,t):(s.isStandardName[n] || s.isCustomAttribute(n)) && M.updatePropertyByID(this._rootNodeID,n,l);}i && M.updateStylesByID(this._rootNodeID,i);},_updateDOMChildren:function _updateDOMChildren(e,t,n){var r=this._currentElement.props,o=_[typeof e.children]?e.children:null,i=_[typeof r.children]?r.children:null,a=e.dangerouslySetInnerHTML && e.dangerouslySetInnerHTML.__html,u=r.dangerouslySetInnerHTML && r.dangerouslySetInnerHTML.__html,s=null != o?null:e.children,l=null != i?null:r.children,c=null != o || null != a,p=null != i || null != u;null != s && null == l?this.updateChildren(null,t,n):c && !p && this.updateTextContent(\"\"),null != i?o !== i && this.updateTextContent(\"\" + i):null != u?a !== u && M.updateInnerHTMLByID(this._rootNodeID,u):null != l && this.updateChildren(l,t,n);},unmountComponent:function unmountComponent(){this.unmountChildren(),c.deleteAllListeners(this._rootNodeID),p.unmountIDFromEnvironment(this._rootNodeID),this._rootNodeID = null;}},h.measureMethods(a,\"ReactDOMComponent\",{mountComponent:\"mountComponent\",updateComponent:\"updateComponent\"}),m(a.prototype,a.Mixin,f.Mixin),a.injection = {injectIDOperations:function injectIDOperations(e){a.BackendIDOperations = M = e;}},t.exports = a;},{10:10,11:11,114:114,133:133,134:134,139:139,150:150,27:27,30:30,35:35,5:5,68:68,69:69,73:73}],43:[function(e,t,n){\"use strict\";var r=e(15),o=e(25),i=e(29),a=e(33),u=e(55),s=u.createFactory(\"form\"),l=a.createClass({displayName:\"ReactDOMForm\",tagName:\"FORM\",mixins:[i,o],render:function render(){return s(this.props);},componentDidMount:function componentDidMount(){this.trapBubbledEvent(r.topLevelTypes.topReset,\"reset\"),this.trapBubbledEvent(r.topLevelTypes.topSubmit,\"submit\");}});t.exports = l;},{15:15,25:25,29:29,33:33,55:55}],44:[function(e,t,n){\"use strict\";var r=e(5),o=e(9),i=e(11),a=e(68),u=e(73),s=e(133),l=e(144),c={dangerouslySetInnerHTML:\"`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.\",style:\"`style` must be set using `updateStylesByID()`.\"},p={updatePropertyByID:function updatePropertyByID(e,t,n){var r=a.getNode(e);s(!c.hasOwnProperty(t)),null != n?i.setValueForProperty(r,t,n):i.deleteValueForProperty(r,t);},deletePropertyByID:function deletePropertyByID(e,t,n){var r=a.getNode(e);s(!c.hasOwnProperty(t)),i.deleteValueForProperty(r,t,n);},updateStylesByID:function updateStylesByID(e,t){var n=a.getNode(e);r.setValueForStyles(n,t);},updateInnerHTMLByID:function updateInnerHTMLByID(e,t){var n=a.getNode(e);l(n,t);},updateTextContentByID:function updateTextContentByID(e,t){var n=a.getNode(e);o.updateTextContent(n,t);},dangerouslyReplaceNodeWithMarkupByID:function dangerouslyReplaceNodeWithMarkupByID(e,t){var n=a.getNode(e);o.dangerouslyReplaceNodeWithMarkup(n,t);},dangerouslyProcessChildrenUpdates:function dangerouslyProcessChildrenUpdates(e,t){for(var n=0;n < e.length;n++) e[n].parentNode = a.getNode(e[n].parentID);o.processUpdates(e,t);}};u.measureMethods(p,\"ReactDOMIDOperations\",{updatePropertyByID:\"updatePropertyByID\",deletePropertyByID:\"deletePropertyByID\",updateStylesByID:\"updateStylesByID\",updateInnerHTMLByID:\"updateInnerHTMLByID\",updateTextContentByID:\"updateTextContentByID\",dangerouslyReplaceNodeWithMarkupByID:\"dangerouslyReplaceNodeWithMarkupByID\",dangerouslyProcessChildrenUpdates:\"dangerouslyProcessChildrenUpdates\"}),t.exports = p;},{11:11,133:133,144:144,5:5,68:68,73:73,9:9}],45:[function(e,t,n){\"use strict\";var r=e(15),o=e(25),i=e(29),a=e(33),u=e(55),s=u.createFactory(\"iframe\"),l=a.createClass({displayName:\"ReactDOMIframe\",tagName:\"IFRAME\",mixins:[i,o],render:function render(){return s(this.props);},componentDidMount:function componentDidMount(){this.trapBubbledEvent(r.topLevelTypes.topLoad,\"load\");}});t.exports = l;},{15:15,25:25,29:29,33:33,55:55}],46:[function(e,t,n){\"use strict\";var r=e(15),o=e(25),i=e(29),a=e(33),u=e(55),s=u.createFactory(\"img\"),l=a.createClass({displayName:\"ReactDOMImg\",tagName:\"IMG\",mixins:[i,o],render:function render(){return s(this.props);},componentDidMount:function componentDidMount(){this.trapBubbledEvent(r.topLevelTypes.topLoad,\"load\"),this.trapBubbledEvent(r.topLevelTypes.topError,\"error\");}});t.exports = l;},{15:15,25:25,29:29,33:33,55:55}],47:[function(e,t,n){\"use strict\";function r(){this.isMounted() && this.forceUpdate();}var o=e(2),i=e(11),a=e(24),u=e(29),s=e(33),l=e(55),c=e(68),p=e(85),d=e(27),f=e(133),h=l.createFactory(\"input\"),m={},v=s.createClass({displayName:\"ReactDOMInput\",tagName:\"INPUT\",mixins:[o,a.Mixin,u],getInitialState:function getInitialState(){var e=this.props.defaultValue;return {initialChecked:this.props.defaultChecked || !1,initialValue:null != e?e:null};},render:function render(){var e=d({},this.props);e.defaultChecked = null,e.defaultValue = null;var t=a.getValue(this);e.value = null != t?t:this.state.initialValue;var n=a.getChecked(this);return (e.checked = null != n?n:this.state.initialChecked,e.onChange = this._handleChange,h(e,this.props.children));},componentDidMount:function componentDidMount(){var e=c.getID(this.getDOMNode());m[e] = this;},componentWillUnmount:function componentWillUnmount(){var e=this.getDOMNode(),t=c.getID(e);delete m[t];},componentDidUpdate:function componentDidUpdate(e,t,n){var r=this.getDOMNode();null != this.props.checked && i.setValueForProperty(r,\"checked\",this.props.checked || !1);var o=a.getValue(this);null != o && i.setValueForProperty(r,\"value\",\"\" + o);},_handleChange:function _handleChange(e){var t,n=a.getOnChange(this);n && (t = n.call(this,e)),p.asap(r,this);var o=this.props.name;if(\"radio\" === this.props.type && null != o){for(var i=this.getDOMNode(),u=i;u.parentNode;) u = u.parentNode;for(var s=u.querySelectorAll(\"input[name=\" + JSON.stringify(\"\" + o) + '][type=\"radio\"]'),l=0,d=s.length;d > l;l++) {var h=s[l];if(h !== i && h.form === i.form){var v=c.getID(h);f(v);var g=m[v];f(g),p.asap(r,g);}}}return t;}});t.exports = v;},{11:11,133:133,2:2,24:24,27:27,29:29,33:33,55:55,68:68,85:85}],48:[function(e,t,n){\"use strict\";var r=e(29),o=e(33),i=e(55),a=(e(150),i.createFactory(\"option\")),u=o.createClass({displayName:\"ReactDOMOption\",tagName:\"OPTION\",mixins:[r],componentWillMount:function componentWillMount(){},render:function render(){return a(this.props,this.props.children);}});t.exports = u;},{150:150,29:29,33:33,55:55}],49:[function(e,t,n){\"use strict\";function r(){if(this._pendingUpdate){this._pendingUpdate = !1;var e=u.getValue(this);null != e && this.isMounted() && i(this,e);}}function o(e,t,n){if(null == e[t])return null;if(e.multiple){if(!Array.isArray(e[t]))return new Error(\"The `\" + t + \"` prop supplied to <select> must be an array if `multiple` is true.\");}else if(Array.isArray(e[t]))return new Error(\"The `\" + t + \"` prop supplied to <select> must be a scalar value if `multiple` is false.\");}function i(e,t){var n,r,o,i=e.getDOMNode().options;if(e.props.multiple){for(n = {},r = 0,o = t.length;o > r;r++) n[\"\" + t[r]] = !0;for(r = 0,o = i.length;o > r;r++) {var a=n.hasOwnProperty(i[r].value);i[r].selected !== a && (i[r].selected = a);}}else {for(n = \"\" + t,r = 0,o = i.length;o > r;r++) if(i[r].value === n)return void (i[r].selected = !0);i.length && (i[0].selected = !0);}}var a=e(2),u=e(24),s=e(29),l=e(33),c=e(55),p=e(85),d=e(27),f=c.createFactory(\"select\"),h=l.createClass({displayName:\"ReactDOMSelect\",tagName:\"SELECT\",mixins:[a,u.Mixin,s],propTypes:{defaultValue:o,value:o},render:function render(){var e=d({},this.props);return (e.onChange = this._handleChange,e.value = null,f(e,this.props.children));},componentWillMount:function componentWillMount(){this._pendingUpdate = !1;},componentDidMount:function componentDidMount(){var e=u.getValue(this);null != e?i(this,e):null != this.props.defaultValue && i(this,this.props.defaultValue);},componentDidUpdate:function componentDidUpdate(e){var t=u.getValue(this);null != t?(this._pendingUpdate = !1,i(this,t)):!e.multiple != !this.props.multiple && (null != this.props.defaultValue?i(this,this.props.defaultValue):i(this,this.props.multiple?[]:\"\"));},_handleChange:function _handleChange(e){var t,n=u.getOnChange(this);return (n && (t = n.call(this,e)),this._pendingUpdate = !0,p.asap(r,this),t);}});t.exports = h;},{2:2,24:24,27:27,29:29,33:33,55:55,85:85}],50:[function(e,t,n){\"use strict\";function r(e,t,n,r){return e === n && t === r;}function o(e){var t=document.selection,n=t.createRange(),r=n.text.length,o=n.duplicate();o.moveToElementText(e),o.setEndPoint(\"EndToStart\",n);var i=o.text.length,a=i + r;return {start:i,end:a};}function i(e){var t=window.getSelection && window.getSelection();if(!t || 0 === t.rangeCount)return null;var n=t.anchorNode,o=t.anchorOffset,i=t.focusNode,a=t.focusOffset,u=t.getRangeAt(0),s=r(t.anchorNode,t.anchorOffset,t.focusNode,t.focusOffset),l=s?0:u.toString().length,c=u.cloneRange();c.selectNodeContents(e),c.setEnd(u.startContainer,u.startOffset);var p=r(c.startContainer,c.startOffset,c.endContainer,c.endOffset),d=p?0:c.toString().length,f=d + l,h=document.createRange();h.setStart(n,o),h.setEnd(i,a);var m=h.collapsed;return {start:m?f:d,end:m?d:f};}function a(e,t){var n,r,o=document.selection.createRange().duplicate();\"undefined\" == typeof t.end?(n = t.start,r = n):t.start > t.end?(n = t.end,r = t.start):(n = t.start,r = t.end),o.moveToElementText(e),o.moveStart(\"character\",n),o.setEndPoint(\"EndToStart\",o),o.moveEnd(\"character\",r - n),o.select();}function u(e,t){if(window.getSelection){var n=window.getSelection(),r=e[c()].length,o=Math.min(t.start,r),i=\"undefined\" == typeof t.end?o:Math.min(t.end,r);if(!n.extend && o > i){var a=i;i = o,o = a;}var u=l(e,o),s=l(e,i);if(u && s){var p=document.createRange();p.setStart(u.node,u.offset),n.removeAllRanges(),o > i?(n.addRange(p),n.extend(s.node,s.offset)):(p.setEnd(s.node,s.offset),n.addRange(p));}}}var s=e(21),l=e(126),c=e(128),p=s.canUseDOM && \"selection\" in document && !(\"getSelection\" in window),d={getOffsets:p?o:i,setOffsets:p?a:u};t.exports = d;},{126:126,128:128,21:21}],51:[function(e,t,n){\"use strict\";var r=e(11),o=e(35),i=e(42),a=e(27),u=e(114),s=function s(e){};a(s.prototype,{construct:function construct(e){this._currentElement = e,this._stringText = \"\" + e,this._rootNodeID = null,this._mountIndex = 0;},mountComponent:function mountComponent(e,t,n){this._rootNodeID = e;var o=u(this._stringText);return t.renderToStaticMarkup?o:\"<span \" + r.createMarkupForID(e) + \">\" + o + \"</span>\";},receiveComponent:function receiveComponent(e,t){if(e !== this._currentElement){this._currentElement = e;var n=\"\" + e;n !== this._stringText && (this._stringText = n,i.BackendIDOperations.updateTextContentByID(this._rootNodeID,n));}},unmountComponent:function unmountComponent(){o.unmountIDFromEnvironment(this._rootNodeID);}}),t.exports = s;},{11:11,114:114,27:27,35:35,42:42}],52:[function(e,t,n){\"use strict\";function r(){this.isMounted() && this.forceUpdate();}var o=e(2),i=e(11),a=e(24),u=e(29),s=e(33),l=e(55),c=e(85),p=e(27),d=e(133),f=(e(150),l.createFactory(\"textarea\")),h=s.createClass({displayName:\"ReactDOMTextarea\",tagName:\"TEXTAREA\",mixins:[o,a.Mixin,u],getInitialState:function getInitialState(){var e=this.props.defaultValue,t=this.props.children;null != t && (d(null == e),Array.isArray(t) && (d(t.length <= 1),t = t[0]),e = \"\" + t),null == e && (e = \"\");var n=a.getValue(this);return {initialValue:\"\" + (null != n?n:e)};},render:function render(){var e=p({},this.props);return (d(null == e.dangerouslySetInnerHTML),e.defaultValue = null,e.value = null,e.onChange = this._handleChange,f(e,this.state.initialValue));},componentDidUpdate:function componentDidUpdate(e,t,n){var r=a.getValue(this);if(null != r){var o=this.getDOMNode();i.setValueForProperty(o,\"value\",\"\" + r);}},_handleChange:function _handleChange(e){var t,n=a.getOnChange(this);return (n && (t = n.call(this,e)),c.asap(r,this),t);}});t.exports = h;},{11:11,133:133,150:150,2:2,24:24,27:27,29:29,33:33,55:55,85:85}],53:[function(e,t,n){\"use strict\";function r(){this.reinitializeTransaction();}var o=e(85),i=e(101),a=e(27),u=e(112),s={initialize:u,close:function close(){d.isBatchingUpdates = !1;}},l={initialize:u,close:o.flushBatchedUpdates.bind(o)},c=[l,s];a(r.prototype,i.Mixin,{getTransactionWrappers:function getTransactionWrappers(){return c;}});var p=new r(),d={isBatchingUpdates:!1,batchedUpdates:function batchedUpdates(e,t,n,r,o){var i=d.isBatchingUpdates;d.isBatchingUpdates = !0,i?e(t,n,r,o):p.perform(e,null,t,n,r,o);}};t.exports = d;},{101:101,112:112,27:27,85:85}],54:[function(e,t,n){\"use strict\";function r(e){return h.createClass({tagName:e.toUpperCase(),render:function render(){return new T(e,null,null,null,null,this.props);}});}function o(){R.EventEmitter.injectReactEventListener(P),R.EventPluginHub.injectEventPluginOrder(s),R.EventPluginHub.injectInstanceHandle(w),R.EventPluginHub.injectMount(O),R.EventPluginHub.injectEventPluginsByName({SimpleEventPlugin:L,EnterLeaveEventPlugin:l,ChangeEventPlugin:a,MobileSafariClickEventPlugin:d,SelectEventPlugin:A,BeforeInputEventPlugin:i}),R.NativeComponent.injectGenericComponentClass(g),R.NativeComponent.injectTextComponentClass(I),R.NativeComponent.injectAutoWrapper(r),R.Class.injectMixin(f),R.NativeComponent.injectComponentClasses({button:y,form:C,iframe:_,img:E,input:x,option:D,select:M,textarea:N,html:F(\"html\"),head:F(\"head\"),body:F(\"body\")}),R.DOMProperty.injectDOMPropertyConfig(p),R.DOMProperty.injectDOMPropertyConfig(U),R.EmptyComponent.injectEmptyComponent(\"noscript\"),R.Updates.injectReconcileTransaction(S),R.Updates.injectBatchingStrategy(v),R.RootIndex.injectCreateReactRootIndex(c.canUseDOM?u.createReactRootIndex:k.createReactRootIndex),R.Component.injectEnvironment(m),R.DOMComponent.injectIDOperations(b);}var i=e(3),a=e(7),u=e(8),s=e(13),l=e(14),c=e(21),p=e(23),d=e(26),f=e(29),h=e(33),m=e(35),v=e(53),g=e(42),y=e(41),C=e(43),E=e(46),b=e(44),_=e(45),x=e(47),D=e(48),M=e(49),N=e(52),I=e(51),T=e(55),P=e(60),R=e(62),w=e(64),O=e(68),S=e(78),A=e(87),k=e(88),L=e(89),U=e(86),F=e(109);t.exports = {inject:o};},{109:109,13:13,14:14,21:21,23:23,26:26,29:29,3:3,33:33,35:35,41:41,42:42,43:43,44:44,45:45,46:46,47:47,48:48,49:49,51:51,52:52,53:53,55:55,60:60,62:62,64:64,68:68,7:7,78:78,8:8,86:86,87:87,88:88,89:89}],55:[function(e,t,n){\"use strict\";var r=e(38),o=e(39),i=e(27),a=(e(150),{key:!0,ref:!0}),u=function u(e,t,n,r,o,i){this.type = e,this.key = t,this.ref = n,this._owner = r,this._context = o,this.props = i;};u.prototype = {_isReactElement:!0},u.createElement = function(e,t,n){var i,s={},l=null,c=null;if(null != t){c = void 0 === t.ref?null:t.ref,l = void 0 === t.key?null:\"\" + t.key;for(i in t) t.hasOwnProperty(i) && !a.hasOwnProperty(i) && (s[i] = t[i]);}var p=arguments.length - 2;if(1 === p)s.children = n;else if(p > 1){for(var d=Array(p),f=0;p > f;f++) d[f] = arguments[f + 2];s.children = d;}if(e && e.defaultProps){var h=e.defaultProps;for(i in h) \"undefined\" == typeof s[i] && (s[i] = h[i]);}return new u(e,l,c,o.current,r.current,s);},u.createFactory = function(e){var t=u.createElement.bind(null,e);return (t.type = e,t);},u.cloneAndReplaceProps = function(e,t){var n=new u(e.type,e.key,e.ref,e._owner,e._context,t);return n;},u.cloneElement = function(e,t,n){var r,s=i({},e.props),l=e.key,c=e.ref,p=e._owner;if(null != t){void 0 !== t.ref && (c = t.ref,p = o.current),void 0 !== t.key && (l = \"\" + t.key);for(r in t) t.hasOwnProperty(r) && !a.hasOwnProperty(r) && (s[r] = t[r]);}var d=arguments.length - 2;if(1 === d)s.children = n;else if(d > 1){for(var f=Array(d),h=0;d > h;h++) f[h] = arguments[h + 2];s.children = f;}return new u(e.type,l,c,p,e._context,s);},u.isValidElement = function(e){var t=!(!e || !e._isReactElement);return t;},t.exports = u;},{150:150,27:27,38:38,39:39}],56:[function(e,t,n){\"use strict\";function r(){if(y.current){var e=y.current.getName();if(e)return \" Check the render method of `\" + e + \"`.\";}return \"\";}function o(e){var t=e && e.getPublicInstance();if(!t)return void 0;var n=t.constructor;return n?n.displayName || n.name || void 0:void 0;}function i(){var e=y.current;return e && o(e) || void 0;}function a(e,t){e._store.validated || null != e.key || (e._store.validated = !0,s('Each child in an array or iterator should have a unique \"key\" prop.',e,t));}function u(e,t,n){D.test(e) && s(\"Child objects should have non-numeric keys so ordering is preserved.\",t,n);}function s(e,t,n){var r=i(),a=\"string\" == typeof n?n:n.displayName || n.name,u=r || a,s=_[e] || (_[e] = {});if(!s.hasOwnProperty(u)){s[u] = !0;var l=\"\";if(t && t._owner && t._owner !== y.current){var c=o(t._owner);l = \" It was passed a child from \" + c + \".\";}}}function l(e,t){if(Array.isArray(e))for(var n=0;n < e.length;n++) {var r=e[n];m.isValidElement(r) && a(r,t);}else if(m.isValidElement(e))e._store.validated = !0;else if(e){var o=E(e);if(o){if(o !== e.entries)for(var i,s=o.call(e);!(i = s.next()).done;) m.isValidElement(i.value) && a(i.value,t);}else if(\"object\" == typeof e){var l=v.extractIfFragment(e);for(var c in l) l.hasOwnProperty(c) && u(c,l[c],t);}}}function c(e,t,n,o){for(var i in t) if(t.hasOwnProperty(i)){var a;try{b(\"function\" == typeof t[i]),a = t[i](n,i,e,o);}catch(u) {a = u;}a instanceof Error && !(a.message in x) && (x[a.message] = !0,r(this));}}function p(e,t){var n=t.type,r=\"string\" == typeof n?n:n.displayName,o=t._owner?t._owner.getPublicInstance().constructor.displayName:null,i=e + \"|\" + r + \"|\" + o;if(!M.hasOwnProperty(i)){M[i] = !0;var a=\"\";r && (a = \" <\" + r + \" />\");var u=\"\";o && (u = \" The element was created by \" + o + \".\");}}function d(e,t){return e !== e?t !== t:0 === e && 0 === t?1 / e === 1 / t:e === t;}function f(e){if(e._store){var t=e._store.originalProps,n=e.props;for(var r in n) n.hasOwnProperty(r) && (t.hasOwnProperty(r) && d(t[r],n[r]) || (p(r,e),t[r] = n[r]));}}function h(e){if(null != e.type){var t=C.getComponentClassForElement(e),n=t.displayName || t.name;t.propTypes && c(n,t.propTypes,e.props,g.prop),\"function\" == typeof t.getDefaultProps;}}var m=e(55),v=e(61),g=e(75),y=(e(74),e(39)),C=e(71),E=e(124),b=e(133),_=(e(150),{}),x={},D=/^\\d+$/,M={},N={checkAndWarnForMutatedProps:f,createElement:function createElement(e,t,n){var r=m.createElement.apply(this,arguments);if(null == r)return r;for(var o=2;o < arguments.length;o++) l(arguments[o],e);return (h(r),r);},createFactory:function createFactory(e){var t=N.createElement.bind(null,e);return (t.type = e,t);},cloneElement:function cloneElement(e,t,n){for(var r=m.cloneElement.apply(this,arguments),o=2;o < arguments.length;o++) l(arguments[o],r.type);return (h(r),r);}};t.exports = N;},{124:124,133:133,150:150,39:39,55:55,61:61,71:71,74:74,75:75}],57:[function(e,t,n){\"use strict\";function r(e){c[e] = !0;}function o(e){delete c[e];}function i(e){return !!c[e];}var a,u=e(55),s=e(65),l=e(133),c={},p={injectEmptyComponent:function injectEmptyComponent(e){a = u.createFactory(e);}},d=function d(){};d.prototype.componentDidMount = function(){var e=s.get(this);e && r(e._rootNodeID);},d.prototype.componentWillUnmount = function(){var e=s.get(this);e && o(e._rootNodeID);},d.prototype.render = function(){return (l(a),a());};var f=u.createElement(d),h={emptyElement:f,injection:p,isNullComponentID:i};t.exports = h;},{133:133,55:55,65:65}],58:[function(e,t,n){\"use strict\";var r={guard:function guard(e,t){return e;}};t.exports = r;},{}],59:[function(e,t,n){\"use strict\";function r(e){o.enqueueEvents(e),o.processEventQueue();}var o=e(17),i={handleTopLevel:function handleTopLevel(e,t,n,i){var a=o.extractEvents(e,t,n,i);r(a);}};t.exports = i;},{17:17}],60:[function(e,t,n){\"use strict\";function r(e){var t=p.getID(e),n=c.getReactRootIDFromNodeID(t),r=p.findReactContainerForID(n),o=p.getFirstReactDOM(r);return o;}function o(e,t){this.topLevelType = e,this.nativeEvent = t,this.ancestors = [];}function i(e){for(var t=p.getFirstReactDOM(h(e.nativeEvent)) || window,n=t;n;) e.ancestors.push(n),n = r(n);for(var o=0,i=e.ancestors.length;i > o;o++) {t = e.ancestors[o];var a=p.getID(t) || \"\";v._handleTopLevel(e.topLevelType,t,a,e.nativeEvent);}}function a(e){var t=m(window);e(t);}var u=e(16),s=e(21),l=e(28),c=e(64),p=e(68),d=e(85),f=e(27),h=e(123),m=e(129);f(o.prototype,{destructor:function destructor(){this.topLevelType = null,this.nativeEvent = null,this.ancestors.length = 0;}}),l.addPoolingTo(o,l.twoArgumentPooler);var v={_enabled:!0,_handleTopLevel:null,WINDOW_HANDLE:s.canUseDOM?window:null,setHandleTopLevel:function setHandleTopLevel(e){v._handleTopLevel = e;},setEnabled:function setEnabled(e){v._enabled = !!e;},isEnabled:function isEnabled(){return v._enabled;},trapBubbledEvent:function trapBubbledEvent(e,t,n){var r=n;return r?u.listen(r,t,v.dispatchEvent.bind(null,e)):null;},trapCapturedEvent:function trapCapturedEvent(e,t,n){var r=n;return r?u.capture(r,t,v.dispatchEvent.bind(null,e)):null;},monitorScrollValue:function monitorScrollValue(e){var t=a.bind(null,e);u.listen(window,\"scroll\",t);},dispatchEvent:function dispatchEvent(e,t){if(v._enabled){var n=o.getPooled(e,t);try{d.batchedUpdates(i,n);}finally {o.release(n);}}}};t.exports = v;},{123:123,129:129,16:16,21:21,27:27,28:28,64:64,68:68,85:85}],61:[function(e,t,n){\"use strict\";var r=(e(55),e(150),{create:function create(e){return e;},extract:function extract(e){return e;},extractIfFragment:function extractIfFragment(e){return e;}});t.exports = r;},{150:150,55:55}],62:[function(e,t,n){\"use strict\";var r=e(10),o=e(17),i=e(36),a=e(33),u=e(57),s=e(30),l=e(71),c=e(42),p=e(73),d=e(81),f=e(85),h={Component:i.injection,Class:a.injection,DOMComponent:c.injection,DOMProperty:r.injection,EmptyComponent:u.injection,EventPluginHub:o.injection,EventEmitter:s.injection,NativeComponent:l.injection,Perf:p.injection,RootIndex:d.injection,Updates:f.injection};t.exports = h;},{10:10,17:17,30:30,33:33,36:36,42:42,57:57,71:71,73:73,81:81,85:85}],63:[function(e,t,n){\"use strict\";function r(e){return i(document.documentElement,e);}var o=e(50),i=e(107),a=e(117),u=e(119),s={hasSelectionCapabilities:function hasSelectionCapabilities(e){return e && (\"INPUT\" === e.nodeName && \"text\" === e.type || \"TEXTAREA\" === e.nodeName || \"true\" === e.contentEditable);},getSelectionInformation:function getSelectionInformation(){var e=u();return {focusedElem:e,selectionRange:s.hasSelectionCapabilities(e)?s.getSelection(e):null};},restoreSelection:function restoreSelection(e){var t=u(),n=e.focusedElem,o=e.selectionRange;t !== n && r(n) && (s.hasSelectionCapabilities(n) && s.setSelection(n,o),a(n));},getSelection:function getSelection(e){var t;if(\"selectionStart\" in e)t = {start:e.selectionStart,end:e.selectionEnd};else if(document.selection && \"INPUT\" === e.nodeName){var n=document.selection.createRange();n.parentElement() === e && (t = {start:-n.moveStart(\"character\",-e.value.length),end:-n.moveEnd(\"character\",-e.value.length)});}else t = o.getOffsets(e);return t || {start:0,end:0};},setSelection:function setSelection(e,t){var n=t.start,r=t.end;if((\"undefined\" == typeof r && (r = n),\"selectionStart\" in e))e.selectionStart = n,e.selectionEnd = Math.min(r,e.value.length);else if(document.selection && \"INPUT\" === e.nodeName){var i=e.createTextRange();i.collapse(!0),i.moveStart(\"character\",n),i.moveEnd(\"character\",r - n),i.select();}else o.setOffsets(e,t);}};t.exports = s;},{107:107,117:117,119:119,50:50}],64:[function(e,t,n){\"use strict\";function r(e){return f + e.toString(36);}function o(e,t){return e.charAt(t) === f || t === e.length;}function i(e){return \"\" === e || e.charAt(0) === f && e.charAt(e.length - 1) !== f;}function a(e,t){return 0 === t.indexOf(e) && o(t,e.length);}function u(e){return e?e.substr(0,e.lastIndexOf(f)):\"\";}function s(e,t){if((d(i(e) && i(t)),d(a(e,t)),e === t))return e;var n,r=e.length + h;for(n = r;n < t.length && !o(t,n);n++);return t.substr(0,n);}function l(e,t){var n=Math.min(e.length,t.length);if(0 === n)return \"\";for(var r=0,a=0;n >= a;a++) if(o(e,a) && o(t,a))r = a;else if(e.charAt(a) !== t.charAt(a))break;var u=e.substr(0,r);return (d(i(u)),u);}function c(e,t,n,r,o,i){e = e || \"\",t = t || \"\",d(e !== t);var l=a(t,e);d(l || a(e,t));for(var c=0,p=l?u:s,f=e;;f = p(f,t)) {var h;if((o && f === e || i && f === t || (h = n(f,l,r)),h === !1 || f === t))break;d(c++ < m);}}var p=e(81),d=e(133),f=\".\",h=f.length,m=100,v={createReactRootID:function createReactRootID(){return r(p.createReactRootIndex());},createReactID:function createReactID(e,t){return e + t;},getReactRootIDFromNodeID:function getReactRootIDFromNodeID(e){if(e && e.charAt(0) === f && e.length > 1){var t=e.indexOf(f,1);return t > -1?e.substr(0,t):e;}return null;},traverseEnterLeave:function traverseEnterLeave(e,t,n,r,o){var i=l(e,t);i !== e && c(e,i,n,r,!1,!0),i !== t && c(i,t,n,o,!0,!1);},traverseTwoPhase:function traverseTwoPhase(e,t,n){e && (c(\"\",e,t,n,!0,!1),c(e,\"\",t,n,!1,!0));},traverseAncestors:function traverseAncestors(e,t,n){c(\"\",e,t,n,!0,!1);},_getFirstCommonAncestorID:l,_getNextDescendantID:s,isAncestorIDOf:a,SEPARATOR:f};t.exports = v;},{133:133,81:81}],65:[function(e,t,n){\"use strict\";var r={remove:function remove(e){e._reactInternalInstance = void 0;},get:function get(e){return e._reactInternalInstance;},has:function has(e){return void 0 !== e._reactInternalInstance;},set:function set(e,t){e._reactInternalInstance = t;}};t.exports = r;},{}],66:[function(e,t,n){\"use strict\";var r={currentlyMountingInstance:null,currentlyUnmountingInstance:null};t.exports = r;},{}],67:[function(e,t,n){\"use strict\";var r=e(104),o={CHECKSUM_ATTR_NAME:\"data-react-checksum\",addChecksumToMarkup:function addChecksumToMarkup(e){var t=r(e);return e.replace(\">\",\" \" + o.CHECKSUM_ATTR_NAME + '=\"' + t + '\">');},canReuseMarkup:function canReuseMarkup(e,t){var n=t.getAttribute(o.CHECKSUM_ATTR_NAME);n = n && parseInt(n,10);var i=r(e);return i === n;}};t.exports = o;},{104:104}],68:[function(e,t,n){\"use strict\";function r(e,t){for(var n=Math.min(e.length,t.length),r=0;n > r;r++) if(e.charAt(r) !== t.charAt(r))return r;return e.length === t.length?-1:n;}function o(e){var t=P(e);return t && K.getID(t);}function i(e){var t=a(e);if(t)if(L.hasOwnProperty(t)){var n=L[t];n !== e && (w(!c(n,t)),L[t] = e);}else L[t] = e;return t;}function a(e){return e && e.getAttribute && e.getAttribute(k) || \"\";}function u(e,t){var n=a(e);n !== t && delete L[n],e.setAttribute(k,t),L[t] = e;}function s(e){return (L.hasOwnProperty(e) && c(L[e],e) || (L[e] = K.findReactNodeByID(e)),L[e]);}function l(e){var t=b.get(e)._rootNodeID;return C.isNullComponentID(t)?null:(L.hasOwnProperty(t) && c(L[t],t) || (L[t] = K.findReactNodeByID(t)),L[t]);}function c(e,t){if(e){w(a(e) === t);var n=K.findReactContainerForID(t);if(n && T(n,e))return !0;}return !1;}function p(e){delete L[e];}function d(e){var t=L[e];return t && c(t,e)?void (W = t):!1;}function f(e){W = null,E.traverseAncestors(e,d);var t=W;return (W = null,t);}function h(e,t,n,r,o){var i=D.mountComponent(e,t,r,I);e._isTopLevel = !0,K._mountImageIntoNode(i,n,o);}function m(e,t,n,r){var o=N.ReactReconcileTransaction.getPooled();o.perform(h,null,e,t,n,o,r),N.ReactReconcileTransaction.release(o);}var v=e(10),g=e(30),y=(e(39),e(55)),C=(e(56),e(57)),E=e(64),b=e(65),_=e(67),x=e(73),D=e(79),M=e(84),N=e(85),I=e(113),T=e(107),P=e(127),R=e(132),w=e(133),O=e(144),S=e(147),A=(e(150),E.SEPARATOR),k=v.ID_ATTRIBUTE_NAME,L={},U=1,F=9,B={},V={},j=[],W=null,K={_instancesByReactRootID:B,scrollMonitor:function scrollMonitor(e,t){t();},_updateRootComponent:function _updateRootComponent(e,t,n,r){return (K.scrollMonitor(n,function(){M.enqueueElementInternal(e,t),r && M.enqueueCallbackInternal(e,r);}),e);},_registerComponent:function _registerComponent(e,t){w(t && (t.nodeType === U || t.nodeType === F)),g.ensureScrollValueMonitoring();var n=K.registerContainer(t);return (B[n] = e,n);},_renderNewRootComponent:function _renderNewRootComponent(e,t,n){var r=R(e,null),o=K._registerComponent(r,t);return (N.batchedUpdates(m,r,o,t,n),r);},render:function render(e,t,n){w(y.isValidElement(e));var r=B[o(t)];if(r){var i=r._currentElement;if(S(i,e))return K._updateRootComponent(r,e,t,n).getPublicInstance();K.unmountComponentAtNode(t);}var a=P(t),u=a && K.isRenderedByReact(a),s=u && !r,l=K._renderNewRootComponent(e,t,s).getPublicInstance();return (n && n.call(l),l);},constructAndRenderComponent:function constructAndRenderComponent(e,t,n){var r=y.createElement(e,t);return K.render(r,n);},constructAndRenderComponentByID:function constructAndRenderComponentByID(e,t,n){var r=document.getElementById(n);return (w(r),K.constructAndRenderComponent(e,t,r));},registerContainer:function registerContainer(e){var t=o(e);return (t && (t = E.getReactRootIDFromNodeID(t)),t || (t = E.createReactRootID()),V[t] = e,t);},unmountComponentAtNode:function unmountComponentAtNode(e){w(e && (e.nodeType === U || e.nodeType === F));var t=o(e),n=B[t];return n?(K.unmountComponentFromNode(n,e),delete B[t],delete V[t],!0):!1;},unmountComponentFromNode:function unmountComponentFromNode(e,t){for(D.unmountComponent(e),t.nodeType === F && (t = t.documentElement);t.lastChild;) t.removeChild(t.lastChild);},findReactContainerForID:function findReactContainerForID(e){var t=E.getReactRootIDFromNodeID(e),n=V[t];return n;},findReactNodeByID:function findReactNodeByID(e){var t=K.findReactContainerForID(e);return K.findComponentRoot(t,e);},isRenderedByReact:function isRenderedByReact(e){if(1 !== e.nodeType)return !1;var t=K.getID(e);return t?t.charAt(0) === A:!1;},getFirstReactDOM:function getFirstReactDOM(e){for(var t=e;t && t.parentNode !== t;) {if(K.isRenderedByReact(t))return t;t = t.parentNode;}return null;},findComponentRoot:function findComponentRoot(e,t){var n=j,r=0,o=f(t) || e;for(n[0] = o.firstChild,n.length = 1;r < n.length;) {for(var i,a=n[r++];a;) {var u=K.getID(a);u?t === u?i = a:E.isAncestorIDOf(u,t) && (n.length = r = 0,n.push(a.firstChild)):n.push(a.firstChild),a = a.nextSibling;}if(i)return (n.length = 0,i);}n.length = 0,w(!1);},_mountImageIntoNode:function _mountImageIntoNode(e,t,n){if((w(t && (t.nodeType === U || t.nodeType === F)),n)){var o=P(t);if(_.canReuseMarkup(e,o))return;var i=o.getAttribute(_.CHECKSUM_ATTR_NAME);o.removeAttribute(_.CHECKSUM_ATTR_NAME);var a=o.outerHTML;o.setAttribute(_.CHECKSUM_ATTR_NAME,i);var u=r(e,a);\" (client) \" + e.substring(u - 20,u + 20) + \"\\n (server) \" + a.substring(u - 20,u + 20),w(t.nodeType !== F);}w(t.nodeType !== F),O(t,e);},getReactRootID:o,getID:i,setID:u,getNode:s,getNodeFromInstance:l,purgeID:p};x.measureMethods(K,\"ReactMount\",{_renderNewRootComponent:\"_renderNewRootComponent\",_mountImageIntoNode:\"_mountImageIntoNode\"}),t.exports = K;},{10:10,107:107,113:113,127:127,132:132,133:133,144:144,147:147,150:150,30:30,39:39,55:55,56:56,57:57,64:64,65:65,67:67,73:73,79:79,84:84,85:85}],69:[function(e,t,n){\"use strict\";function r(e,t,n){h.push({parentID:e,parentNode:null,type:c.INSERT_MARKUP,markupIndex:m.push(t) - 1,textContent:null,fromIndex:null,toIndex:n});}function o(e,t,n){h.push({parentID:e,parentNode:null,type:c.MOVE_EXISTING,markupIndex:null,textContent:null,fromIndex:t,toIndex:n});}function i(e,t){h.push({parentID:e,parentNode:null,type:c.REMOVE_NODE,markupIndex:null,textContent:null,fromIndex:t,toIndex:null});}function a(e,t){h.push({parentID:e,parentNode:null,type:c.TEXT_CONTENT,markupIndex:null,textContent:t,fromIndex:null,toIndex:null});}function u(){h.length && (l.processChildrenUpdates(h,m),s());}function s(){h.length = 0,m.length = 0;}var l=e(36),c=e(70),p=e(79),d=e(31),f=0,h=[],m=[],v={Mixin:{mountChildren:function mountChildren(e,t,n){var r=d.instantiateChildren(e,t,n);this._renderedChildren = r;var o=[],i=0;for(var a in r) if(r.hasOwnProperty(a)){var u=r[a],s=this._rootNodeID + a,l=p.mountComponent(u,s,t,n);u._mountIndex = i,o.push(l),i++;}return o;},updateTextContent:function updateTextContent(e){f++;var t=!0;try{var n=this._renderedChildren;d.unmountChildren(n);for(var r in n) n.hasOwnProperty(r) && this._unmountChildByName(n[r],r);this.setTextContent(e),t = !1;}finally {f--,f || (t?s():u());}},updateChildren:function updateChildren(e,t,n){f++;var r=!0;try{this._updateChildren(e,t,n),r = !1;}finally {f--,f || (r?s():u());}},_updateChildren:function _updateChildren(e,t,n){var r=this._renderedChildren,o=d.updateChildren(r,e,t,n);if((this._renderedChildren = o,o || r)){var i,a=0,u=0;for(i in o) if(o.hasOwnProperty(i)){var s=r && r[i],l=o[i];s === l?(this.moveChild(s,u,a),a = Math.max(s._mountIndex,a),s._mountIndex = u):(s && (a = Math.max(s._mountIndex,a),this._unmountChildByName(s,i)),this._mountChildByNameAtIndex(l,i,u,t,n)),u++;}for(i in r) !r.hasOwnProperty(i) || o && o.hasOwnProperty(i) || this._unmountChildByName(r[i],i);}},unmountChildren:function unmountChildren(){var e=this._renderedChildren;d.unmountChildren(e),this._renderedChildren = null;},moveChild:function moveChild(e,t,n){e._mountIndex < n && o(this._rootNodeID,e._mountIndex,t);},createChild:function createChild(e,t){r(this._rootNodeID,t,e._mountIndex);},removeChild:function removeChild(e){i(this._rootNodeID,e._mountIndex);},setTextContent:function setTextContent(e){a(this._rootNodeID,e);},_mountChildByNameAtIndex:function _mountChildByNameAtIndex(e,t,n,r,o){var i=this._rootNodeID + t,a=p.mountComponent(e,i,r,o);e._mountIndex = n,this.createChild(e,a);},_unmountChildByName:function _unmountChildByName(e,t){this.removeChild(e),e._mountIndex = null;}}};t.exports = v;},{31:31,36:36,70:70,79:79}],70:[function(e,t,n){\"use strict\";var r=e(138),o=r({INSERT_MARKUP:null,MOVE_EXISTING:null,REMOVE_NODE:null,TEXT_CONTENT:null});t.exports = o;},{138:138}],71:[function(e,t,n){\"use strict\";function r(e){if(\"function\" == typeof e.type)return e.type;var t=e.type,n=p[t];return (null == n && (p[t] = n = l(t)),n);}function o(e){return (s(c),new c(e.type,e.props));}function i(e){return new d(e);}function a(e){return e instanceof d;}var u=e(27),s=e(133),l=null,c=null,p={},d=null,f={injectGenericComponentClass:function injectGenericComponentClass(e){c = e;},injectTextComponentClass:function injectTextComponentClass(e){d = e;},injectComponentClasses:function injectComponentClasses(e){u(p,e);},injectAutoWrapper:function injectAutoWrapper(e){l = e;}},h={getComponentClassForElement:r,createInternalComponent:o,createInstanceForText:i,isTextComponent:a,injection:f};t.exports = h;},{133:133,27:27}],72:[function(e,t,n){\"use strict\";var r=e(133),o={isValidOwner:function isValidOwner(e){return !(!e || \"function\" != typeof e.attachRef || \"function\" != typeof e.detachRef);},addComponentAsRefTo:function addComponentAsRefTo(e,t,n){r(o.isValidOwner(n)),n.attachRef(t,e);},removeComponentAsRefFrom:function removeComponentAsRefFrom(e,t,n){r(o.isValidOwner(n)),n.getPublicInstance().refs[t] === e.getPublicInstance() && n.detachRef(t);}};t.exports = o;},{133:133}],73:[function(e,t,n){\"use strict\";function r(e,t,n){return n;}var o={enableMeasure:!1,storedMeasure:r,measureMethods:function measureMethods(e,t,n){},measure:function measure(e,t,n){return n;},injection:{injectMeasure:function injectMeasure(e){o.storedMeasure = e;}}};t.exports = o;},{}],74:[function(e,t,n){\"use strict\";var r={};t.exports = r;},{}],75:[function(e,t,n){\"use strict\";var r=e(138),o=r({prop:null,context:null,childContext:null});t.exports = o;},{138:138}],76:[function(e,t,n){\"use strict\";function r(e){function t(t,n,r,o,i){if((o = o || b,null == n[r])){var a=C[i];return t?new Error(\"Required \" + a + \" `\" + r + \"` was not specified in \" + (\"`\" + o + \"`.\")):null;}return e(n,r,o,i);}var n=t.bind(null,!1);return (n.isRequired = t.bind(null,!0),n);}function o(e){function t(t,n,r,o){var i=t[n],a=m(i);if(a !== e){var u=C[o],s=v(i);return new Error(\"Invalid \" + u + \" `\" + n + \"` of type `\" + s + \"` \" + (\"supplied to `\" + r + \"`, expected `\" + e + \"`.\"));}return null;}return r(t);}function i(){return r(E.thatReturns(null));}function a(e){function t(t,n,r,o){var i=t[n];if(!Array.isArray(i)){var a=C[o],u=m(i);return new Error(\"Invalid \" + a + \" `\" + n + \"` of type \" + (\"`\" + u + \"` supplied to `\" + r + \"`, expected an array.\"));}for(var s=0;s < i.length;s++) {var l=e(i,s,r,o);if(l instanceof Error)return l;}return null;}return r(t);}function u(){function e(e,t,n,r){if(!g.isValidElement(e[t])){var o=C[r];return new Error(\"Invalid \" + o + \" `\" + t + \"` supplied to \" + (\"`\" + n + \"`, expected a ReactElement.\"));}return null;}return r(e);}function s(e){function t(t,n,r,o){if(!(t[n] instanceof e)){var i=C[o],a=e.name || b;return new Error(\"Invalid \" + i + \" `\" + n + \"` supplied to \" + (\"`\" + r + \"`, expected instance of `\" + a + \"`.\"));}return null;}return r(t);}function l(e){function t(t,n,r,o){for(var i=t[n],a=0;a < e.length;a++) if(i === e[a])return null;var u=C[o],s=JSON.stringify(e);return new Error(\"Invalid \" + u + \" `\" + n + \"` of value `\" + i + \"` \" + (\"supplied to `\" + r + \"`, expected one of \" + s + \".\"));}return r(t);}function c(e){function t(t,n,r,o){var i=t[n],a=m(i);if(\"object\" !== a){var u=C[o];return new Error(\"Invalid \" + u + \" `\" + n + \"` of type \" + (\"`\" + a + \"` supplied to `\" + r + \"`, expected an object.\"));}for(var s in i) if(i.hasOwnProperty(s)){var l=e(i,s,r,o);if(l instanceof Error)return l;}return null;}return r(t);}function p(e){function t(t,n,r,o){for(var i=0;i < e.length;i++) {var a=e[i];if(null == a(t,n,r,o))return null;}var u=C[o];return new Error(\"Invalid \" + u + \" `\" + n + \"` supplied to \" + (\"`\" + r + \"`.\"));}return r(t);}function d(){function e(e,t,n,r){if(!h(e[t])){var o=C[r];return new Error(\"Invalid \" + o + \" `\" + t + \"` supplied to \" + (\"`\" + n + \"`, expected a ReactNode.\"));}return null;}return r(e);}function f(e){function t(t,n,r,o){var i=t[n],a=m(i);if(\"object\" !== a){var u=C[o];return new Error(\"Invalid \" + u + \" `\" + n + \"` of type `\" + a + \"` \" + (\"supplied to `\" + r + \"`, expected `object`.\"));}for(var s in e) {var l=e[s];if(l){var c=l(i,s,r,o);if(c)return c;}}return null;}return r(t);}function h(e){switch(typeof e){case \"number\":case \"string\":case \"undefined\":return !0;case \"boolean\":return !e;case \"object\":if(Array.isArray(e))return e.every(h);if(null === e || g.isValidElement(e))return !0;e = y.extractIfFragment(e);for(var t in e) if(!h(e[t]))return !1;return !0;default:return !1;}}function m(e){var t=typeof e;return Array.isArray(e)?\"array\":e instanceof RegExp?\"object\":t;}function v(e){var t=m(e);if(\"object\" === t){if(e instanceof Date)return \"date\";if(e instanceof RegExp)return \"regexp\";}return t;}var g=e(55),y=e(61),C=e(74),E=e(112),b=\"<<anonymous>>\",_=u(),x=d(),D={array:o(\"array\"),bool:o(\"boolean\"),func:o(\"function\"),number:o(\"number\"),object:o(\"object\"),string:o(\"string\"),any:i(),arrayOf:a,element:_,instanceOf:s,node:x,objectOf:c,oneOf:l,oneOfType:p,shape:f};t.exports = D;},{112:112,55:55,61:61,74:74}],77:[function(e,t,n){\"use strict\";function r(){this.listenersToPut = [];}var o=e(28),i=e(30),a=e(27);a(r.prototype,{enqueuePutListener:function enqueuePutListener(e,t,n){this.listenersToPut.push({rootNodeID:e,propKey:t,propValue:n});},putListeners:function putListeners(){for(var e=0;e < this.listenersToPut.length;e++) {var t=this.listenersToPut[e];i.putListener(t.rootNodeID,t.propKey,t.propValue);}},reset:function reset(){this.listenersToPut.length = 0;},destructor:function destructor(){this.reset();}}),o.addPoolingTo(r),t.exports = r;},{27:27,28:28,30:30}],78:[function(e,t,n){\"use strict\";function r(){this.reinitializeTransaction(),this.renderToStaticMarkup = !1,this.reactMountReady = o.getPooled(null),this.putListenerQueue = s.getPooled();}var o=e(6),i=e(28),a=e(30),u=e(63),s=e(77),l=e(101),c=e(27),p={initialize:u.getSelectionInformation,close:u.restoreSelection},d={initialize:function initialize(){var e=a.isEnabled();return (a.setEnabled(!1),e);},close:function close(e){a.setEnabled(e);}},f={initialize:function initialize(){this.reactMountReady.reset();},close:function close(){this.reactMountReady.notifyAll();}},h={initialize:function initialize(){this.putListenerQueue.reset();},close:function close(){this.putListenerQueue.putListeners();}},m=[h,p,d,f],v={getTransactionWrappers:function getTransactionWrappers(){return m;},getReactMountReady:function getReactMountReady(){return this.reactMountReady;},getPutListenerQueue:function getPutListenerQueue(){return this.putListenerQueue;},destructor:function destructor(){o.release(this.reactMountReady),this.reactMountReady = null,s.release(this.putListenerQueue),this.putListenerQueue = null;}};c(r.prototype,l.Mixin,v),i.addPoolingTo(r),t.exports = r;},{101:101,27:27,28:28,30:30,6:6,63:63,77:77}],79:[function(e,t,n){\"use strict\";function r(){o.attachRefs(this,this._currentElement);}var o=e(80),i=(e(56),{mountComponent:function mountComponent(e,t,n,o){var i=e.mountComponent(t,n,o);return (n.getReactMountReady().enqueue(r,e),i);},unmountComponent:function unmountComponent(e){o.detachRefs(e,e._currentElement),e.unmountComponent();},receiveComponent:function receiveComponent(e,t,n,i){var a=e._currentElement;if(t !== a || null == t._owner){var u=o.shouldUpdateRefs(a,t);u && o.detachRefs(e,a),e.receiveComponent(t,n,i),u && n.getReactMountReady().enqueue(r,e);}},performUpdateIfNecessary:function performUpdateIfNecessary(e,t){e.performUpdateIfNecessary(t);}});t.exports = i;},{56:56,80:80}],80:[function(e,t,n){\"use strict\";function r(e,t,n){\"function\" == typeof e?e(t.getPublicInstance()):i.addComponentAsRefTo(t,e,n);}function o(e,t,n){\"function\" == typeof e?e(null):i.removeComponentAsRefFrom(t,e,n);}var i=e(72),a={};a.attachRefs = function(e,t){var n=t.ref;null != n && r(n,e,t._owner);},a.shouldUpdateRefs = function(e,t){return t._owner !== e._owner || t.ref !== e.ref;},a.detachRefs = function(e,t){var n=t.ref;null != n && o(n,e,t._owner);},t.exports = a;},{72:72}],81:[function(e,t,n){\"use strict\";var r={injectCreateReactRootIndex:function injectCreateReactRootIndex(e){o.createReactRootIndex = e;}},o={createReactRootIndex:null,injection:r};t.exports = o;},{}],82:[function(e,t,n){\"use strict\";function r(e){p(i.isValidElement(e));var t;try{var n=a.createReactRootID();return (t = s.getPooled(!1),t.perform(function(){var r=c(e,null),o=r.mountComponent(n,t,l);return u.addChecksumToMarkup(o);},null));}finally {s.release(t);}}function o(e){p(i.isValidElement(e));var t;try{var n=a.createReactRootID();return (t = s.getPooled(!0),t.perform(function(){var r=c(e,null);return r.mountComponent(n,t,l);},null));}finally {s.release(t);}}var i=e(55),a=e(64),u=e(67),s=e(83),l=e(113),c=e(132),p=e(133);t.exports = {renderToString:r,renderToStaticMarkup:o};},{113:113,132:132,133:133,55:55,64:64,67:67,83:83}],83:[function(e,t,n){\"use strict\";function r(e){this.reinitializeTransaction(),this.renderToStaticMarkup = e,this.reactMountReady = i.getPooled(null),this.putListenerQueue = a.getPooled();}var o=e(28),i=e(6),a=e(77),u=e(101),s=e(27),l=e(112),c={initialize:function initialize(){this.reactMountReady.reset();},close:l},p={initialize:function initialize(){this.putListenerQueue.reset();},close:l},d=[p,c],f={getTransactionWrappers:function getTransactionWrappers(){return d;},getReactMountReady:function getReactMountReady(){return this.reactMountReady;},getPutListenerQueue:function getPutListenerQueue(){return this.putListenerQueue;},destructor:function destructor(){i.release(this.reactMountReady),this.reactMountReady = null,a.release(this.putListenerQueue),this.putListenerQueue = null;}};s(r.prototype,u.Mixin,f),o.addPoolingTo(r),t.exports = r;},{101:101,112:112,27:27,28:28,6:6,77:77}],84:[function(e,t,n){\"use strict\";function r(e){e !== i.currentlyMountingInstance && l.enqueueUpdate(e);}function o(e,t){p(null == a.current);var n=s.get(e);return n?n === i.currentlyUnmountingInstance?null:n:null;}var i=e(66),a=e(39),u=e(55),s=e(65),l=e(85),c=e(27),p=e(133),d=(e(150),{enqueueCallback:function enqueueCallback(e,t){p(\"function\" == typeof t);var n=o(e);return n && n !== i.currentlyMountingInstance?(n._pendingCallbacks?n._pendingCallbacks.push(t):n._pendingCallbacks = [t],void r(n)):null;},enqueueCallbackInternal:function enqueueCallbackInternal(e,t){p(\"function\" == typeof t),e._pendingCallbacks?e._pendingCallbacks.push(t):e._pendingCallbacks = [t],r(e);},enqueueForceUpdate:function enqueueForceUpdate(e){var t=o(e,\"forceUpdate\");t && (t._pendingForceUpdate = !0,r(t));},enqueueReplaceState:function enqueueReplaceState(e,t){var n=o(e,\"replaceState\");n && (n._pendingStateQueue = [t],n._pendingReplaceState = !0,r(n));},enqueueSetState:function enqueueSetState(e,t){var n=o(e,\"setState\");if(n){var i=n._pendingStateQueue || (n._pendingStateQueue = []);i.push(t),r(n);}},enqueueSetProps:function enqueueSetProps(e,t){var n=o(e,\"setProps\");if(n){p(n._isTopLevel);var i=n._pendingElement || n._currentElement,a=c({},i.props,t);n._pendingElement = u.cloneAndReplaceProps(i,a),r(n);}},enqueueReplaceProps:function enqueueReplaceProps(e,t){var n=o(e,\"replaceProps\");if(n){p(n._isTopLevel);var i=n._pendingElement || n._currentElement;n._pendingElement = u.cloneAndReplaceProps(i,t),r(n);}},enqueueElementInternal:function enqueueElementInternal(e,t){e._pendingElement = t,r(e);}});t.exports = d;},{133:133,150:150,27:27,39:39,55:55,65:65,66:66,85:85}],85:[function(e,t,n){\"use strict\";function r(){v(N.ReactReconcileTransaction && E);}function o(){this.reinitializeTransaction(),this.dirtyComponentsLength = null,this.callbackQueue = c.getPooled(),this.reconcileTransaction = N.ReactReconcileTransaction.getPooled();}function i(e,t,n,o,i){r(),E.batchedUpdates(e,t,n,o,i);}function a(e,t){return e._mountOrder - t._mountOrder;}function u(e){var t=e.dirtyComponentsLength;v(t === g.length),g.sort(a);for(var n=0;t > n;n++) {var r=g[n],o=r._pendingCallbacks;if((r._pendingCallbacks = null,f.performUpdateIfNecessary(r,e.reconcileTransaction),o))for(var i=0;i < o.length;i++) e.callbackQueue.enqueue(o[i],r.getPublicInstance());}}function s(e){return (r(),E.isBatchingUpdates?void g.push(e):void E.batchedUpdates(s,e));}function l(e,t){v(E.isBatchingUpdates),y.enqueue(e,t),C = !0;}var c=e(6),p=e(28),d=(e(39),e(73)),f=e(79),h=e(101),m=e(27),v=e(133),g=(e(150),[]),y=c.getPooled(),C=!1,E=null,b={initialize:function initialize(){this.dirtyComponentsLength = g.length;},close:function close(){this.dirtyComponentsLength !== g.length?(g.splice(0,this.dirtyComponentsLength),D()):g.length = 0;}},_={initialize:function initialize(){this.callbackQueue.reset();},close:function close(){this.callbackQueue.notifyAll();}},x=[b,_];m(o.prototype,h.Mixin,{getTransactionWrappers:function getTransactionWrappers(){return x;},destructor:function destructor(){this.dirtyComponentsLength = null,c.release(this.callbackQueue),this.callbackQueue = null,N.ReactReconcileTransaction.release(this.reconcileTransaction),this.reconcileTransaction = null;},perform:function perform(e,t,n){return h.Mixin.perform.call(this,this.reconcileTransaction.perform,this.reconcileTransaction,e,t,n);}}),p.addPoolingTo(o);var D=function D(){for(;g.length || C;) {if(g.length){var e=o.getPooled();e.perform(u,null,e),o.release(e);}if(C){C = !1;var t=y;y = c.getPooled(),t.notifyAll(),c.release(t);}}};D = d.measure(\"ReactUpdates\",\"flushBatchedUpdates\",D);var M={injectReconcileTransaction:function injectReconcileTransaction(e){v(e),N.ReactReconcileTransaction = e;},injectBatchingStrategy:function injectBatchingStrategy(e){v(e),v(\"function\" == typeof e.batchedUpdates),v(\"boolean\" == typeof e.isBatchingUpdates),E = e;}},N={ReactReconcileTransaction:null,batchedUpdates:i,enqueueUpdate:s,flushBatchedUpdates:D,injection:M,asap:l};t.exports = N;},{101:101,133:133,150:150,27:27,28:28,39:39,6:6,73:73,79:79}],86:[function(e,t,n){\"use strict\";var r=e(10),o=r.injection.MUST_USE_ATTRIBUTE,i={Properties:{clipPath:o,cx:o,cy:o,d:o,dx:o,dy:o,fill:o,fillOpacity:o,fontFamily:o,fontSize:o,fx:o,fy:o,gradientTransform:o,gradientUnits:o,markerEnd:o,markerMid:o,markerStart:o,offset:o,opacity:o,patternContentUnits:o,patternUnits:o,points:o,preserveAspectRatio:o,r:o,rx:o,ry:o,spreadMethod:o,stopColor:o,stopOpacity:o,stroke:o,strokeDasharray:o,strokeLinecap:o,strokeOpacity:o,strokeWidth:o,textAnchor:o,transform:o,version:o,viewBox:o,x1:o,x2:o,x:o,y1:o,y2:o,y:o},DOMAttributeNames:{clipPath:\"clip-path\",fillOpacity:\"fill-opacity\",fontFamily:\"font-family\",fontSize:\"font-size\",gradientTransform:\"gradientTransform\",gradientUnits:\"gradientUnits\",markerEnd:\"marker-end\",markerMid:\"marker-mid\",markerStart:\"marker-start\",patternContentUnits:\"patternContentUnits\",patternUnits:\"patternUnits\",preserveAspectRatio:\"preserveAspectRatio\",spreadMethod:\"spreadMethod\",stopColor:\"stop-color\",stopOpacity:\"stop-opacity\",strokeDasharray:\"stroke-dasharray\",strokeLinecap:\"stroke-linecap\",strokeOpacity:\"stroke-opacity\",strokeWidth:\"stroke-width\",textAnchor:\"text-anchor\",viewBox:\"viewBox\"}};t.exports = i;},{10:10}],87:[function(e,t,n){\"use strict\";function r(e){if(\"selectionStart\" in e && u.hasSelectionCapabilities(e))return {start:e.selectionStart,end:e.selectionEnd};if(window.getSelection){var t=window.getSelection();return {anchorNode:t.anchorNode,anchorOffset:t.anchorOffset,focusNode:t.focusNode,focusOffset:t.focusOffset};}if(document.selection){var n=document.selection.createRange();return {parentElement:n.parentElement(),text:n.text,top:n.boundingTop,left:n.boundingLeft};}}function o(e){if(y || null == m || m !== l())return null;var t=r(m);if(!g || !d(g,t)){g = t;var n=s.getPooled(h.select,v,e);return (n.type = \"select\",n.target = m,a.accumulateTwoPhaseDispatches(n),n);}}var i=e(15),a=e(20),u=e(63),s=e(93),l=e(119),c=e(136),p=e(139),d=e(146),f=i.topLevelTypes,h={select:{phasedRegistrationNames:{bubbled:p({onSelect:null}),captured:p({onSelectCapture:null})},dependencies:[f.topBlur,f.topContextMenu,f.topFocus,f.topKeyDown,f.topMouseDown,f.topMouseUp,f.topSelectionChange]}},m=null,v=null,g=null,y=!1,C={eventTypes:h,extractEvents:function extractEvents(e,t,n,r){switch(e){case f.topFocus:(c(t) || \"true\" === t.contentEditable) && (m = t,v = n,g = null);break;case f.topBlur:m = null,v = null,g = null;break;case f.topMouseDown:y = !0;break;case f.topContextMenu:case f.topMouseUp:return (y = !1,o(r));case f.topSelectionChange:case f.topKeyDown:case f.topKeyUp:return o(r);}}};t.exports = C;},{119:119,136:136,139:139,146:146,15:15,20:20,63:63,93:93}],88:[function(e,t,n){\"use strict\";var r=Math.pow(2,53),o={createReactRootIndex:function createReactRootIndex(){return Math.ceil(Math.random() * r);}};t.exports = o;},{}],89:[function(e,t,n){\"use strict\";var r=e(15),o=e(19),i=e(20),a=e(90),u=e(93),s=e(94),l=e(96),c=e(97),p=e(92),d=e(98),f=e(99),h=e(100),m=e(120),v=e(133),g=e(139),y=(e(150),r.topLevelTypes),C={blur:{phasedRegistrationNames:{bubbled:g({onBlur:!0}),captured:g({onBlurCapture:!0})}},click:{phasedRegistrationNames:{bubbled:g({onClick:!0}),captured:g({onClickCapture:!0})}},contextMenu:{phasedRegistrationNames:{bubbled:g({onContextMenu:!0}),captured:g({onContextMenuCapture:!0})}},copy:{phasedRegistrationNames:{bubbled:g({onCopy:!0}),captured:g({onCopyCapture:!0})}},cut:{phasedRegistrationNames:{bubbled:g({onCut:!0}),captured:g({onCutCapture:!0})}},doubleClick:{phasedRegistrationNames:{bubbled:g({onDoubleClick:!0}),captured:g({onDoubleClickCapture:!0})}},drag:{phasedRegistrationNames:{bubbled:g({onDrag:!0}),captured:g({onDragCapture:!0})}},dragEnd:{phasedRegistrationNames:{bubbled:g({onDragEnd:!0}),captured:g({onDragEndCapture:!0})}},dragEnter:{phasedRegistrationNames:{bubbled:g({onDragEnter:!0}),captured:g({onDragEnterCapture:!0})}},dragExit:{phasedRegistrationNames:{bubbled:g({onDragExit:!0}),captured:g({onDragExitCapture:!0})}},dragLeave:{phasedRegistrationNames:{bubbled:g({onDragLeave:!0}),captured:g({onDragLeaveCapture:!0})}},dragOver:{phasedRegistrationNames:{bubbled:g({onDragOver:!0}),captured:g({onDragOverCapture:!0})}},dragStart:{phasedRegistrationNames:{bubbled:g({onDragStart:!0}),captured:g({onDragStartCapture:!0})}},drop:{phasedRegistrationNames:{bubbled:g({onDrop:!0}),captured:g({onDropCapture:!0})}},focus:{phasedRegistrationNames:{bubbled:g({onFocus:!0}),captured:g({onFocusCapture:!0})}},input:{phasedRegistrationNames:{bubbled:g({onInput:!0}),captured:g({onInputCapture:!0})}},keyDown:{phasedRegistrationNames:{bubbled:g({onKeyDown:!0}),captured:g({onKeyDownCapture:!0})}},keyPress:{phasedRegistrationNames:{bubbled:g({onKeyPress:!0}),captured:g({onKeyPressCapture:!0})}},keyUp:{phasedRegistrationNames:{bubbled:g({onKeyUp:!0}),captured:g({onKeyUpCapture:!0})}},load:{phasedRegistrationNames:{bubbled:g({onLoad:!0}),captured:g({onLoadCapture:!0})}},error:{phasedRegistrationNames:{bubbled:g({onError:!0}),captured:g({onErrorCapture:!0})}},mouseDown:{phasedRegistrationNames:{bubbled:g({onMouseDown:!0}),captured:g({onMouseDownCapture:!0})}},mouseMove:{phasedRegistrationNames:{bubbled:g({onMouseMove:!0}),captured:g({onMouseMoveCapture:!0})}},mouseOut:{phasedRegistrationNames:{bubbled:g({onMouseOut:!0}),captured:g({onMouseOutCapture:!0})}},mouseOver:{phasedRegistrationNames:{bubbled:g({onMouseOver:!0}),captured:g({onMouseOverCapture:!0})}},mouseUp:{phasedRegistrationNames:{bubbled:g({onMouseUp:!0}),captured:g({onMouseUpCapture:!0})}},paste:{phasedRegistrationNames:{bubbled:g({onPaste:!0}),captured:g({onPasteCapture:!0})}},reset:{phasedRegistrationNames:{bubbled:g({onReset:!0}),captured:g({onResetCapture:!0})}},scroll:{phasedRegistrationNames:{bubbled:g({onScroll:!0}),captured:g({onScrollCapture:!0})}},submit:{phasedRegistrationNames:{bubbled:g({onSubmit:!0}),captured:g({onSubmitCapture:!0})}},touchCancel:{phasedRegistrationNames:{bubbled:g({onTouchCancel:!0}),captured:g({onTouchCancelCapture:!0})}},touchEnd:{phasedRegistrationNames:{bubbled:g({onTouchEnd:!0}),captured:g({onTouchEndCapture:!0})}},touchMove:{phasedRegistrationNames:{bubbled:g({onTouchMove:!0}),captured:g({onTouchMoveCapture:!0})}},touchStart:{phasedRegistrationNames:{bubbled:g({onTouchStart:!0}),captured:g({onTouchStartCapture:!0})}},wheel:{phasedRegistrationNames:{bubbled:g({onWheel:!0}),captured:g({onWheelCapture:!0})}}},E={topBlur:C.blur,topClick:C.click,topContextMenu:C.contextMenu,topCopy:C.copy,topCut:C.cut,topDoubleClick:C.doubleClick,topDrag:C.drag,topDragEnd:C.dragEnd,topDragEnter:C.dragEnter,topDragExit:C.dragExit,topDragLeave:C.dragLeave,topDragOver:C.dragOver,topDragStart:C.dragStart,topDrop:C.drop,topError:C.error,topFocus:C.focus,topInput:C.input,topKeyDown:C.keyDown,topKeyPress:C.keyPress,topKeyUp:C.keyUp,topLoad:C.load,topMouseDown:C.mouseDown,topMouseMove:C.mouseMove,topMouseOut:C.mouseOut,topMouseOver:C.mouseOver,topMouseUp:C.mouseUp,topPaste:C.paste,topReset:C.reset,topScroll:C.scroll,topSubmit:C.submit,topTouchCancel:C.touchCancel,topTouchEnd:C.touchEnd,topTouchMove:C.touchMove,topTouchStart:C.touchStart,topWheel:C.wheel};for(var b in E) E[b].dependencies = [b];var _={eventTypes:C,executeDispatch:function executeDispatch(e,t,n){var r=o.executeDispatch(e,t,n);r === !1 && (e.stopPropagation(),e.preventDefault());},extractEvents:function extractEvents(e,t,n,r){var o=E[e];if(!o)return null;var g;switch(e){case y.topInput:case y.topLoad:case y.topError:case y.topReset:case y.topSubmit:g = u;break;case y.topKeyPress:if(0 === m(r))return null;case y.topKeyDown:case y.topKeyUp:g = l;break;case y.topBlur:case y.topFocus:g = s;break;case y.topClick:if(2 === r.button)return null;case y.topContextMenu:case y.topDoubleClick:case y.topMouseDown:case y.topMouseMove:case y.topMouseOut:case y.topMouseOver:case y.topMouseUp:g = c;break;case y.topDrag:case y.topDragEnd:case y.topDragEnter:case y.topDragExit:case y.topDragLeave:case y.topDragOver:case y.topDragStart:case y.topDrop:g = p;break;case y.topTouchCancel:case y.topTouchEnd:case y.topTouchMove:case y.topTouchStart:g = d;break;case y.topScroll:g = f;break;case y.topWheel:g = h;break;case y.topCopy:case y.topCut:case y.topPaste:g = a;}v(g);var C=g.getPooled(o,n,r);return (i.accumulateTwoPhaseDispatches(C),C);}};t.exports = _;},{100:100,120:120,133:133,139:139,15:15,150:150,19:19,20:20,90:90,92:92,93:93,94:94,96:96,97:97,98:98,99:99}],90:[function(e,t,n){\"use strict\";function r(e,t,n){o.call(this,e,t,n);}var o=e(93),i={clipboardData:function clipboardData(e){return \"clipboardData\" in e?e.clipboardData:window.clipboardData;}};o.augmentClass(r,i),t.exports = r;},{93:93}],91:[function(e,t,n){\"use strict\";function r(e,t,n){o.call(this,e,t,n);}var o=e(93),i={data:null};o.augmentClass(r,i),t.exports = r;},{93:93}],92:[function(e,t,n){\"use strict\";function r(e,t,n){o.call(this,e,t,n);}var o=e(97),i={dataTransfer:null};o.augmentClass(r,i),t.exports = r;},{97:97}],93:[function(e,t,n){\"use strict\";function r(e,t,n){this.dispatchConfig = e,this.dispatchMarker = t,this.nativeEvent = n;var r=this.constructor.Interface;for(var o in r) if(r.hasOwnProperty(o)){var i=r[o];i?this[o] = i(n):this[o] = n[o];}var u=null != n.defaultPrevented?n.defaultPrevented:n.returnValue === !1;u?this.isDefaultPrevented = a.thatReturnsTrue:this.isDefaultPrevented = a.thatReturnsFalse,this.isPropagationStopped = a.thatReturnsFalse;}var o=e(28),i=e(27),a=e(112),u=e(123),s={type:null,target:u,currentTarget:a.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function timeStamp(e){return e.timeStamp || Date.now();},defaultPrevented:null,isTrusted:null};i(r.prototype,{preventDefault:function preventDefault(){this.defaultPrevented = !0;var e=this.nativeEvent;e.preventDefault?e.preventDefault():e.returnValue = !1,this.isDefaultPrevented = a.thatReturnsTrue;},stopPropagation:function stopPropagation(){var e=this.nativeEvent;e.stopPropagation?e.stopPropagation():e.cancelBubble = !0,this.isPropagationStopped = a.thatReturnsTrue;},persist:function persist(){this.isPersistent = a.thatReturnsTrue;},isPersistent:a.thatReturnsFalse,destructor:function destructor(){var e=this.constructor.Interface;for(var t in e) this[t] = null;this.dispatchConfig = null,this.dispatchMarker = null,this.nativeEvent = null;}}),r.Interface = s,r.augmentClass = function(e,t){var n=this,r=Object.create(n.prototype);i(r,e.prototype),e.prototype = r,e.prototype.constructor = e,e.Interface = i({},n.Interface,t),e.augmentClass = n.augmentClass,o.addPoolingTo(e,o.threeArgumentPooler);},o.addPoolingTo(r,o.threeArgumentPooler),t.exports = r;},{112:112,123:123,27:27,28:28}],94:[function(e,t,n){\"use strict\";function r(e,t,n){o.call(this,e,t,n);}var o=e(99),i={relatedTarget:null};o.augmentClass(r,i),t.exports = r;},{99:99}],95:[function(e,t,n){\"use strict\";function r(e,t,n){o.call(this,e,t,n);}var o=e(93),i={data:null};o.augmentClass(r,i),t.exports = r;},{93:93}],96:[function(e,t,n){\"use strict\";function r(e,t,n){o.call(this,e,t,n);}var o=e(99),i=e(120),a=e(121),u=e(122),s={key:a,location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:u,charCode:function charCode(e){return \"keypress\" === e.type?i(e):0;},keyCode:function keyCode(e){return \"keydown\" === e.type || \"keyup\" === e.type?e.keyCode:0;},which:function which(e){return \"keypress\" === e.type?i(e):\"keydown\" === e.type || \"keyup\" === e.type?e.keyCode:0;}};o.augmentClass(r,s),t.exports = r;},{120:120,121:121,122:122,99:99}],97:[function(e,t,n){\"use strict\";function r(e,t,n){o.call(this,e,t,n);}var o=e(99),i=e(102),a=e(122),u={screenX:null,screenY:null,clientX:null,clientY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:a,button:function button(e){var t=e.button;return \"which\" in e?t:2 === t?2:4 === t?1:0;},buttons:null,relatedTarget:function relatedTarget(e){return e.relatedTarget || (e.fromElement === e.srcElement?e.toElement:e.fromElement);},pageX:function pageX(e){return \"pageX\" in e?e.pageX:e.clientX + i.currentScrollLeft;},pageY:function pageY(e){return \"pageY\" in e?e.pageY:e.clientY + i.currentScrollTop;}};o.augmentClass(r,u),t.exports = r;},{102:102,122:122,99:99}],98:[function(e,t,n){\"use strict\";function r(e,t,n){o.call(this,e,t,n);}var o=e(99),i=e(122),a={touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:i};o.augmentClass(r,a),t.exports = r;},{122:122,99:99}],99:[function(e,t,n){\"use strict\";function r(e,t,n){o.call(this,e,t,n);}var o=e(93),i=e(123),a={view:function view(e){if(e.view)return e.view;var t=i(e);if(null != t && t.window === t)return t;var n=t.ownerDocument;return n?n.defaultView || n.parentWindow:window;},detail:function detail(e){return e.detail || 0;}};o.augmentClass(r,a),t.exports = r;},{123:123,93:93}],100:[function(e,t,n){\"use strict\";function r(e,t,n){o.call(this,e,t,n);}var o=e(97),i={deltaX:function deltaX(e){return \"deltaX\" in e?e.deltaX:\"wheelDeltaX\" in e?-e.wheelDeltaX:0;},deltaY:function deltaY(e){return \"deltaY\" in e?e.deltaY:\"wheelDeltaY\" in e?-e.wheelDeltaY:\"wheelDelta\" in e?-e.wheelDelta:0;},deltaZ:null,deltaMode:null};o.augmentClass(r,i),t.exports = r;},{97:97}],101:[function(e,t,n){\"use strict\";var r=e(133),o={reinitializeTransaction:function reinitializeTransaction(){this.transactionWrappers = this.getTransactionWrappers(),this.wrapperInitData?this.wrapperInitData.length = 0:this.wrapperInitData = [],this._isInTransaction = !1;},_isInTransaction:!1,getTransactionWrappers:null,isInTransaction:function isInTransaction(){return !!this._isInTransaction;},perform:function perform(e,t,n,o,i,a,u,s){r(!this.isInTransaction());var l,c;try{this._isInTransaction = !0,l = !0,this.initializeAll(0),c = e.call(t,n,o,i,a,u,s),l = !1;}finally {try{if(l)try{this.closeAll(0);}catch(p) {}else this.closeAll(0);}finally {this._isInTransaction = !1;}}return c;},initializeAll:function initializeAll(e){for(var t=this.transactionWrappers,n=e;n < t.length;n++) {var r=t[n];try{this.wrapperInitData[n] = i.OBSERVED_ERROR,this.wrapperInitData[n] = r.initialize?r.initialize.call(this):null;}finally {if(this.wrapperInitData[n] === i.OBSERVED_ERROR)try{this.initializeAll(n + 1);}catch(o) {}}}},closeAll:function closeAll(e){r(this.isInTransaction());for(var t=this.transactionWrappers,n=e;n < t.length;n++) {var o,a=t[n],u=this.wrapperInitData[n];try{o = !0,u !== i.OBSERVED_ERROR && a.close && a.close.call(this,u),o = !1;}finally {if(o)try{this.closeAll(n + 1);}catch(s) {}}}this.wrapperInitData.length = 0;}},i={Mixin:o,OBSERVED_ERROR:{}};t.exports = i;},{133:133}],102:[function(e,t,n){\"use strict\";var r={currentScrollLeft:0,currentScrollTop:0,refreshScrollValues:function refreshScrollValues(e){r.currentScrollLeft = e.x,r.currentScrollTop = e.y;}};t.exports = r;},{}],103:[function(e,t,n){\"use strict\";function r(e,t){if((o(null != t),null == e))return t;var n=Array.isArray(e),r=Array.isArray(t);return n && r?(e.push.apply(e,t),e):n?(e.push(t),e):r?[e].concat(t):[e,t];}var o=e(133);t.exports = r;},{133:133}],104:[function(e,t,n){\"use strict\";function r(e){for(var t=1,n=0,r=0;r < e.length;r++) t = (t + e.charCodeAt(r)) % o,n = (n + t) % o;return t | n << 16;}var o=65521;t.exports = r;},{}],105:[function(e,t,n){function r(e){return e.replace(o,function(e,t){return t.toUpperCase();});}var o=/-(.)/g;t.exports = r;},{}],106:[function(e,t,n){\"use strict\";function r(e){return o(e.replace(i,\"ms-\"));}var o=e(105),i=/^-ms-/;t.exports = r;},{105:105}],107:[function(e,t,n){function r(_x,_x2){var _again=true;_function: while(_again) {var e=_x,t=_x2;_again = false;if(e && t){if(e === t){return !0;}else {if(o(e)){return !1;}else {if(o(t)){_x = e;_x2 = t.parentNode;_again = true;continue _function;}else {return e.contains?e.contains(t):e.compareDocumentPosition?!!(16 & e.compareDocumentPosition(t)):!1;}}}}else {return !1;}}}var o=e(137);t.exports = r;},{137:137}],108:[function(e,t,n){function r(e){return !!e && (\"object\" == typeof e || \"function\" == typeof e) && \"length\" in e && !(\"setInterval\" in e) && \"number\" != typeof e.nodeType && (Array.isArray(e) || \"callee\" in e || \"item\" in e);}function o(e){return r(e)?Array.isArray(e)?e.slice():i(e):[e];}var i=e(148);t.exports = o;},{148:148}],109:[function(e,t,n){\"use strict\";function r(e){var t=i.createFactory(e),n=o.createClass({tagName:e.toUpperCase(),displayName:\"ReactFullPageComponent\" + e,componentWillUnmount:function componentWillUnmount(){a(!1);},render:function render(){return t(this.props);}});return n;}var o=e(33),i=e(55),a=e(133);t.exports = r;},{133:133,33:33,55:55}],110:[function(e,t,n){function r(e){var t=e.match(c);return t && t[1].toLowerCase();}function o(e,t){var n=l;s(!!l);var o=r(e),i=o && u(o);if(i){n.innerHTML = i[1] + e + i[2];for(var c=i[0];c--;) n = n.lastChild;}else n.innerHTML = e;var p=n.getElementsByTagName(\"script\");p.length && (s(t),a(p).forEach(t));for(var d=a(n.childNodes);n.lastChild;) n.removeChild(n.lastChild);return d;}var i=e(21),a=e(108),u=e(125),s=e(133),l=i.canUseDOM?document.createElement(\"div\"):null,c=/^\\s*<(\\w+)/;t.exports = o;},{108:108,125:125,133:133,21:21}],111:[function(e,t,n){\"use strict\";function r(e,t){var n=null == t || \"boolean\" == typeof t || \"\" === t;if(n)return \"\";var r=isNaN(t);return r || 0 === t || i.hasOwnProperty(e) && i[e]?\"\" + t:(\"string\" == typeof t && (t = t.trim()),t + \"px\");}var o=e(4),i=o.isUnitlessNumber;t.exports = r;},{4:4}],112:[function(e,t,n){function r(e){return function(){return e;};}function o(){}o.thatReturns = r,o.thatReturnsFalse = r(!1),o.thatReturnsTrue = r(!0),o.thatReturnsNull = r(null),o.thatReturnsThis = function(){return this;},o.thatReturnsArgument = function(e){return e;},t.exports = o;},{}],113:[function(e,t,n){\"use strict\";var r={};t.exports = r;},{}],114:[function(e,t,n){\"use strict\";function r(e){return i[e];}function o(e){return (\"\" + e).replace(a,r);}var i={\"&\":\"&amp;\",\">\":\"&gt;\",\"<\":\"&lt;\",'\"':\"&quot;\",\"'\":\"&#x27;\"},a=/[&><\"']/g;t.exports = o;},{}],115:[function(e,t,n){\"use strict\";function r(e){return null == e?null:u(e)?e:o.has(e)?i.getNodeFromInstance(e):(a(null == e.render || \"function\" != typeof e.render),void a(!1));}{var o=(e(39),e(65)),i=e(68),a=e(133),u=e(135);e(150);}t.exports = r;},{133:133,135:135,150:150,39:39,65:65,68:68}],116:[function(e,t,n){\"use strict\";function r(e,t,n){var r=e,o=!r.hasOwnProperty(n);o && null != t && (r[n] = t);}function o(e){if(null == e)return e;var t={};return (i(e,r,t),t);}{var i=e(149);e(150);}t.exports = o;},{149:149,150:150}],117:[function(e,t,n){\"use strict\";function r(e){try{e.focus();}catch(t) {}}t.exports = r;},{}],118:[function(e,t,n){\"use strict\";var r=function r(e,t,n){Array.isArray(e)?e.forEach(t,n):e && t.call(n,e);};t.exports = r;},{}],119:[function(e,t,n){function r(){try{return document.activeElement || document.body;}catch(e) {return document.body;}}t.exports = r;},{}],120:[function(e,t,n){\"use strict\";function r(e){var t,n=e.keyCode;return (\"charCode\" in e?(t = e.charCode,0 === t && 13 === n && (t = 13)):t = n,t >= 32 || 13 === t?t:0);}t.exports = r;},{}],121:[function(e,t,n){\"use strict\";function r(e){if(e.key){var t=i[e.key] || e.key;if(\"Unidentified\" !== t)return t;}if(\"keypress\" === e.type){var n=o(e);return 13 === n?\"Enter\":String.fromCharCode(n);}return \"keydown\" === e.type || \"keyup\" === e.type?a[e.keyCode] || \"Unidentified\":\"\";}var o=e(120),i={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},a={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"};t.exports = r;},{120:120}],122:[function(e,t,n){\"use strict\";function r(e){var t=this,n=t.nativeEvent;if(n.getModifierState)return n.getModifierState(e);var r=i[e];return r?!!n[r]:!1;}function o(e){return r;}var i={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};t.exports = o;},{}],123:[function(e,t,n){\"use strict\";function r(e){var t=e.target || e.srcElement || window;return 3 === t.nodeType?t.parentNode:t;}t.exports = r;},{}],124:[function(e,t,n){\"use strict\";function r(e){var t=e && (o && e[o] || e[i]);return \"function\" == typeof t?t:void 0;}var o=\"function\" == typeof Symbol && Symbol.iterator,i=\"@@iterator\";t.exports = r;},{}],125:[function(e,t,n){function r(e){return (i(!!a),d.hasOwnProperty(e) || (e = \"*\"),u.hasOwnProperty(e) || (\"*\" === e?a.innerHTML = \"<link />\":a.innerHTML = \"<\" + e + \"></\" + e + \">\",u[e] = !a.firstChild),u[e]?d[e]:null);}var o=e(21),i=e(133),a=o.canUseDOM?document.createElement(\"div\"):null,u={circle:!0,clipPath:!0,defs:!0,ellipse:!0,g:!0,line:!0,linearGradient:!0,path:!0,polygon:!0,polyline:!0,radialGradient:!0,rect:!0,stop:!0,text:!0},s=[1,'<select multiple=\"true\">',\"</select>\"],l=[1,\"<table>\",\"</table>\"],c=[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],p=[1,\"<svg>\",\"</svg>\"],d={\"*\":[1,\"?<div>\",\"</div>\"],area:[1,\"<map>\",\"</map>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],param:[1,\"<object>\",\"</object>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],optgroup:s,option:s,caption:l,colgroup:l,tbody:l,tfoot:l,thead:l,td:c,th:c,circle:p,clipPath:p,defs:p,ellipse:p,g:p,line:p,linearGradient:p,path:p,polygon:p,polyline:p,radialGradient:p,rect:p,stop:p,text:p};t.exports = r;},{133:133,21:21}],126:[function(e,t,n){\"use strict\";function r(e){for(;e && e.firstChild;) e = e.firstChild;return e;}function o(e){for(;e;) {if(e.nextSibling)return e.nextSibling;e = e.parentNode;}}function i(e,t){for(var n=r(e),i=0,a=0;n;) {if(3 === n.nodeType){if((a = i + n.textContent.length,t >= i && a >= t))return {node:n,offset:t - i};i = a;}n = r(o(n));}}t.exports = i;},{}],127:[function(e,t,n){\"use strict\";function r(e){return e?e.nodeType === o?e.documentElement:e.firstChild:null;}var o=9;t.exports = r;},{}],128:[function(e,t,n){\"use strict\";function r(){return (!i && o.canUseDOM && (i = \"textContent\" in document.documentElement?\"textContent\":\"innerText\"),i);}var o=e(21),i=null;t.exports = r;},{21:21}],129:[function(e,t,n){\"use strict\";function r(e){return e === window?{x:window.pageXOffset || document.documentElement.scrollLeft,y:window.pageYOffset || document.documentElement.scrollTop}:{x:e.scrollLeft,y:e.scrollTop};}t.exports = r;},{}],130:[function(e,t,n){function r(e){return e.replace(o,\"-$1\").toLowerCase();}var o=/([A-Z])/g;t.exports = r;},{}],131:[function(e,t,n){\"use strict\";function r(e){return o(e).replace(i,\"-ms-\");}var o=e(130),i=/^ms-/;t.exports = r;},{130:130}],132:[function(e,t,n){\"use strict\";function r(e){return \"function\" == typeof e && \"undefined\" != typeof e.prototype && \"function\" == typeof e.prototype.mountComponent && \"function\" == typeof e.prototype.receiveComponent;}function o(e,t){var n;if(((null === e || e === !1) && (e = a.emptyElement),\"object\" == typeof e)){var o=e;n = t === o.type && \"string\" == typeof o.type?u.createInternalComponent(o):r(o.type)?new o.type(o):new c();}else \"string\" == typeof e || \"number\" == typeof e?n = u.createInstanceForText(e):l(!1);return (n.construct(e),n._mountIndex = 0,n._mountImage = null,n);}var i=e(37),a=e(57),u=e(71),s=e(27),l=e(133),c=(e(150),function(){});s(c.prototype,i.Mixin,{_instantiateReactComponent:o}),t.exports = o;},{133:133,150:150,27:27,37:37,57:57,71:71}],133:[function(e,t,n){\"use strict\";var r=function r(e,t,n,_r,o,i,a,u){if(!e){var s;if(void 0 === t)s = new Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {var l=[n,_r,o,i,a,u],c=0;s = new Error(\"Invariant Violation: \" + t.replace(/%s/g,function(){return l[c++];}));}throw (s.framesToPop = 1,s);}};t.exports = r;},{}],134:[function(e,t,n){\"use strict\";function r(e,t){if(!i.canUseDOM || t && !(\"addEventListener\" in document))return !1;var n=\"on\" + e,r=(n in document);if(!r){var a=document.createElement(\"div\");a.setAttribute(n,\"return;\"),r = \"function\" == typeof a[n];}return (!r && o && \"wheel\" === e && (r = document.implementation.hasFeature(\"Events.wheel\",\"3.0\")),r);}var o,i=e(21);i.canUseDOM && (o = document.implementation && document.implementation.hasFeature && document.implementation.hasFeature(\"\",\"\") !== !0),t.exports = r;},{21:21}],135:[function(e,t,n){function r(e){return !(!e || !(\"function\" == typeof Node?e instanceof Node:\"object\" == typeof e && \"number\" == typeof e.nodeType && \"string\" == typeof e.nodeName));}t.exports = r;},{}],136:[function(e,t,n){\"use strict\";function r(e){return e && (\"INPUT\" === e.nodeName && o[e.type] || \"TEXTAREA\" === e.nodeName);}var o={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};t.exports = r;},{}],137:[function(e,t,n){function r(e){return o(e) && 3 == e.nodeType;}var o=e(135);t.exports = r;},{135:135}],138:[function(e,t,n){\"use strict\";var r=e(133),o=function o(e){var t,n={};r(e instanceof Object && !Array.isArray(e));for(t in e) e.hasOwnProperty(t) && (n[t] = t);return n;};t.exports = o;},{133:133}],139:[function(e,t,n){var r=function r(e){var t;for(t in e) if(e.hasOwnProperty(t))return t;return null;};t.exports = r;},{}],140:[function(e,t,n){\"use strict\";function r(e,t,n){if(!e)return null;var r={};for(var i in e) o.call(e,i) && (r[i] = t.call(n,e[i],i,e));return r;}var o=Object.prototype.hasOwnProperty;t.exports = r;},{}],141:[function(e,t,n){\"use strict\";function r(e){var t={};return function(n){return (t.hasOwnProperty(n) || (t[n] = e.call(this,n)),t[n]);};}t.exports = r;},{}],142:[function(e,t,n){\"use strict\";function r(e){return (i(o.isValidElement(e)),e);}var o=e(55),i=e(133);t.exports = r;},{133:133,55:55}],143:[function(e,t,n){\"use strict\";function r(e){return '\"' + o(e) + '\"';}var o=e(114);t.exports = r;},{114:114}],144:[function(e,t,n){\"use strict\";var r=e(21),o=/^[ \\r\\n\\t\\f]/,i=/<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/,a=function a(e,t){e.innerHTML = t;};if((\"undefined\" != typeof MSApp && MSApp.execUnsafeLocalFunction && (a = function(e,t){MSApp.execUnsafeLocalFunction(function(){e.innerHTML = t;});}),r.canUseDOM)){var u=document.createElement(\"div\");u.innerHTML = \" \",\"\" === u.innerHTML && (a = function(e,t){if((e.parentNode && e.parentNode.replaceChild(e,e),o.test(t) || \"<\" === t[0] && i.test(t))){e.innerHTML = \"﻿\" + t;var n=e.firstChild;1 === n.data.length?e.removeChild(n):n.deleteData(0,1);}else e.innerHTML = t;});}t.exports = a;},{21:21}],145:[function(e,t,n){\"use strict\";var r=e(21),o=e(114),i=e(144),a=function a(e,t){e.textContent = t;};r.canUseDOM && (\"textContent\" in document.documentElement || (a = function(e,t){i(e,o(t));})),t.exports = a;},{114:114,144:144,21:21}],146:[function(e,t,n){\"use strict\";function r(e,t){if(e === t)return !0;var n;for(n in e) if(e.hasOwnProperty(n) && (!t.hasOwnProperty(n) || e[n] !== t[n]))return !1;for(n in t) if(t.hasOwnProperty(n) && !e.hasOwnProperty(n))return !1;return !0;}t.exports = r;},{}],147:[function(e,t,n){\"use strict\";function r(e,t){if(null != e && null != t){var n=typeof e,r=typeof t;if(\"string\" === n || \"number\" === n)return \"string\" === r || \"number\" === r;if(\"object\" === r && e.type === t.type && e.key === t.key){var o=e._owner === t._owner;return o;}}return !1;}e(150);t.exports = r;},{150:150}],148:[function(e,t,n){function r(e){var t=e.length;if((o(!Array.isArray(e) && (\"object\" == typeof e || \"function\" == typeof e)),o(\"number\" == typeof t),o(0 === t || t - 1 in e),e.hasOwnProperty))try{return Array.prototype.slice.call(e);}catch(n) {}for(var r=Array(t),i=0;t > i;i++) r[i] = e[i];return r;}var o=e(133);t.exports = r;},{133:133}],149:[function(e,t,n){\"use strict\";function r(e){return v[e];}function o(e,t){return e && null != e.key?a(e.key):t.toString(36);}function i(e){return (\"\" + e).replace(g,r);}function a(e){return \"$\" + i(e);}function u(e,t,n,r,i){var s=typeof e;if(((\"undefined\" === s || \"boolean\" === s) && (e = null),null === e || \"string\" === s || \"number\" === s || l.isValidElement(e)))return (r(i,e,\"\" === t?h + o(e,0):t,n),1);var p,v,g,y=0;if(Array.isArray(e))for(var C=0;C < e.length;C++) p = e[C],v = (\"\" !== t?t + m:h) + o(p,C),g = n + y,y += u(p,v,g,r,i);else {var E=d(e);if(E){var b,_=E.call(e);if(E !== e.entries)for(var x=0;!(b = _.next()).done;) p = b.value,v = (\"\" !== t?t + m:h) + o(p,x++),g = n + y,y += u(p,v,g,r,i);else for(;!(b = _.next()).done;) {var D=b.value;D && (p = D[1],v = (\"\" !== t?t + m:h) + a(D[0]) + m + o(p,0),g = n + y,y += u(p,v,g,r,i));}}else if(\"object\" === s){f(1 !== e.nodeType);var M=c.extract(e);for(var N in M) M.hasOwnProperty(N) && (p = M[N],v = (\"\" !== t?t + m:h) + a(N) + m + o(p,0),g = n + y,y += u(p,v,g,r,i));}}return y;}function s(e,t,n){return null == e?0:u(e,\"\",0,t,n);}var l=e(55),c=e(61),p=e(64),d=e(124),f=e(133),h=(e(150),p.SEPARATOR),m=\":\",v={\"=\":\"=0\",\".\":\"=1\",\":\":\"=2\"},g=/[=.:]/g;t.exports = s;},{124:124,133:133,150:150,55:55,61:61,64:64}],150:[function(e,t,n){\"use strict\";var r=e(112),o=r;t.exports = o;},{112:112}]},{},[1])(1);});//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { 'default': obj };\n}\n\nvar _libMentionJsx = __webpack_require__(3);\n\nvar _libMentionJsx2 = _interopRequireDefault(_libMentionJsx);\n\nexports['default'] = _libMentionJsx2['default'];\nmodule.exports = exports['default'];//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2luZGV4LmpzPzI2NDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1lbnRpb24gZnJvbSAnLi9saWIvbWVudGlvbi5qc3gnO1xuXG5leHBvcnQgZGVmYXVsdCBNZW50aW9uO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9pbmRleC5qc1xuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\r\n * @author: vincent.bian\r\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _panelJsx = __webpack_require__(4);\n\nvar _panelJsx2 = _interopRequireDefault(_panelJsx);\n\nvar _editorJsx = __webpack_require__(6);\n\nvar _editorJsx2 = _interopRequireDefault(_editorJsx);\n\nvar _keycode = __webpack_require__(10);\n\nvar __matchTimer = undefined;\n\nvar Mention = (function (_React$Component) {\n    _inherits(Mention, _React$Component);\n\n    function Mention(props) {\n        _classCallCheck(this, Mention);\n\n        _get(Object.getPrototypeOf(Mention.prototype), 'constructor', this).call(this, props);\n        this.state = {\n            target: null,\n            mentionList: [],\n            cursorPosition: {\n                x: 0,\n                y: 0\n            },\n            panelVisible: false,\n            panelIdx: 0\n        };\n    }\n\n    _createClass(Mention, [{\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps, prevState) {\n            if (prevState.mentionList.length !== this.state.mentionList.length) {\n                this.setState({\n                    panelVisible: this.state.mentionList.length > 0\n                });\n            }\n            if (!prevState.panelVisible && this.state.panelVisible) {\n                this.setState({\n                    panelIdx: 0\n                });\n            }\n        }\n    }, {\n        key: 'selectItem',\n        value: function selectItem(data) {\n            this.setState({\n                target: {\n                    data: data,\n                    t: new Date().getTime()\n                },\n                mentionList: []\n            });\n        }\n    }, {\n        key: 'runMatcher',\n        value: function runMatcher(str) {\n            var _this = this;\n\n            __matchTimer && clearTimeout(__matchTimer);\n            __matchTimer = setTimeout((function () {\n                _this._matcher(str);\n            }).bind(this), this.props.delay);\n        }\n    }, {\n        key: '_matcher',\n        value: function _matcher(str) {\n            console.log('matcher run with: ' + str);\n            var _props = this.props;\n            var source = _props.source;\n            var matchRange = _props.matchRange;\n\n            this.setState({\n                panelVisible: false\n            });\n            if (str.length >= matchRange[0] && str.length <= matchRange[1]) {\n                if (Array.isArray(source)) {\n                    this._next(source.filter(function (item) {\n                        return item.indexOf(str) !== -1;\n                    }));\n                } else {\n                    source(this._next);\n                }\n            }\n        }\n    }, {\n        key: 'setPanelPos',\n        value: function setPanelPos(pos) {\n            this.setState({\n                cursorPosition: pos\n            });\n        }\n    }, {\n        key: '_next',\n        value: function _next(matchResult) {\n            if (this.props.formatter) {\n                matchResult = this.props.formatter(matchResult);\n            }\n            this.setState({\n                mentionList: matchResult\n            });\n        }\n    }, {\n        key: 'onKeyup',\n        value: function onKeyup(e) {\n            if (this.state.panelVisible) {\n                var count = this.state.mentionList.length;\n                switch (e.keyCode) {\n                    case _keycode.KEYCODE.UP:\n                        this.setState({\n                            panelIdx: this.state.panelIdx === 0 ? count - 1 : this.state.panelIdx - 1\n                        });\n                        break;\n                    case _keycode.KEYCODE.DOWN:\n                        this.setState({\n                            panelIdx: this.state.panelIdx === count - 1 ? 0 : this.state.panelIdx + 1\n                        });\n                        break;\n                    case _keycode.KEYCODE.ENTER:\n                        this.selectItem(this.state.mentionList[this.state.panelIdx]);\n                        break;\n                    default:\n                        this.setState({\n                            mentionList: []\n                        });\n                        break;\n                }\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var props = this.props;\n            var panelPosition = {\n                left: this.state.cursorPosition.x,\n                top: this.state.cursorPosition.y\n            };\n            return _react2['default'].createElement(\n                'div',\n                { onKeyUp: this.onKeyup.bind(this) },\n                _react2['default'].createElement(\n                    _editorJsx2['default'],\n                    {\n                        prefixCls: props.prefixCls,\n                        panelVisible: this.state.panelVisible,\n                        matcher: this.runMatcher.bind(this),\n                        mentionTarget: this.state.target,\n                        setCursorPos: this.setPanelPos.bind(this),\n                        formatter: this.props.mentionFormatter\n                    },\n                    props.children\n                ),\n                _react2['default'].createElement(_panelJsx2['default'], {\n                    prefixCls: props.prefixCls,\n                    visible: this.state.panelVisible,\n                    idx: this.state.panelIdx,\n                    list: this.state.mentionList,\n                    onSelect: this.selectItem.bind(this),\n                    formatter: this.props.panelFormatter,\n                    style: panelPosition })\n            );\n        }\n    }]);\n\n    return Mention;\n})(_react2['default'].Component);\n\nexports['default'] = Mention;\n\nMention.displayName = 'uxcore-mention';\nMention.propType = {\n    prefixCls: _react2['default'].PropTypes.string,\n    source: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.array, _react2['default'].PropTypes.func]),\n    delay: _react2['default'].PropTypes.number,\n    matchRange: _react2['default'].PropTypes.arrayOf(_react2['default'].PropTypes.number),\n    formatter: _react2['default'].PropTypes.func,\n    panelFormatter: _react2['default'].PropTypes.func,\n    mentionFormatter: _react2['default'].PropTypes.func\n};\nMention.defaultProps = {\n    prefixCls: 'kuma-mention',\n    source: [],\n    delay: 100,\n    matchRange: [2, 8],\n    formatter: function formatter(data) {\n        return data;\n    },\n    panelFormatter: function panelFormatter(data) {\n        return '' + data.text;\n    },\n    mentionFormatter: function mentionFormatter(data) {\n        return '@' + data.text;\n    }\n};\nmodule.exports = exports['default'];//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = __webpack_require__(5);\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar Panel = (function (_React$Component) {\n\t_inherits(Panel, _React$Component);\n\n\tfunction Panel(props) {\n\t\t_classCallCheck(this, Panel);\n\n\t\t_get(Object.getPrototypeOf(Panel.prototype), 'constructor', this).call(this, props);\n\t}\n\n\t_createClass(Panel, [{\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar _this = this;\n\n\t\t\tvar props = this.props;\n\t\t\tvar onSelect = props.onSelect;\n\t\t\tvar list = props.list;\n\t\t\tvar style = props.style;\n\t\t\tvar visible = props.visible;\n\t\t\tvar idx = props.idx;\n\t\t\tvar formatter = props.formatter;\n\t\t\tvar prefixCls = props.prefixCls;\n\n\t\t\tvar clsObj = {};\n\t\t\tclsObj[prefixCls + '-panel'] = true;\n\t\t\tclsObj[prefixCls + '-panel-visible'] = visible;\n\t\t\tvar cls = (0, _classnames2['default'])(clsObj);\n\t\t\treturn _react2['default'].createElement(\n\t\t\t\t'ul',\n\t\t\t\t{ className: cls, style: style },\n\t\t\t\tlist.map(function (item, index) {\n\t\t\t\t\tvar itemClsObj = {};\n\t\t\t\t\titemClsObj[prefixCls + '-panel-item'] = true;\n\t\t\t\t\titemClsObj[prefixCls + '-panel-item-current'] = idx === index;\n\t\t\t\t\tvar itemCls = (0, _classnames2['default'])(itemClsObj);\n\t\t\t\t\treturn _react2['default'].createElement(\n\t\t\t\t\t\t'li',\n\t\t\t\t\t\t{ className: itemCls, key: index, onClick: onSelect.bind(_this, item) },\n\t\t\t\t\t\tformatter(item)\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}]);\n\n\treturn Panel;\n})(_react2['default'].Component);\n\nexports['default'] = Panel;\n\nPanel.displayName = 'uxcore-mention-panel';\nPanel.propType = {\n\tprefixCls: _react2['default'].PropTypes.string,\n\tlist: _react2['default'].PropTypes.array,\n\tstyle: _react2['default'].PropTypes.object,\n\tidx: _react2['default'].PropTypes.number,\n\tonSelect: _react2['default'].PropTypes.func,\n\tformatter: _react2['default'].PropTypes.func\n};\nPanel.defaultProps = {\n\tprefixCls: '',\n\tlist: [],\n\tstyle: {},\n\tidx: 0,\n\tonSelect: null,\n\tformatter: ''\n};\nmodule.exports = exports['default'];//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2xpYi9wYW5lbC5qc3g/NjllZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhbmVsIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblx0Y29uc3RydWN0b3IocHJvcHMpe1xuXHRcdHN1cGVyKHByb3BzKTtcblx0fVxuXHRyZW5kZXIoKXtcblx0XHRsZXQgcHJvcHMgPSB0aGlzLnByb3BzO1xuXHRcdGxldCB7b25TZWxlY3QsIGxpc3QsIHN0eWxlLCB2aXNpYmxlLCBpZHgsIGZvcm1hdHRlciwgcHJlZml4Q2xzfSA9IHByb3BzO1xuXHRcdGxldCBjbHNPYmogPSB7fTtcblx0XHRjbHNPYmpbYCR7cHJlZml4Q2xzfS1wYW5lbGBdID0gdHJ1ZTtcblx0XHRjbHNPYmpbYCR7cHJlZml4Q2xzfS1wYW5lbC12aXNpYmxlYF0gPSB2aXNpYmxlO1xuXHRcdGxldCBjbHMgPSBjbGFzc05hbWVzKGNsc09iaik7XG5cdFx0cmV0dXJuIChcblx0XHRcdDx1bCBjbGFzc05hbWU9e2Nsc30gc3R5bGU9e3N0eWxlfT5cblx0XHRcdFx0e2xpc3QubWFwKChpdGVtLCBpbmRleCk9PiB7XG5cdFx0XHRcdFx0bGV0IGl0ZW1DbHNPYmogPSB7fTtcblx0XHRcdFx0XHRpdGVtQ2xzT2JqW2Ake3ByZWZpeENsc30tcGFuZWwtaXRlbWBdID0gdHJ1ZTtcblx0XHRcdFx0XHRpdGVtQ2xzT2JqW2Ake3ByZWZpeENsc30tcGFuZWwtaXRlbS1jdXJyZW50YF0gPSBpZHggPT09IGluZGV4O1xuXHRcdFx0XHRcdGxldCBpdGVtQ2xzID0gY2xhc3NOYW1lcyhpdGVtQ2xzT2JqKTtcblx0XHRcdFx0XHRyZXR1cm4gPGxpIGNsYXNzTmFtZT17aXRlbUNsc30ga2V5PXtpbmRleH0gb25DbGljaz17b25TZWxlY3QuYmluZCh0aGlzLCBpdGVtKX0+e2Zvcm1hdHRlcihpdGVtKX08L2xpPjtcblx0XHRcdFx0fSl9XG5cdFx0XHQ8L3VsPlxuXHRcdCk7XG5cdH1cbn1cblBhbmVsLmRpc3BsYXlOYW1lID0gJ3V4Y29yZS1tZW50aW9uLXBhbmVsJztcblBhbmVsLnByb3BUeXBlID0ge1xuXHRwcmVmaXhDbHM6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXG5cdGxpc3Q6IFJlYWN0LlByb3BUeXBlcy5hcnJheSxcblx0c3R5bGU6IFJlYWN0LlByb3BUeXBlcy5vYmplY3QsXG5cdGlkeDogUmVhY3QuUHJvcFR5cGVzLm51bWJlcixcblx0b25TZWxlY3Q6IFJlYWN0LlByb3BUeXBlcy5mdW5jLFxuXHRmb3JtYXR0ZXI6IFJlYWN0LlByb3BUeXBlcy5mdW5jXG59O1xuUGFuZWwuZGVmYXVsdFByb3BzID0ge1xuXHRwcmVmaXhDbHM6ICcnLFxuXHRsaXN0OiBbXSxcblx0c3R5bGU6IHt9LFxuXHRpZHg6IDAsXG5cdG9uU2VsZWN0OiBudWxsLFxuXHRmb3JtYXR0ZXI6ICcnXG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9saWIvcGFuZWwuanN4XG4gKiovIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7O0FBSUE7OztBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUVBOzs7QUF0QkE7QUFBQTtBQUNBO0FBREE7QUFDQTtBQXVCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*!\n  Copyright (c) 2015 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n'use strict';\n\n(function () {\n\t'use strict';\n\n\tfunction classNames() {\n\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif ('string' === argType || 'number' === argType) {\n\t\t\t\tclasses += ' ' + arg;\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses += ' ' + classNames.apply(null, arg);\n\t\t\t} else if ('object' === argType) {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (arg.hasOwnProperty(key) && arg[key]) {\n\t\t\t\t\t\tclasses += ' ' + key;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.substr(1);\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (true) {\n\t\t// AMD. Register as an anonymous module.\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\t\treturn classNames;\n\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n})();//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vY2xhc3NuYW1lcy9pbmRleC5qcz84ZTQzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICBDb3B5cmlnaHQgKGMpIDIwMTUgSmVkIFdhdHNvbi5cbiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlIChNSVQpLCBzZWVcbiAgaHR0cDovL2plZHdhdHNvbi5naXRodWIuaW8vY2xhc3NuYW1lc1xuKi9cblxuKGZ1bmN0aW9uICgpIHtcblx0J3VzZSBzdHJpY3QnO1xuXG5cdGZ1bmN0aW9uIGNsYXNzTmFtZXMgKCkge1xuXG5cdFx0dmFyIGNsYXNzZXMgPSAnJztcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgYXJnID0gYXJndW1lbnRzW2ldO1xuXHRcdFx0aWYgKCFhcmcpIGNvbnRpbnVlO1xuXG5cdFx0XHR2YXIgYXJnVHlwZSA9IHR5cGVvZiBhcmc7XG5cblx0XHRcdGlmICgnc3RyaW5nJyA9PT0gYXJnVHlwZSB8fCAnbnVtYmVyJyA9PT0gYXJnVHlwZSkge1xuXHRcdFx0XHRjbGFzc2VzICs9ICcgJyArIGFyZztcblxuXHRcdFx0fSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGFyZykpIHtcblx0XHRcdFx0Y2xhc3NlcyArPSAnICcgKyBjbGFzc05hbWVzLmFwcGx5KG51bGwsIGFyZyk7XG5cblx0XHRcdH0gZWxzZSBpZiAoJ29iamVjdCcgPT09IGFyZ1R5cGUpIHtcblx0XHRcdFx0Zm9yICh2YXIga2V5IGluIGFyZykge1xuXHRcdFx0XHRcdGlmIChhcmcuaGFzT3duUHJvcGVydHkoa2V5KSAmJiBhcmdba2V5XSkge1xuXHRcdFx0XHRcdFx0Y2xhc3NlcyArPSAnICcgKyBrZXk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXMuc3Vic3RyKDEpO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBjbGFzc05hbWVzO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGRlZmluZS5hbWQgPT09ICdvYmplY3QnICYmIGRlZmluZS5hbWQpe1xuXHRcdC8vIEFNRC4gUmVnaXN0ZXIgYXMgYW4gYW5vbnltb3VzIG1vZHVsZS5cblx0XHRkZWZpbmUoZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXM7XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LmNsYXNzTmFtZXMgPSBjbGFzc05hbWVzO1xuXHR9XG5cbn0oKSk7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL34vY2xhc3NuYW1lcy9pbmRleC5qc1xuICoqLyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _rangy = __webpack_require__(7);\n\nvar _rangy2 = _interopRequireDefault(_rangy);\n\n__webpack_require__(8);\n\nvar _util = __webpack_require__(9);\n\nvar _keycode = __webpack_require__(10);\n\nvar _classnames = __webpack_require__(5);\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar __store = {};\n//webkit browsers support 'plaintext-only'\nvar contentEditableValue = (function () {\n  var div = document.createElement('div');\n  div.setAttribute('contenteditable', 'PLAINTEXT-ONLY');\n  return div.contentEditable === 'plaintext-only' ? 'plaintext-only' : true;\n})();\n\nvar Editor = (function (_React$Component) {\n  _inherits(Editor, _React$Component);\n\n  function Editor(props) {\n    _classCallCheck(this, Editor);\n\n    _get(Object.getPrototypeOf(Editor.prototype), 'constructor', this).call(this, props);\n  }\n\n  _createClass(Editor, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var editor = _react2['default'].findDOMNode(this.refs.editor);\n      console.log(editor);\n      _rangy2['default'].init();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.mentionTarget && (!this.props.mentionTarget || this.props.mentionTarget.t !== nextProps.mentionTarget.t)) {\n        this.insertMentionTarget(nextProps.mentionTarget.data);\n      }\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (this.props.children !== nextProps.children) {\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: 'onKeydown',\n    value: function onKeydown(e) {\n      switch (e.keyCode) {\n        case _keycode.KEYCODE.UP:\n        case _keycode.KEYCODE.DOWN:\n          if (this.props.panelVisible) {\n            e.preventDefault();\n          }\n          break;\n        case _keycode.KEYCODE.ENTER:\n          // insert br at the end of line\n          e.preventDefault();\n          if (!this.props.panelVisible) {\n            var editor = _react2['default'].findDOMNode(this.refs.editor);\n            var sel = _rangy2['default'].getSelection();\n            var range = sel.getRangeAt(0);\n\n            // make sure the last element of the editor is br\n            // refer to: http://stackoverflow.com/questions/6023307/dealing-with-line-breaks-on-contenteditable-div\n            if (!editor.lastChild || editor.lastChild.nodeName.toLowerCase() !== 'br') {\n              editor.appendChild(document.createElement('br'));\n            }\n            var nodeBr = document.createElement('br');\n            range.deleteContents();\n            range.insertNode(nodeBr);\n            range.setStartAfter(nodeBr);\n            sel.setSingleRange(range);\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'onKeyup',\n    value: function onKeyup(e) {\n      // if (this.props.panelVisible) {return;}\n      switch (e.keyCode) {\n        case _keycode.KEYCODE.UP:\n        case _keycode.KEYCODE.DOWN:\n          if (this.props.panelVisible) {\n            e.preventDefault();\n          }\n          break;\n        case _keycode.KEYCODE.ENTER:\n          break;\n        default:\n          var sel = _rangy2['default'].getSelection();\n          var range = sel.getRangeAt(0);\n          if (range.commonAncestorContainer.nodeType === 3) {\n            range.setStart(range.commonAncestorContainer, 0);\n            var originStr = range.toString();\n            var str = (0, _util.parseStrByDelimiter)(originStr, '@');\n            // send str to matcher\n            this.props.matcher(str, range.getEndClientPos());\n            if (str) {\n              this.props.setCursorPos(range.getEndClientPos());\n              // set range's start position before delimiter\n              range.setStart(range.commonAncestorContainer, originStr.length - str.length - 1);\n              // save range position\n              __store.bookmark = range.getBookmark(range.commonAncestorContainer);\n            }\n          }\n          break;\n      }\n    }\n  }, {\n    key: 'insertMentionTarget',\n    value: function insertMentionTarget(mentionData) {\n      console.log(mentionData);\n      var editor = _react2['default'].findDOMNode(this.refs.editor);\n      var sel = _rangy2['default'].getSelection();\n      var formatter = this.props.formatter;\n      if (__store.bookmark) {\n        var range = sel.getRangeAt(0);\n        range.moveToBookmark(__store.bookmark);\n        var mentionNode = document.createElement('input');\n        mentionNode.setAttribute('type', 'button');\n        mentionNode.setAttribute('tabindex', '-1');\n        mentionNode.className = this.props.prefixCls + '-node';\n        mentionNode.value = formatter(mentionData);\n        // delete origin content in range\n        range.deleteContents();\n        range.insertNode(mentionNode);\n        range.collapseAfter(mentionNode);\n        range.select();\n        setTimeout(function () {\n          editor.focus();\n        }, 0);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var style = {\n        width: '400px',\n        height: '300px',\n        border: '1px solid #000'\n      };\n      var className = (0, _classnames2['default'])(this.props.prefixCls, this.props.prefixCls + '-editor');\n      return _react2['default'].createElement(\n        'div',\n        { className: className, ref: 'editor',\n          onKeyUp: this.onKeyup.bind(this),\n          onKeyDown: this.onKeydown.bind(this),\n          contentEditable: contentEditableValue,\n          style: style },\n        this.props.children\n      );\n    }\n  }]);\n\n  return Editor;\n})(_react2['default'].Component);\n\nexports['default'] = Editor;\n\nEditor.displayName = 'uxcore-mention-editor';\nEditor.propType = {\n  prefixCls: _react2['default'].PropTypes.string,\n  mentionTarget: _react2['default'].PropTypes.object,\n  matcher: _react2['default'].PropTypes.func,\n  setCursorPos: _react2['default'].PropTypes.func,\n  panelVisible: _react2['default'].PropTypes.bool,\n  formatter: _react2['default'].PropTypes.func\n};\nEditor.defaultProps = {\n  prefixCls: '',\n  mentionTarget: null,\n  matcher: function matcher() {},\n  setCursorPos: function setCursorPos() {},\n  panelVisible: false,\n  formatter: function formatter() {}\n};\nmodule.exports = exports['default'];//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * Rangy, a cross-browser JavaScript range and selection library\r\n * https://github.com/timdown/rangy\r\n *\r\n * Copyright 2015, Tim Down\r\n * Licensed under the MIT license.\r\n * Version: 1.3.0\r\n * Build date: 10 May 2015\r\n */\"use strict\";(function(factory,root){if(true){ // AMD. Register as an anonymous module.\n!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));}else if(typeof module != \"undefined\" && typeof exports == \"object\"){ // Node/CommonJS style\nmodule.exports = factory();}else { // No AMD or CommonJS support so we place Rangy in (probably) the global variable\nroot.rangy = factory();}})(function(){var OBJECT=\"object\",FUNCTION=\"function\",UNDEFINED=\"undefined\"; // Minimal set of properties required for DOM Level 2 Range compliance. Comparison constants such as START_TO_START\n// are omitted because ranges in KHTML do not have them but otherwise work perfectly well. See issue 113.\nvar domRangeProperties=[\"startContainer\",\"startOffset\",\"endContainer\",\"endOffset\",\"collapsed\",\"commonAncestorContainer\"]; // Minimal set of methods required for DOM Level 2 Range compliance\nvar domRangeMethods=[\"setStart\",\"setStartBefore\",\"setStartAfter\",\"setEnd\",\"setEndBefore\",\"setEndAfter\",\"collapse\",\"selectNode\",\"selectNodeContents\",\"compareBoundaryPoints\",\"deleteContents\",\"extractContents\",\"cloneContents\",\"insertNode\",\"surroundContents\",\"cloneRange\",\"toString\",\"detach\"];var textRangeProperties=[\"boundingHeight\",\"boundingLeft\",\"boundingTop\",\"boundingWidth\",\"htmlText\",\"text\"]; // Subset of TextRange's full set of methods that we're interested in\nvar textRangeMethods=[\"collapse\",\"compareEndPoints\",\"duplicate\",\"moveToElementText\",\"parentElement\",\"select\",\"setEndPoint\",\"getBoundingClientRect\"]; /*----------------------------------------------------------------------------------------------------------------*/ // Trio of functions taken from Peter Michaux's article:\n// http://peter.michaux.ca/articles/feature-detection-state-of-the-art-browser-scripting\nfunction isHostMethod(o,p){var t=typeof o[p];return t == FUNCTION || !!(t == OBJECT && o[p]) || t == \"unknown\";}function isHostObject(o,p){return !!(typeof o[p] == OBJECT && o[p]);}function isHostProperty(o,p){return typeof o[p] != UNDEFINED;} // Creates a convenience function to save verbose repeated calls to tests functions\nfunction createMultiplePropertyTest(testFunc){return function(o,props){var i=props.length;while(i--) {if(!testFunc(o,props[i])){return false;}}return true;};} // Next trio of functions are a convenience to save verbose repeated calls to previous two functions\nvar areHostMethods=createMultiplePropertyTest(isHostMethod);var areHostObjects=createMultiplePropertyTest(isHostObject);var areHostProperties=createMultiplePropertyTest(isHostProperty);function isTextRange(range){return range && areHostMethods(range,textRangeMethods) && areHostProperties(range,textRangeProperties);}function getBody(doc){return isHostObject(doc,\"body\")?doc.body:doc.getElementsByTagName(\"body\")[0];}var forEach=[].forEach?function(arr,func){arr.forEach(func);}:function(arr,func){for(var i=0,len=arr.length;i < len;++i) {func(arr[i],i);}};var modules={};var isBrowser=typeof window != UNDEFINED && typeof document != UNDEFINED;var util={isHostMethod:isHostMethod,isHostObject:isHostObject,isHostProperty:isHostProperty,areHostMethods:areHostMethods,areHostObjects:areHostObjects,areHostProperties:areHostProperties,isTextRange:isTextRange,getBody:getBody,forEach:forEach};var api={version:\"1.3.0\",initialized:false,isBrowser:isBrowser,supported:true,util:util,features:{},modules:modules,config:{alertOnFail:false,alertOnWarn:false,preferTextRange:false,autoInitialize:typeof rangyAutoInitialize == UNDEFINED?true:rangyAutoInitialize}};function consoleLog(msg){if(typeof console != UNDEFINED && isHostMethod(console,\"log\")){console.log(msg);}}function alertOrLog(msg,shouldAlert){if(isBrowser && shouldAlert){alert(msg);}else {consoleLog(msg);}}function fail(reason){api.initialized = true;api.supported = false;alertOrLog(\"Rangy is not supported in this environment. Reason: \" + reason,api.config.alertOnFail);}api.fail = fail;function warn(msg){alertOrLog(\"Rangy warning: \" + msg,api.config.alertOnWarn);}api.warn = warn; // Add utility extend() method\nvar extend;if(({}).hasOwnProperty){util.extend = extend = function(obj,props,deep){var o,p;for(var i in props) {if(props.hasOwnProperty(i)){o = obj[i];p = props[i];if(deep && o !== null && typeof o == \"object\" && p !== null && typeof p == \"object\"){extend(o,p,true);}obj[i] = p;}} // Special case for toString, which does not show up in for...in loops in IE <= 8\nif(props.hasOwnProperty(\"toString\")){obj.toString = props.toString;}return obj;};util.createOptions = function(optionsParam,defaults){var options={};extend(options,defaults);if(optionsParam){extend(options,optionsParam);}return options;};}else {fail(\"hasOwnProperty not supported\");} // Test whether we're in a browser and bail out if not\nif(!isBrowser){fail(\"Rangy can only run in a browser\");} // Test whether Array.prototype.slice can be relied on for NodeLists and use an alternative toArray() if not\n(function(){var toArray;if(isBrowser){var el=document.createElement(\"div\");el.appendChild(document.createElement(\"span\"));var slice=[].slice;try{if(slice.call(el.childNodes,0)[0].nodeType == 1){toArray = function(arrayLike){return slice.call(arrayLike,0);};}}catch(e) {}}if(!toArray){toArray = function(arrayLike){var arr=[];for(var i=0,len=arrayLike.length;i < len;++i) {arr[i] = arrayLike[i];}return arr;};}util.toArray = toArray;})(); // Very simple event handler wrapper function that doesn't attempt to solve issues such as \"this\" handling or\n// normalization of event properties\nvar addListener;if(isBrowser){if(isHostMethod(document,\"addEventListener\")){addListener = function(obj,eventType,listener){obj.addEventListener(eventType,listener,false);};}else if(isHostMethod(document,\"attachEvent\")){addListener = function(obj,eventType,listener){obj.attachEvent(\"on\" + eventType,listener);};}else {fail(\"Document does not have required addEventListener or attachEvent method\");}util.addListener = addListener;}var initListeners=[];function getErrorDesc(ex){return ex.message || ex.description || String(ex);} // Initialization\nfunction init(){if(!isBrowser || api.initialized){return;}var testRange;var implementsDomRange=false,implementsTextRange=false; // First, perform basic feature tests\nif(isHostMethod(document,\"createRange\")){testRange = document.createRange();if(areHostMethods(testRange,domRangeMethods) && areHostProperties(testRange,domRangeProperties)){implementsDomRange = true;}}var body=getBody(document);if(!body || body.nodeName.toLowerCase() != \"body\"){fail(\"No body element found\");return;}if(body && isHostMethod(body,\"createTextRange\")){testRange = body.createTextRange();if(isTextRange(testRange)){implementsTextRange = true;}}if(!implementsDomRange && !implementsTextRange){fail(\"Neither Range nor TextRange are available\");return;}api.initialized = true;api.features = {implementsDomRange:implementsDomRange,implementsTextRange:implementsTextRange}; // Initialize modules\nvar module,errorMessage;for(var moduleName in modules) {if((module = modules[moduleName]) instanceof Module){module.init(module,api);}} // Call init listeners\nfor(var i=0,len=initListeners.length;i < len;++i) {try{initListeners[i](api);}catch(ex) {errorMessage = \"Rangy init listener threw an exception. Continuing. Detail: \" + getErrorDesc(ex);consoleLog(errorMessage);}}}function deprecationNotice(deprecated,replacement,module){if(module){deprecated += \" in module \" + module.name;}api.warn(\"DEPRECATED: \" + deprecated + \" is deprecated. Please use \" + replacement + \" instead.\");}function createAliasForDeprecatedMethod(owner,deprecated,replacement,module){owner[deprecated] = function(){deprecationNotice(deprecated,replacement,module);return owner[replacement].apply(owner,util.toArray(arguments));};}util.deprecationNotice = deprecationNotice;util.createAliasForDeprecatedMethod = createAliasForDeprecatedMethod; // Allow external scripts to initialize this library in case it's loaded after the document has loaded\napi.init = init; // Execute listener immediately if already initialized\napi.addInitListener = function(listener){if(api.initialized){listener(api);}else {initListeners.push(listener);}};var shimListeners=[];api.addShimListener = function(listener){shimListeners.push(listener);};function shim(win){win = win || window;init(); // Notify listeners\nfor(var i=0,len=shimListeners.length;i < len;++i) {shimListeners[i](win);}}if(isBrowser){api.shim = api.createMissingNativeApi = shim;createAliasForDeprecatedMethod(api,\"createMissingNativeApi\",\"shim\");}function Module(name,dependencies,initializer){this.name = name;this.dependencies = dependencies;this.initialized = false;this.supported = false;this.initializer = initializer;}Module.prototype = {init:function init(){var requiredModuleNames=this.dependencies || [];for(var i=0,len=requiredModuleNames.length,requiredModule,moduleName;i < len;++i) {moduleName = requiredModuleNames[i];requiredModule = modules[moduleName];if(!requiredModule || !(requiredModule instanceof Module)){throw new Error(\"required module '\" + moduleName + \"' not found\");}requiredModule.init();if(!requiredModule.supported){throw new Error(\"required module '\" + moduleName + \"' not supported\");}} // Now run initializer\nthis.initializer(this);},fail:function fail(reason){this.initialized = true;this.supported = false;throw new Error(reason);},warn:function warn(msg){api.warn(\"Module \" + this.name + \": \" + msg);},deprecationNotice:function deprecationNotice(deprecated,replacement){api.warn(\"DEPRECATED: \" + deprecated + \" in module \" + this.name + \" is deprecated. Please use \" + replacement + \" instead\");},createError:function createError(msg){return new Error(\"Error in Rangy \" + this.name + \" module: \" + msg);}};function createModule(name,dependencies,initFunc){var newModule=new Module(name,dependencies,function(module){if(!module.initialized){module.initialized = true;try{initFunc(api,module);module.supported = true;}catch(ex) {var errorMessage=\"Module '\" + name + \"' failed to load: \" + getErrorDesc(ex);consoleLog(errorMessage);if(ex.stack){consoleLog(ex.stack);}}}});modules[name] = newModule;return newModule;}api.createModule = function(name){ // Allow 2 or 3 arguments (second argument is an optional array of dependencies)\nvar initFunc,dependencies;if(arguments.length == 2){initFunc = arguments[1];dependencies = [];}else {initFunc = arguments[2];dependencies = arguments[1];}var module=createModule(name,dependencies,initFunc); // Initialize the module immediately if the core is already initialized\nif(api.initialized && api.supported){module.init();}};api.createCoreModule = function(name,dependencies,initFunc){createModule(name,dependencies,initFunc);}; /*----------------------------------------------------------------------------------------------------------------*/ // Ensure rangy.rangePrototype and rangy.selectionPrototype are available immediately\nfunction RangePrototype(){}api.RangePrototype = RangePrototype;api.rangePrototype = new RangePrototype();function SelectionPrototype(){}api.selectionPrototype = new SelectionPrototype(); /*----------------------------------------------------------------------------------------------------------------*/ // DOM utility methods used by Rangy\napi.createCoreModule(\"DomUtil\",[],function(api,module){var UNDEF=\"undefined\";var util=api.util;var getBody=util.getBody; // Perform feature tests\nif(!util.areHostMethods(document,[\"createDocumentFragment\",\"createElement\",\"createTextNode\"])){module.fail(\"document missing a Node creation method\");}if(!util.isHostMethod(document,\"getElementsByTagName\")){module.fail(\"document missing getElementsByTagName method\");}var el=document.createElement(\"div\");if(!util.areHostMethods(el,[\"insertBefore\",\"appendChild\",\"cloneNode\"] || !util.areHostObjects(el,[\"previousSibling\",\"nextSibling\",\"childNodes\",\"parentNode\"]))){module.fail(\"Incomplete Element implementation\");} // innerHTML is required for Range's createContextualFragment method\nif(!util.isHostProperty(el,\"innerHTML\")){module.fail(\"Element is missing innerHTML property\");}var textNode=document.createTextNode(\"test\");if(!util.areHostMethods(textNode,[\"splitText\",\"deleteData\",\"insertData\",\"appendData\",\"cloneNode\"] || !util.areHostObjects(el,[\"previousSibling\",\"nextSibling\",\"childNodes\",\"parentNode\"]) || !util.areHostProperties(textNode,[\"data\"]))){module.fail(\"Incomplete Text Node implementation\");} /*----------------------------------------------------------------------------------------------------------------*/ // Removed use of indexOf because of a bizarre bug in Opera that is thrown in one of the Acid3 tests. I haven't been\n// able to replicate it outside of the test. The bug is that indexOf returns -1 when called on an Array that\n// contains just the document as a single element and the value searched for is the document.\nvar arrayContains= /*Array.prototype.indexOf ?\n            function(arr, val) {\n                return arr.indexOf(val) > -1;\n            }:*/function arrayContains(arr,val){var i=arr.length;while(i--) {if(arr[i] === val){return true;}}return false;}; // Opera 11 puts HTML elements in the null namespace, it seems, and IE 7 has undefined namespaceURI\nfunction isHtmlNamespace(node){var ns;return typeof node.namespaceURI == UNDEF || ((ns = node.namespaceURI) === null || ns == \"http://www.w3.org/1999/xhtml\");}function parentElement(node){var parent=node.parentNode;return parent.nodeType == 1?parent:null;}function getNodeIndex(node){var i=0;while(node = node.previousSibling) {++i;}return i;}function getNodeLength(node){switch(node.nodeType){case 7:case 10:return 0;case 3:case 8:return node.length;default:return node.childNodes.length;}}function getCommonAncestor(node1,node2){var ancestors=[],n;for(n = node1;n;n = n.parentNode) {ancestors.push(n);}for(n = node2;n;n = n.parentNode) {if(arrayContains(ancestors,n)){return n;}}return null;}function isAncestorOf(ancestor,descendant,selfIsAncestor){var n=selfIsAncestor?descendant:descendant.parentNode;while(n) {if(n === ancestor){return true;}else {n = n.parentNode;}}return false;}function isOrIsAncestorOf(ancestor,descendant){return isAncestorOf(ancestor,descendant,true);}function getClosestAncestorIn(node,ancestor,selfIsAncestor){var p,n=selfIsAncestor?node:node.parentNode;while(n) {p = n.parentNode;if(p === ancestor){return n;}n = p;}return null;}function isCharacterDataNode(node){var t=node.nodeType;return t == 3 || t == 4 || t == 8; // Text, CDataSection or Comment\n}function isTextOrCommentNode(node){if(!node){return false;}var t=node.nodeType;return t == 3 || t == 8; // Text or Comment\n}function insertAfter(node,precedingNode){var nextNode=precedingNode.nextSibling,parent=precedingNode.parentNode;if(nextNode){parent.insertBefore(node,nextNode);}else {parent.appendChild(node);}return node;} // Note that we cannot use splitText() because it is bugridden in IE 9.\nfunction splitDataNode(node,index,positionsToPreserve){var newNode=node.cloneNode(false);newNode.deleteData(0,index);node.deleteData(index,node.length - index);insertAfter(newNode,node); // Preserve positions\nif(positionsToPreserve){for(var i=0,position;position = positionsToPreserve[i++];) { // Handle case where position was inside the portion of node after the split point\nif(position.node == node && position.offset > index){position.node = newNode;position.offset -= index;} // Handle the case where the position is a node offset within node's parent\nelse if(position.node == node.parentNode && position.offset > getNodeIndex(node)){++position.offset;}}}return newNode;}function getDocument(_x){var _again=true;_function: while(_again) {var node=_x;_again = false;if(node.nodeType == 9){return node;}else if(typeof node.ownerDocument != UNDEF){return node.ownerDocument;}else if(typeof node.document != UNDEF){return node.document;}else if(node.parentNode){_x = node.parentNode;_again = true;continue _function;}else {throw module.createError(\"getDocument: no document found for node\");}}}function getWindow(node){var doc=getDocument(node);if(typeof doc.defaultView != UNDEF){return doc.defaultView;}else if(typeof doc.parentWindow != UNDEF){return doc.parentWindow;}else {throw module.createError(\"Cannot get a window object for node\");}}function getIframeDocument(iframeEl){if(typeof iframeEl.contentDocument != UNDEF){return iframeEl.contentDocument;}else if(typeof iframeEl.contentWindow != UNDEF){return iframeEl.contentWindow.document;}else {throw module.createError(\"getIframeDocument: No Document object found for iframe element\");}}function getIframeWindow(iframeEl){if(typeof iframeEl.contentWindow != UNDEF){return iframeEl.contentWindow;}else if(typeof iframeEl.contentDocument != UNDEF){return iframeEl.contentDocument.defaultView;}else {throw module.createError(\"getIframeWindow: No Window object found for iframe element\");}} // This looks bad. Is it worth it?\nfunction isWindow(obj){return obj && util.isHostMethod(obj,\"setTimeout\") && util.isHostObject(obj,\"document\");}function getContentDocument(obj,module,methodName){var doc;if(!obj){doc = document;} // Test if a DOM node has been passed and obtain a document object for it if so\nelse if(util.isHostProperty(obj,\"nodeType\")){doc = obj.nodeType == 1 && obj.tagName.toLowerCase() == \"iframe\"?getIframeDocument(obj):getDocument(obj);} // Test if the doc parameter appears to be a Window object\nelse if(isWindow(obj)){doc = obj.document;}if(!doc){throw module.createError(methodName + \"(): Parameter must be a Window object or DOM node\");}return doc;}function getRootContainer(node){var parent;while(parent = node.parentNode) {node = parent;}return node;}function comparePoints(nodeA,offsetA,nodeB,offsetB){ // See http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-Comparing\nvar nodeC,root,childA,childB,n;if(nodeA == nodeB){ // Case 1: nodes are the same\nreturn offsetA === offsetB?0:offsetA < offsetB?-1:1;}else if(nodeC = getClosestAncestorIn(nodeB,nodeA,true)){ // Case 2: node C (container B or an ancestor) is a child node of A\nreturn offsetA <= getNodeIndex(nodeC)?-1:1;}else if(nodeC = getClosestAncestorIn(nodeA,nodeB,true)){ // Case 3: node C (container A or an ancestor) is a child node of B\nreturn getNodeIndex(nodeC) < offsetB?-1:1;}else {root = getCommonAncestor(nodeA,nodeB);if(!root){throw new Error(\"comparePoints error: nodes have no common ancestor\");} // Case 4: containers are siblings or descendants of siblings\nchildA = nodeA === root?root:getClosestAncestorIn(nodeA,root,true);childB = nodeB === root?root:getClosestAncestorIn(nodeB,root,true);if(childA === childB){ // This shouldn't be possible\nthrow module.createError(\"comparePoints got to case 4 and childA and childB are the same!\");}else {n = root.firstChild;while(n) {if(n === childA){return -1;}else if(n === childB){return 1;}n = n.nextSibling;}}}} /*----------------------------------------------------------------------------------------------------------------*/ // Test for IE's crash (IE 6/7) or exception (IE >= 8) when a reference to garbage-collected text node is queried\nvar crashyTextNodes=false;function isBrokenNode(node){var n;try{n = node.parentNode;return false;}catch(e) {return true;}}(function(){var el=document.createElement(\"b\");el.innerHTML = \"1\";var textNode=el.firstChild;el.innerHTML = \"<br />\";crashyTextNodes = isBrokenNode(textNode);api.features.crashyTextNodes = crashyTextNodes;})(); /*----------------------------------------------------------------------------------------------------------------*/function inspectNode(node){if(!node){return \"[No node]\";}if(crashyTextNodes && isBrokenNode(node)){return \"[Broken node]\";}if(isCharacterDataNode(node)){return '\"' + node.data + '\"';}if(node.nodeType == 1){var idAttr=node.id?' id=\"' + node.id + '\"':\"\";return \"<\" + node.nodeName + idAttr + \">[index:\" + getNodeIndex(node) + \",length:\" + node.childNodes.length + \"][\" + (node.innerHTML || \"[innerHTML not supported]\").slice(0,25) + \"]\";}return node.nodeName;}function fragmentFromNodeChildren(node){var fragment=getDocument(node).createDocumentFragment(),child;while(child = node.firstChild) {fragment.appendChild(child);}return fragment;}var getComputedStyleProperty;if(typeof window.getComputedStyle != UNDEF){getComputedStyleProperty = function(el,propName){return getWindow(el).getComputedStyle(el,null)[propName];};}else if(typeof document.documentElement.currentStyle != UNDEF){getComputedStyleProperty = function(el,propName){return el.currentStyle?el.currentStyle[propName]:\"\";};}else {module.fail(\"No means of obtaining computed style properties found\");}function createTestElement(doc,html,contentEditable){var body=getBody(doc);var el=doc.createElement(\"div\");el.contentEditable = \"\" + !!contentEditable;if(html){el.innerHTML = html;} // Insert the test element at the start of the body to prevent scrolling to the bottom in iOS (issue #292)\nvar bodyFirstChild=body.firstChild;if(bodyFirstChild){body.insertBefore(el,bodyFirstChild);}else {body.appendChild(el);}return el;}function removeNode(node){return node.parentNode.removeChild(node);}function NodeIterator(root){this.root = root;this._next = root;}NodeIterator.prototype = {_current:null,hasNext:function hasNext(){return !!this._next;},next:function next(){var n=this._current = this._next;var child,next;if(this._current){child = n.firstChild;if(child){this._next = child;}else {next = null;while(n !== this.root && !(next = n.nextSibling)) {n = n.parentNode;}this._next = next;}}return this._current;},detach:function detach(){this._current = this._next = this.root = null;}};function createIterator(root){return new NodeIterator(root);}function DomPosition(node,offset){this.node = node;this.offset = offset;}DomPosition.prototype = {equals:function equals(pos){return !!pos && this.node === pos.node && this.offset == pos.offset;},inspect:function inspect(){return \"[DomPosition(\" + inspectNode(this.node) + \":\" + this.offset + \")]\";},toString:function toString(){return this.inspect();}};function DOMException(codeName){this.code = this[codeName];this.codeName = codeName;this.message = \"DOMException: \" + this.codeName;}DOMException.prototype = {INDEX_SIZE_ERR:1,HIERARCHY_REQUEST_ERR:3,WRONG_DOCUMENT_ERR:4,NO_MODIFICATION_ALLOWED_ERR:7,NOT_FOUND_ERR:8,NOT_SUPPORTED_ERR:9,INVALID_STATE_ERR:11,INVALID_NODE_TYPE_ERR:24};DOMException.prototype.toString = function(){return this.message;};api.dom = {arrayContains:arrayContains,isHtmlNamespace:isHtmlNamespace,parentElement:parentElement,getNodeIndex:getNodeIndex,getNodeLength:getNodeLength,getCommonAncestor:getCommonAncestor,isAncestorOf:isAncestorOf,isOrIsAncestorOf:isOrIsAncestorOf,getClosestAncestorIn:getClosestAncestorIn,isCharacterDataNode:isCharacterDataNode,isTextOrCommentNode:isTextOrCommentNode,insertAfter:insertAfter,splitDataNode:splitDataNode,getDocument:getDocument,getWindow:getWindow,getIframeWindow:getIframeWindow,getIframeDocument:getIframeDocument,getBody:getBody,isWindow:isWindow,getContentDocument:getContentDocument,getRootContainer:getRootContainer,comparePoints:comparePoints,isBrokenNode:isBrokenNode,inspectNode:inspectNode,getComputedStyleProperty:getComputedStyleProperty,createTestElement:createTestElement,removeNode:removeNode,fragmentFromNodeChildren:fragmentFromNodeChildren,createIterator:createIterator,DomPosition:DomPosition};api.DOMException = DOMException;}); /*----------------------------------------------------------------------------------------------------------------*/ // Pure JavaScript implementation of DOM Range\napi.createCoreModule(\"DomRange\",[\"DomUtil\"],function(api,module){var dom=api.dom;var util=api.util;var DomPosition=dom.DomPosition;var DOMException=api.DOMException;var isCharacterDataNode=dom.isCharacterDataNode;var getNodeIndex=dom.getNodeIndex;var isOrIsAncestorOf=dom.isOrIsAncestorOf;var getDocument=dom.getDocument;var comparePoints=dom.comparePoints;var splitDataNode=dom.splitDataNode;var getClosestAncestorIn=dom.getClosestAncestorIn;var getNodeLength=dom.getNodeLength;var arrayContains=dom.arrayContains;var getRootContainer=dom.getRootContainer;var crashyTextNodes=api.features.crashyTextNodes;var removeNode=dom.removeNode; /*----------------------------------------------------------------------------------------------------------------*/ // Utility functions\nfunction isNonTextPartiallySelected(node,range){return node.nodeType != 3 && (isOrIsAncestorOf(node,range.startContainer) || isOrIsAncestorOf(node,range.endContainer));}function getRangeDocument(range){return range.document || getDocument(range.startContainer);}function getRangeRoot(range){return getRootContainer(range.startContainer);}function getBoundaryBeforeNode(node){return new DomPosition(node.parentNode,getNodeIndex(node));}function getBoundaryAfterNode(node){return new DomPosition(node.parentNode,getNodeIndex(node) + 1);}function insertNodeAtPosition(node,n,o){var firstNodeInserted=node.nodeType == 11?node.firstChild:node;if(isCharacterDataNode(n)){if(o == n.length){dom.insertAfter(node,n);}else {n.parentNode.insertBefore(node,o == 0?n:splitDataNode(n,o));}}else if(o >= n.childNodes.length){n.appendChild(node);}else {n.insertBefore(node,n.childNodes[o]);}return firstNodeInserted;}function rangesIntersect(rangeA,rangeB,touchingIsIntersecting){assertRangeValid(rangeA);assertRangeValid(rangeB);if(getRangeDocument(rangeB) != getRangeDocument(rangeA)){throw new DOMException(\"WRONG_DOCUMENT_ERR\");}var startComparison=comparePoints(rangeA.startContainer,rangeA.startOffset,rangeB.endContainer,rangeB.endOffset),endComparison=comparePoints(rangeA.endContainer,rangeA.endOffset,rangeB.startContainer,rangeB.startOffset);return touchingIsIntersecting?startComparison <= 0 && endComparison >= 0:startComparison < 0 && endComparison > 0;}function cloneSubtree(iterator){var partiallySelected;for(var node,frag=getRangeDocument(iterator.range).createDocumentFragment(),subIterator;node = iterator.next();) {partiallySelected = iterator.isPartiallySelectedSubtree();node = node.cloneNode(!partiallySelected);if(partiallySelected){subIterator = iterator.getSubtreeIterator();node.appendChild(cloneSubtree(subIterator));subIterator.detach();}if(node.nodeType == 10){ // DocumentType\nthrow new DOMException(\"HIERARCHY_REQUEST_ERR\");}frag.appendChild(node);}return frag;}function iterateSubtree(rangeIterator,func,iteratorState){var it,n;iteratorState = iteratorState || {stop:false};for(var node,subRangeIterator;node = rangeIterator.next();) {if(rangeIterator.isPartiallySelectedSubtree()){if(func(node) === false){iteratorState.stop = true;return;}else { // The node is partially selected by the Range, so we can use a new RangeIterator on the portion of\n// the node selected by the Range.\nsubRangeIterator = rangeIterator.getSubtreeIterator();iterateSubtree(subRangeIterator,func,iteratorState);subRangeIterator.detach();if(iteratorState.stop){return;}}}else { // The whole node is selected, so we can use efficient DOM iteration to iterate over the node and its\n// descendants\nit = dom.createIterator(node);while(n = it.next()) {if(func(n) === false){iteratorState.stop = true;return;}}}}}function deleteSubtree(iterator){var subIterator;while(iterator.next()) {if(iterator.isPartiallySelectedSubtree()){subIterator = iterator.getSubtreeIterator();deleteSubtree(subIterator);subIterator.detach();}else {iterator.remove();}}}function extractSubtree(iterator){for(var node,frag=getRangeDocument(iterator.range).createDocumentFragment(),subIterator;node = iterator.next();) {if(iterator.isPartiallySelectedSubtree()){node = node.cloneNode(false);subIterator = iterator.getSubtreeIterator();node.appendChild(extractSubtree(subIterator));subIterator.detach();}else {iterator.remove();}if(node.nodeType == 10){ // DocumentType\nthrow new DOMException(\"HIERARCHY_REQUEST_ERR\");}frag.appendChild(node);}return frag;}function getNodesInRange(range,nodeTypes,filter){var filterNodeTypes=!!(nodeTypes && nodeTypes.length),regex;var filterExists=!!filter;if(filterNodeTypes){regex = new RegExp(\"^(\" + nodeTypes.join(\"|\") + \")$\");}var nodes=[];iterateSubtree(new RangeIterator(range,false),function(node){if(filterNodeTypes && !regex.test(node.nodeType)){return;}if(filterExists && !filter(node)){return;} // Don't include a boundary container if it is a character data node and the range does not contain any\n// of its character data. See issue 190.\nvar sc=range.startContainer;if(node == sc && isCharacterDataNode(sc) && range.startOffset == sc.length){return;}var ec=range.endContainer;if(node == ec && isCharacterDataNode(ec) && range.endOffset == 0){return;}nodes.push(node);});return nodes;}function _inspect(range){var name=typeof range.getName == \"undefined\"?\"Range\":range.getName();return \"[\" + name + \"(\" + dom.inspectNode(range.startContainer) + \":\" + range.startOffset + \", \" + dom.inspectNode(range.endContainer) + \":\" + range.endOffset + \")]\";} /*----------------------------------------------------------------------------------------------------------------*/ // RangeIterator code partially borrows from IERange by Tim Ryan (http://github.com/timcameronryan/IERange)\nfunction RangeIterator(range,clonePartiallySelectedTextNodes){this.range = range;this.clonePartiallySelectedTextNodes = clonePartiallySelectedTextNodes;if(!range.collapsed){this.sc = range.startContainer;this.so = range.startOffset;this.ec = range.endContainer;this.eo = range.endOffset;var root=range.commonAncestorContainer;if(this.sc === this.ec && isCharacterDataNode(this.sc)){this.isSingleCharacterDataNode = true;this._first = this._last = this._next = this.sc;}else {this._first = this._next = this.sc === root && !isCharacterDataNode(this.sc)?this.sc.childNodes[this.so]:getClosestAncestorIn(this.sc,root,true);this._last = this.ec === root && !isCharacterDataNode(this.ec)?this.ec.childNodes[this.eo - 1]:getClosestAncestorIn(this.ec,root,true);}}}RangeIterator.prototype = {_current:null,_next:null,_first:null,_last:null,isSingleCharacterDataNode:false,reset:function reset(){this._current = null;this._next = this._first;},hasNext:function hasNext(){return !!this._next;},next:function next(){ // Move to next node\nvar current=this._current = this._next;if(current){this._next = current !== this._last?current.nextSibling:null; // Check for partially selected text nodes\nif(isCharacterDataNode(current) && this.clonePartiallySelectedTextNodes){if(current === this.ec){(current = current.cloneNode(true)).deleteData(this.eo,current.length - this.eo);}if(this._current === this.sc){(current = current.cloneNode(true)).deleteData(0,this.so);}}}return current;},remove:function remove(){var current=this._current,start,end;if(isCharacterDataNode(current) && (current === this.sc || current === this.ec)){start = current === this.sc?this.so:0;end = current === this.ec?this.eo:current.length;if(start != end){current.deleteData(start,end - start);}}else {if(current.parentNode){removeNode(current);}else {}}}, // Checks if the current node is partially selected\nisPartiallySelectedSubtree:function isPartiallySelectedSubtree(){var current=this._current;return isNonTextPartiallySelected(current,this.range);},getSubtreeIterator:function getSubtreeIterator(){var subRange;if(this.isSingleCharacterDataNode){subRange = this.range.cloneRange();subRange.collapse(false);}else {subRange = new Range(getRangeDocument(this.range));var current=this._current;var startContainer=current,startOffset=0,endContainer=current,endOffset=getNodeLength(current);if(isOrIsAncestorOf(current,this.sc)){startContainer = this.sc;startOffset = this.so;}if(isOrIsAncestorOf(current,this.ec)){endContainer = this.ec;endOffset = this.eo;}updateBoundaries(subRange,startContainer,startOffset,endContainer,endOffset);}return new RangeIterator(subRange,this.clonePartiallySelectedTextNodes);},detach:function detach(){this.range = this._current = this._next = this._first = this._last = this.sc = this.so = this.ec = this.eo = null;}}; /*----------------------------------------------------------------------------------------------------------------*/var beforeAfterNodeTypes=[1,3,4,5,7,8,10];var rootContainerNodeTypes=[2,9,11];var readonlyNodeTypes=[5,6,10,12];var insertableNodeTypes=[1,3,4,5,7,8,10,11];var surroundNodeTypes=[1,3,4,5,7,8];function createAncestorFinder(nodeTypes){return function(node,selfIsAncestor){var t,n=selfIsAncestor?node:node.parentNode;while(n) {t = n.nodeType;if(arrayContains(nodeTypes,t)){return n;}n = n.parentNode;}return null;};}var getDocumentOrFragmentContainer=createAncestorFinder([9,11]);var getReadonlyAncestor=createAncestorFinder(readonlyNodeTypes);var getDocTypeNotationEntityAncestor=createAncestorFinder([6,10,12]);function assertNoDocTypeNotationEntityAncestor(node,allowSelf){if(getDocTypeNotationEntityAncestor(node,allowSelf)){throw new DOMException(\"INVALID_NODE_TYPE_ERR\");}}function assertValidNodeType(node,invalidTypes){if(!arrayContains(invalidTypes,node.nodeType)){throw new DOMException(\"INVALID_NODE_TYPE_ERR\");}}function assertValidOffset(node,offset){if(offset < 0 || offset > (isCharacterDataNode(node)?node.length:node.childNodes.length)){throw new DOMException(\"INDEX_SIZE_ERR\");}}function assertSameDocumentOrFragment(node1,node2){if(getDocumentOrFragmentContainer(node1,true) !== getDocumentOrFragmentContainer(node2,true)){throw new DOMException(\"WRONG_DOCUMENT_ERR\");}}function assertNodeNotReadOnly(node){if(getReadonlyAncestor(node,true)){throw new DOMException(\"NO_MODIFICATION_ALLOWED_ERR\");}}function assertNode(node,codeName){if(!node){throw new DOMException(codeName);}}function isValidOffset(node,offset){return offset <= (isCharacterDataNode(node)?node.length:node.childNodes.length);}function isRangeValid(range){return !!range.startContainer && !!range.endContainer && !(crashyTextNodes && (dom.isBrokenNode(range.startContainer) || dom.isBrokenNode(range.endContainer))) && getRootContainer(range.startContainer) == getRootContainer(range.endContainer) && isValidOffset(range.startContainer,range.startOffset) && isValidOffset(range.endContainer,range.endOffset);}function assertRangeValid(range){if(!isRangeValid(range)){throw new Error(\"Range error: Range is not valid. This usually happens after DOM mutation. Range: (\" + range.inspect() + \")\");}} /*----------------------------------------------------------------------------------------------------------------*/ // Test the browser's innerHTML support to decide how to implement createContextualFragment\nvar styleEl=document.createElement(\"style\");var htmlParsingConforms=false;try{styleEl.innerHTML = \"<b>x</b>\";htmlParsingConforms = styleEl.firstChild.nodeType == 3; // Opera incorrectly creates an element node\n}catch(e) { // IE 6 and 7 throw\n}api.features.htmlParsingConforms = htmlParsingConforms;var createContextualFragment=htmlParsingConforms? // Implementation as per HTML parsing spec, trusting in the browser's implementation of innerHTML. See\n// discussion and base code for this implementation at issue 67.\n// Spec: http://html5.org/specs/dom-parsing.html#extensions-to-the-range-interface\nfunction(fragmentStr){ // \"Let node the context object's start's node.\"\nvar node=this.startContainer;var doc=getDocument(node); // \"If the context object's start's node is null, raise an INVALID_STATE_ERR\n// exception and abort these steps.\"\nif(!node){throw new DOMException(\"INVALID_STATE_ERR\");} // \"Let element be as follows, depending on node's interface:\"\n// Document, Document Fragment: null\nvar el=null; // \"Element: node\"\nif(node.nodeType == 1){el = node; // \"Text, Comment: node's parentElement\"\n}else if(isCharacterDataNode(node)){el = dom.parentElement(node);} // \"If either element is null or element's ownerDocument is an HTML document\n// and element's local name is \"html\" and element's namespace is the HTML\n// namespace\"\nif(el === null || el.nodeName == \"HTML\" && dom.isHtmlNamespace(getDocument(el).documentElement) && dom.isHtmlNamespace(el)){ // \"let element be a new Element with \"body\" as its local name and the HTML\n// namespace as its namespace.\"\"\nel = doc.createElement(\"body\");}else {el = el.cloneNode(false);} // \"If the node's document is an HTML document: Invoke the HTML fragment parsing algorithm.\"\n// \"If the node's document is an XML document: Invoke the XML fragment parsing algorithm.\"\n// \"In either case, the algorithm must be invoked with fragment as the input\n// and element as the context element.\"\nel.innerHTML = fragmentStr; // \"If this raises an exception, then abort these steps. Otherwise, let new\n// children be the nodes returned.\"\n// \"Let fragment be a new DocumentFragment.\"\n// \"Append all new children to fragment.\"\n// \"Return fragment.\"\nreturn dom.fragmentFromNodeChildren(el);}: // In this case, innerHTML cannot be trusted, so fall back to a simpler, non-conformant implementation that\nfunction(fragmentStr){var doc=getRangeDocument(this);var el=doc.createElement(\"body\");el.innerHTML = fragmentStr;return dom.fragmentFromNodeChildren(el);};function splitRangeBoundaries(range,positionsToPreserve){assertRangeValid(range);var sc=range.startContainer,so=range.startOffset,ec=range.endContainer,eo=range.endOffset;var startEndSame=sc === ec;if(isCharacterDataNode(ec) && eo > 0 && eo < ec.length){splitDataNode(ec,eo,positionsToPreserve);}if(isCharacterDataNode(sc) && so > 0 && so < sc.length){sc = splitDataNode(sc,so,positionsToPreserve);if(startEndSame){eo -= so;ec = sc;}else if(ec == sc.parentNode && eo >= getNodeIndex(sc)){eo++;}so = 0;}range.setStartAndEnd(sc,so,ec,eo);}function rangeToHtml(range){assertRangeValid(range);var container=range.commonAncestorContainer.parentNode.cloneNode(false);container.appendChild(range.cloneContents());return container.innerHTML;} /*----------------------------------------------------------------------------------------------------------------*/var rangeProperties=[\"startContainer\",\"startOffset\",\"endContainer\",\"endOffset\",\"collapsed\",\"commonAncestorContainer\"];var s2s=0,s2e=1,e2e=2,e2s=3;var n_b=0,n_a=1,n_b_a=2,n_i=3;util.extend(api.rangePrototype,{compareBoundaryPoints:function compareBoundaryPoints(how,range){assertRangeValid(this);assertSameDocumentOrFragment(this.startContainer,range.startContainer);var nodeA,offsetA,nodeB,offsetB;var prefixA=how == e2s || how == s2s?\"start\":\"end\";var prefixB=how == s2e || how == s2s?\"start\":\"end\";nodeA = this[prefixA + \"Container\"];offsetA = this[prefixA + \"Offset\"];nodeB = range[prefixB + \"Container\"];offsetB = range[prefixB + \"Offset\"];return comparePoints(nodeA,offsetA,nodeB,offsetB);},insertNode:function insertNode(node){assertRangeValid(this);assertValidNodeType(node,insertableNodeTypes);assertNodeNotReadOnly(this.startContainer);if(isOrIsAncestorOf(node,this.startContainer)){throw new DOMException(\"HIERARCHY_REQUEST_ERR\");} // No check for whether the container of the start of the Range is of a type that does not allow\n// children of the type of node: the browser's DOM implementation should do this for us when we attempt\n// to add the node\nvar firstNodeInserted=insertNodeAtPosition(node,this.startContainer,this.startOffset);this.setStartBefore(firstNodeInserted);},cloneContents:function cloneContents(){assertRangeValid(this);var clone,frag;if(this.collapsed){return getRangeDocument(this).createDocumentFragment();}else {if(this.startContainer === this.endContainer && isCharacterDataNode(this.startContainer)){clone = this.startContainer.cloneNode(true);clone.data = clone.data.slice(this.startOffset,this.endOffset);frag = getRangeDocument(this).createDocumentFragment();frag.appendChild(clone);return frag;}else {var iterator=new RangeIterator(this,true);clone = cloneSubtree(iterator);iterator.detach();}return clone;}},canSurroundContents:function canSurroundContents(){assertRangeValid(this);assertNodeNotReadOnly(this.startContainer);assertNodeNotReadOnly(this.endContainer); // Check if the contents can be surrounded. Specifically, this means whether the range partially selects\n// no non-text nodes.\nvar iterator=new RangeIterator(this,true);var boundariesInvalid=iterator._first && isNonTextPartiallySelected(iterator._first,this) || iterator._last && isNonTextPartiallySelected(iterator._last,this);iterator.detach();return !boundariesInvalid;},surroundContents:function surroundContents(node){assertValidNodeType(node,surroundNodeTypes);if(!this.canSurroundContents()){throw new DOMException(\"INVALID_STATE_ERR\");} // Extract the contents\nvar content=this.extractContents(); // Clear the children of the node\nif(node.hasChildNodes()){while(node.lastChild) {node.removeChild(node.lastChild);}} // Insert the new node and add the extracted contents\ninsertNodeAtPosition(node,this.startContainer,this.startOffset);node.appendChild(content);this.selectNode(node);},cloneRange:function cloneRange(){assertRangeValid(this);var range=new Range(getRangeDocument(this));var i=rangeProperties.length,prop;while(i--) {prop = rangeProperties[i];range[prop] = this[prop];}return range;},toString:function toString(){assertRangeValid(this);var sc=this.startContainer;if(sc === this.endContainer && isCharacterDataNode(sc)){return sc.nodeType == 3 || sc.nodeType == 4?sc.data.slice(this.startOffset,this.endOffset):\"\";}else {var textParts=[],iterator=new RangeIterator(this,true);iterateSubtree(iterator,function(node){ // Accept only text or CDATA nodes, not comments\nif(node.nodeType == 3 || node.nodeType == 4){textParts.push(node.data);}});iterator.detach();return textParts.join(\"\");}}, // The methods below are all non-standard. The following batch were introduced by Mozilla but have since\n// been removed from Mozilla.\ncompareNode:function compareNode(node){assertRangeValid(this);var parent=node.parentNode;var nodeIndex=getNodeIndex(node);if(!parent){throw new DOMException(\"NOT_FOUND_ERR\");}var startComparison=this.comparePoint(parent,nodeIndex),endComparison=this.comparePoint(parent,nodeIndex + 1);if(startComparison < 0){ // Node starts before\nreturn endComparison > 0?n_b_a:n_b;}else {return endComparison > 0?n_a:n_i;}},comparePoint:function comparePoint(node,offset){assertRangeValid(this);assertNode(node,\"HIERARCHY_REQUEST_ERR\");assertSameDocumentOrFragment(node,this.startContainer);if(comparePoints(node,offset,this.startContainer,this.startOffset) < 0){return -1;}else if(comparePoints(node,offset,this.endContainer,this.endOffset) > 0){return 1;}return 0;},createContextualFragment:createContextualFragment,toHtml:function toHtml(){return rangeToHtml(this);}, // touchingIsIntersecting determines whether this method considers a node that borders a range intersects\n// with it (as in WebKit) or not (as in Gecko pre-1.9, and the default)\nintersectsNode:function intersectsNode(node,touchingIsIntersecting){assertRangeValid(this);if(getRootContainer(node) != getRangeRoot(this)){return false;}var parent=node.parentNode,offset=getNodeIndex(node);if(!parent){return true;}var startComparison=comparePoints(parent,offset,this.endContainer,this.endOffset),endComparison=comparePoints(parent,offset + 1,this.startContainer,this.startOffset);return touchingIsIntersecting?startComparison <= 0 && endComparison >= 0:startComparison < 0 && endComparison > 0;},isPointInRange:function isPointInRange(node,offset){assertRangeValid(this);assertNode(node,\"HIERARCHY_REQUEST_ERR\");assertSameDocumentOrFragment(node,this.startContainer);return comparePoints(node,offset,this.startContainer,this.startOffset) >= 0 && comparePoints(node,offset,this.endContainer,this.endOffset) <= 0;}, // The methods below are non-standard and invented by me.\n// Sharing a boundary start-to-end or end-to-start does not count as intersection.\nintersectsRange:function intersectsRange(range){return rangesIntersect(this,range,false);}, // Sharing a boundary start-to-end or end-to-start does count as intersection.\nintersectsOrTouchesRange:function intersectsOrTouchesRange(range){return rangesIntersect(this,range,true);},intersection:function intersection(range){if(this.intersectsRange(range)){var startComparison=comparePoints(this.startContainer,this.startOffset,range.startContainer,range.startOffset),endComparison=comparePoints(this.endContainer,this.endOffset,range.endContainer,range.endOffset);var intersectionRange=this.cloneRange();if(startComparison == -1){intersectionRange.setStart(range.startContainer,range.startOffset);}if(endComparison == 1){intersectionRange.setEnd(range.endContainer,range.endOffset);}return intersectionRange;}return null;},union:function union(range){if(this.intersectsOrTouchesRange(range)){var unionRange=this.cloneRange();if(comparePoints(range.startContainer,range.startOffset,this.startContainer,this.startOffset) == -1){unionRange.setStart(range.startContainer,range.startOffset);}if(comparePoints(range.endContainer,range.endOffset,this.endContainer,this.endOffset) == 1){unionRange.setEnd(range.endContainer,range.endOffset);}return unionRange;}else {throw new DOMException(\"Ranges do not intersect\");}},containsNode:function containsNode(node,allowPartial){if(allowPartial){return this.intersectsNode(node,false);}else {return this.compareNode(node) == n_i;}},containsNodeContents:function containsNodeContents(node){return this.comparePoint(node,0) >= 0 && this.comparePoint(node,getNodeLength(node)) <= 0;},containsRange:function containsRange(range){var intersection=this.intersection(range);return intersection !== null && range.equals(intersection);},containsNodeText:function containsNodeText(node){var nodeRange=this.cloneRange();nodeRange.selectNode(node);var textNodes=nodeRange.getNodes([3]);if(textNodes.length > 0){nodeRange.setStart(textNodes[0],0);var lastTextNode=textNodes.pop();nodeRange.setEnd(lastTextNode,lastTextNode.length);return this.containsRange(nodeRange);}else {return this.containsNodeContents(node);}},getNodes:function getNodes(nodeTypes,filter){assertRangeValid(this);return getNodesInRange(this,nodeTypes,filter);},getDocument:function getDocument(){return getRangeDocument(this);},collapseBefore:function collapseBefore(node){this.setEndBefore(node);this.collapse(false);},collapseAfter:function collapseAfter(node){this.setStartAfter(node);this.collapse(true);},getBookmark:function getBookmark(containerNode){var doc=getRangeDocument(this);var preSelectionRange=api.createRange(doc);containerNode = containerNode || dom.getBody(doc);preSelectionRange.selectNodeContents(containerNode);var range=this.intersection(preSelectionRange);var start=0,end=0;if(range){preSelectionRange.setEnd(range.startContainer,range.startOffset);start = preSelectionRange.toString().length;end = start + range.toString().length;}return {start:start,end:end,containerNode:containerNode};},moveToBookmark:function moveToBookmark(bookmark){var containerNode=bookmark.containerNode;var charIndex=0;this.setStart(containerNode,0);this.collapse(true);var nodeStack=[containerNode],node,foundStart=false,stop=false;var nextCharIndex,i,childNodes;while(!stop && (node = nodeStack.pop())) {if(node.nodeType == 3){nextCharIndex = charIndex + node.length;if(!foundStart && bookmark.start >= charIndex && bookmark.start <= nextCharIndex){this.setStart(node,bookmark.start - charIndex);foundStart = true;}if(foundStart && bookmark.end >= charIndex && bookmark.end <= nextCharIndex){this.setEnd(node,bookmark.end - charIndex);stop = true;}charIndex = nextCharIndex;}else {childNodes = node.childNodes;i = childNodes.length;while(i--) {nodeStack.push(childNodes[i]);}}}},getName:function getName(){return \"DomRange\";},equals:function equals(range){return Range.rangesEqual(this,range);},isValid:function isValid(){return isRangeValid(this);},inspect:function inspect(){return _inspect(this);},detach:function detach(){ // In DOM4, detach() is now a no-op.\n}});function copyComparisonConstantsToObject(obj){obj.START_TO_START = s2s;obj.START_TO_END = s2e;obj.END_TO_END = e2e;obj.END_TO_START = e2s;obj.NODE_BEFORE = n_b;obj.NODE_AFTER = n_a;obj.NODE_BEFORE_AND_AFTER = n_b_a;obj.NODE_INSIDE = n_i;}function copyComparisonConstants(constructor){copyComparisonConstantsToObject(constructor);copyComparisonConstantsToObject(constructor.prototype);}function createRangeContentRemover(remover,boundaryUpdater){return function(){assertRangeValid(this);var sc=this.startContainer,so=this.startOffset,root=this.commonAncestorContainer;var iterator=new RangeIterator(this,true); // Work out where to position the range after content removal\nvar node,boundary;if(sc !== root){node = getClosestAncestorIn(sc,root,true);boundary = getBoundaryAfterNode(node);sc = boundary.node;so = boundary.offset;} // Check none of the range is read-only\niterateSubtree(iterator,assertNodeNotReadOnly);iterator.reset(); // Remove the content\nvar returnValue=remover(iterator);iterator.detach(); // Move to the new position\nboundaryUpdater(this,sc,so,sc,so);return returnValue;};}function createPrototypeRange(constructor,boundaryUpdater){function createBeforeAfterNodeSetter(isBefore,isStart){return function(node){assertValidNodeType(node,beforeAfterNodeTypes);assertValidNodeType(getRootContainer(node),rootContainerNodeTypes);var boundary=(isBefore?getBoundaryBeforeNode:getBoundaryAfterNode)(node);(isStart?setRangeStart:setRangeEnd)(this,boundary.node,boundary.offset);};}function setRangeStart(range,node,offset){var ec=range.endContainer,eo=range.endOffset;if(node !== range.startContainer || offset !== range.startOffset){ // Check the root containers of the range and the new boundary, and also check whether the new boundary\n// is after the current end. In either case, collapse the range to the new position\nif(getRootContainer(node) != getRootContainer(ec) || comparePoints(node,offset,ec,eo) == 1){ec = node;eo = offset;}boundaryUpdater(range,node,offset,ec,eo);}}function setRangeEnd(range,node,offset){var sc=range.startContainer,so=range.startOffset;if(node !== range.endContainer || offset !== range.endOffset){ // Check the root containers of the range and the new boundary, and also check whether the new boundary\n// is after the current end. In either case, collapse the range to the new position\nif(getRootContainer(node) != getRootContainer(sc) || comparePoints(node,offset,sc,so) == -1){sc = node;so = offset;}boundaryUpdater(range,sc,so,node,offset);}} // Set up inheritance\nvar F=function F(){};F.prototype = api.rangePrototype;constructor.prototype = new F();util.extend(constructor.prototype,{setStart:function setStart(node,offset){assertNoDocTypeNotationEntityAncestor(node,true);assertValidOffset(node,offset);setRangeStart(this,node,offset);},setEnd:function setEnd(node,offset){assertNoDocTypeNotationEntityAncestor(node,true);assertValidOffset(node,offset);setRangeEnd(this,node,offset);}, /**\n                 * Convenience method to set a range's start and end boundaries. Overloaded as follows:\n                 * - Two parameters (node, offset) creates a collapsed range at that position\n                 * - Three parameters (node, startOffset, endOffset) creates a range contained with node starting at\n                 *   startOffset and ending at endOffset\n                 * - Four parameters (startNode, startOffset, endNode, endOffset) creates a range starting at startOffset in\n                 *   startNode and ending at endOffset in endNode\n                 */setStartAndEnd:function setStartAndEnd(){var args=arguments;var sc=args[0],so=args[1],ec=sc,eo=so;switch(args.length){case 3:eo = args[2];break;case 4:ec = args[2];eo = args[3];break;}boundaryUpdater(this,sc,so,ec,eo);},setBoundary:function setBoundary(node,offset,isStart){this[\"set\" + (isStart?\"Start\":\"End\")](node,offset);},setStartBefore:createBeforeAfterNodeSetter(true,true),setStartAfter:createBeforeAfterNodeSetter(false,true),setEndBefore:createBeforeAfterNodeSetter(true,false),setEndAfter:createBeforeAfterNodeSetter(false,false),collapse:function collapse(isStart){assertRangeValid(this);if(isStart){boundaryUpdater(this,this.startContainer,this.startOffset,this.startContainer,this.startOffset);}else {boundaryUpdater(this,this.endContainer,this.endOffset,this.endContainer,this.endOffset);}},selectNodeContents:function selectNodeContents(node){assertNoDocTypeNotationEntityAncestor(node,true);boundaryUpdater(this,node,0,node,getNodeLength(node));},selectNode:function selectNode(node){assertNoDocTypeNotationEntityAncestor(node,false);assertValidNodeType(node,beforeAfterNodeTypes);var start=getBoundaryBeforeNode(node),end=getBoundaryAfterNode(node);boundaryUpdater(this,start.node,start.offset,end.node,end.offset);},extractContents:createRangeContentRemover(extractSubtree,boundaryUpdater),deleteContents:createRangeContentRemover(deleteSubtree,boundaryUpdater),canSurroundContents:function canSurroundContents(){assertRangeValid(this);assertNodeNotReadOnly(this.startContainer);assertNodeNotReadOnly(this.endContainer); // Check if the contents can be surrounded. Specifically, this means whether the range partially selects\n// no non-text nodes.\nvar iterator=new RangeIterator(this,true);var boundariesInvalid=iterator._first && isNonTextPartiallySelected(iterator._first,this) || iterator._last && isNonTextPartiallySelected(iterator._last,this);iterator.detach();return !boundariesInvalid;},splitBoundaries:function splitBoundaries(){splitRangeBoundaries(this);},splitBoundariesPreservingPositions:function splitBoundariesPreservingPositions(positionsToPreserve){splitRangeBoundaries(this,positionsToPreserve);},normalizeBoundaries:function normalizeBoundaries(){assertRangeValid(this);var sc=this.startContainer,so=this.startOffset,ec=this.endContainer,eo=this.endOffset;var mergeForward=function mergeForward(node){var sibling=node.nextSibling;if(sibling && sibling.nodeType == node.nodeType){ec = node;eo = node.length;node.appendData(sibling.data);removeNode(sibling);}};var mergeBackward=function mergeBackward(node){var sibling=node.previousSibling;if(sibling && sibling.nodeType == node.nodeType){sc = node;var nodeLength=node.length;so = sibling.length;node.insertData(0,sibling.data);removeNode(sibling);if(sc == ec){eo += so;ec = sc;}else if(ec == node.parentNode){var nodeIndex=getNodeIndex(node);if(eo == nodeIndex){ec = node;eo = nodeLength;}else if(eo > nodeIndex){eo--;}}}};var normalizeStart=true;var sibling;if(isCharacterDataNode(ec)){if(eo == ec.length){mergeForward(ec);}else if(eo == 0){sibling = ec.previousSibling;if(sibling && sibling.nodeType == ec.nodeType){eo = sibling.length;if(sc == ec){normalizeStart = false;}sibling.appendData(ec.data);removeNode(ec);ec = sibling;}}}else {if(eo > 0){var endNode=ec.childNodes[eo - 1];if(endNode && isCharacterDataNode(endNode)){mergeForward(endNode);}}normalizeStart = !this.collapsed;}if(normalizeStart){if(isCharacterDataNode(sc)){if(so == 0){mergeBackward(sc);}else if(so == sc.length){sibling = sc.nextSibling;if(sibling && sibling.nodeType == sc.nodeType){if(ec == sibling){ec = sc;eo += sc.length;}sc.appendData(sibling.data);removeNode(sibling);}}}else {if(so < sc.childNodes.length){var startNode=sc.childNodes[so];if(startNode && isCharacterDataNode(startNode)){mergeBackward(startNode);}}}}else {sc = ec;so = eo;}boundaryUpdater(this,sc,so,ec,eo);},collapseToPoint:function collapseToPoint(node,offset){assertNoDocTypeNotationEntityAncestor(node,true);assertValidOffset(node,offset);this.setStartAndEnd(node,offset);}});copyComparisonConstants(constructor);} /*----------------------------------------------------------------------------------------------------------------*/ // Updates commonAncestorContainer and collapsed after boundary change\nfunction updateCollapsedAndCommonAncestor(range){range.collapsed = range.startContainer === range.endContainer && range.startOffset === range.endOffset;range.commonAncestorContainer = range.collapsed?range.startContainer:dom.getCommonAncestor(range.startContainer,range.endContainer);}function updateBoundaries(range,startContainer,startOffset,endContainer,endOffset){range.startContainer = startContainer;range.startOffset = startOffset;range.endContainer = endContainer;range.endOffset = endOffset;range.document = dom.getDocument(startContainer);updateCollapsedAndCommonAncestor(range);}function Range(doc){this.startContainer = doc;this.startOffset = 0;this.endContainer = doc;this.endOffset = 0;this.document = doc;updateCollapsedAndCommonAncestor(this);}createPrototypeRange(Range,updateBoundaries);util.extend(Range,{rangeProperties:rangeProperties,RangeIterator:RangeIterator,copyComparisonConstants:copyComparisonConstants,createPrototypeRange:createPrototypeRange,inspect:_inspect,toHtml:rangeToHtml,getRangeDocument:getRangeDocument,rangesEqual:function rangesEqual(r1,r2){return r1.startContainer === r2.startContainer && r1.startOffset === r2.startOffset && r1.endContainer === r2.endContainer && r1.endOffset === r2.endOffset;}});api.DomRange = Range;}); /*----------------------------------------------------------------------------------------------------------------*/ // Wrappers for the browser's native DOM Range and/or TextRange implementation\napi.createCoreModule(\"WrappedRange\",[\"DomRange\"],function(api,module){var WrappedRange,WrappedTextRange;var dom=api.dom;var util=api.util;var DomPosition=dom.DomPosition;var DomRange=api.DomRange;var getBody=dom.getBody;var getContentDocument=dom.getContentDocument;var isCharacterDataNode=dom.isCharacterDataNode; /*----------------------------------------------------------------------------------------------------------------*/if(api.features.implementsDomRange){ // This is a wrapper around the browser's native DOM Range. It has two aims:\n// - Provide workarounds for specific browser bugs\n// - provide convenient extensions, which are inherited from Rangy's DomRange\n(function(){var rangeProto;var rangeProperties=DomRange.rangeProperties;function updateRangeProperties(range){var i=rangeProperties.length,prop;while(i--) {prop = rangeProperties[i];range[prop] = range.nativeRange[prop];} // Fix for broken collapsed property in IE 9.\nrange.collapsed = range.startContainer === range.endContainer && range.startOffset === range.endOffset;}function updateNativeRange(range,startContainer,startOffset,endContainer,endOffset){var startMoved=range.startContainer !== startContainer || range.startOffset != startOffset;var endMoved=range.endContainer !== endContainer || range.endOffset != endOffset;var nativeRangeDifferent=!range.equals(range.nativeRange); // Always set both boundaries for the benefit of IE9 (see issue 35)\nif(startMoved || endMoved || nativeRangeDifferent){range.setEnd(endContainer,endOffset);range.setStart(startContainer,startOffset);}}var createBeforeAfterNodeSetter;WrappedRange = function(range){if(!range){throw module.createError(\"WrappedRange: Range must be specified\");}this.nativeRange = range;updateRangeProperties(this);};DomRange.createPrototypeRange(WrappedRange,updateNativeRange);rangeProto = WrappedRange.prototype;rangeProto.selectNode = function(node){this.nativeRange.selectNode(node);updateRangeProperties(this);};rangeProto.cloneContents = function(){return this.nativeRange.cloneContents();}; // Due to a long-standing Firefox bug that I have not been able to find a reliable way to detect,\n// insertNode() is never delegated to the native range.\nrangeProto.surroundContents = function(node){this.nativeRange.surroundContents(node);updateRangeProperties(this);};rangeProto.collapse = function(isStart){this.nativeRange.collapse(isStart);updateRangeProperties(this);};rangeProto.cloneRange = function(){return new WrappedRange(this.nativeRange.cloneRange());};rangeProto.refresh = function(){updateRangeProperties(this);};rangeProto.toString = function(){return this.nativeRange.toString();}; // Create test range and node for feature detection\nvar testTextNode=document.createTextNode(\"test\");getBody(document).appendChild(testTextNode);var range=document.createRange(); /*--------------------------------------------------------------------------------------------------------*/ // Test for Firefox 2 bug that prevents moving the start of a Range to a point after its current end and\n// correct for it\nrange.setStart(testTextNode,0);range.setEnd(testTextNode,0);try{range.setStart(testTextNode,1);rangeProto.setStart = function(node,offset){this.nativeRange.setStart(node,offset);updateRangeProperties(this);};rangeProto.setEnd = function(node,offset){this.nativeRange.setEnd(node,offset);updateRangeProperties(this);};createBeforeAfterNodeSetter = function(name){return function(node){this.nativeRange[name](node);updateRangeProperties(this);};};}catch(ex) {rangeProto.setStart = function(node,offset){try{this.nativeRange.setStart(node,offset);}catch(ex) {this.nativeRange.setEnd(node,offset);this.nativeRange.setStart(node,offset);}updateRangeProperties(this);};rangeProto.setEnd = function(node,offset){try{this.nativeRange.setEnd(node,offset);}catch(ex) {this.nativeRange.setStart(node,offset);this.nativeRange.setEnd(node,offset);}updateRangeProperties(this);};createBeforeAfterNodeSetter = function(name,oppositeName){return function(node){try{this.nativeRange[name](node);}catch(ex) {this.nativeRange[oppositeName](node);this.nativeRange[name](node);}updateRangeProperties(this);};};}rangeProto.setStartBefore = createBeforeAfterNodeSetter(\"setStartBefore\",\"setEndBefore\");rangeProto.setStartAfter = createBeforeAfterNodeSetter(\"setStartAfter\",\"setEndAfter\");rangeProto.setEndBefore = createBeforeAfterNodeSetter(\"setEndBefore\",\"setStartBefore\");rangeProto.setEndAfter = createBeforeAfterNodeSetter(\"setEndAfter\",\"setStartAfter\"); /*--------------------------------------------------------------------------------------------------------*/ // Always use DOM4-compliant selectNodeContents implementation: it's simpler and less code than testing\n// whether the native implementation can be trusted\nrangeProto.selectNodeContents = function(node){this.setStartAndEnd(node,0,dom.getNodeLength(node));}; /*--------------------------------------------------------------------------------------------------------*/ // Test for and correct WebKit bug that has the behaviour of compareBoundaryPoints round the wrong way for\n// constants START_TO_END and END_TO_START: https://bugs.webkit.org/show_bug.cgi?id=20738\nrange.selectNodeContents(testTextNode);range.setEnd(testTextNode,3);var range2=document.createRange();range2.selectNodeContents(testTextNode);range2.setEnd(testTextNode,4);range2.setStart(testTextNode,2);if(range.compareBoundaryPoints(range.START_TO_END,range2) == -1 && range.compareBoundaryPoints(range.END_TO_START,range2) == 1){ // This is the wrong way round, so correct for it\nrangeProto.compareBoundaryPoints = function(type,range){range = range.nativeRange || range;if(type == range.START_TO_END){type = range.END_TO_START;}else if(type == range.END_TO_START){type = range.START_TO_END;}return this.nativeRange.compareBoundaryPoints(type,range);};}else {rangeProto.compareBoundaryPoints = function(type,range){return this.nativeRange.compareBoundaryPoints(type,range.nativeRange || range);};} /*--------------------------------------------------------------------------------------------------------*/ // Test for IE deleteContents() and extractContents() bug and correct it. See issue 107.\nvar el=document.createElement(\"div\");el.innerHTML = \"123\";var textNode=el.firstChild;var body=getBody(document);body.appendChild(el);range.setStart(textNode,1);range.setEnd(textNode,2);range.deleteContents();if(textNode.data == \"13\"){ // Behaviour is correct per DOM4 Range so wrap the browser's implementation of deleteContents() and\n// extractContents()\nrangeProto.deleteContents = function(){this.nativeRange.deleteContents();updateRangeProperties(this);};rangeProto.extractContents = function(){var frag=this.nativeRange.extractContents();updateRangeProperties(this);return frag;};}else {}body.removeChild(el);body = null; /*--------------------------------------------------------------------------------------------------------*/ // Test for existence of createContextualFragment and delegate to it if it exists\nif(util.isHostMethod(range,\"createContextualFragment\")){rangeProto.createContextualFragment = function(fragmentStr){return this.nativeRange.createContextualFragment(fragmentStr);};} /*--------------------------------------------------------------------------------------------------------*/ // Clean up\ngetBody(document).removeChild(testTextNode);rangeProto.getName = function(){return \"WrappedRange\";};api.WrappedRange = WrappedRange;api.createNativeRange = function(doc){doc = getContentDocument(doc,module,\"createNativeRange\");return doc.createRange();};})();}if(api.features.implementsTextRange){ /*\n            This is a workaround for a bug where IE returns the wrong container element from the TextRange's parentElement()\n            method. For example, in the following (where pipes denote the selection boundaries):\n\n            <ul id=\"ul\"><li id=\"a\">| a </li><li id=\"b\"> b |</li></ul>\n\n            var range = document.selection.createRange();\n            alert(range.parentElement().id); // Should alert \"ul\" but alerts \"b\"\n\n            This method returns the common ancestor node of the following:\n            - the parentElement() of the textRange\n            - the parentElement() of the textRange after calling collapse(true)\n            - the parentElement() of the textRange after calling collapse(false)\n            */var getTextRangeContainerElement=function getTextRangeContainerElement(textRange){var parentEl=textRange.parentElement();var range=textRange.duplicate();range.collapse(true);var startEl=range.parentElement();range = textRange.duplicate();range.collapse(false);var endEl=range.parentElement();var startEndContainer=startEl == endEl?startEl:dom.getCommonAncestor(startEl,endEl);return startEndContainer == parentEl?startEndContainer:dom.getCommonAncestor(parentEl,startEndContainer);};var textRangeIsCollapsed=function textRangeIsCollapsed(textRange){return textRange.compareEndPoints(\"StartToEnd\",textRange) == 0;}; // Gets the boundary of a TextRange expressed as a node and an offset within that node. This function started\n// out as an improved version of code found in Tim Cameron Ryan's IERange (http://code.google.com/p/ierange/)\n// but has grown, fixing problems with line breaks in preformatted text, adding workaround for IE TextRange\n// bugs, handling for inputs and images, plus optimizations.\nvar getTextRangeBoundaryPosition=function getTextRangeBoundaryPosition(textRange,wholeRangeContainerElement,isStart,isCollapsed,startInfo){var workingRange=textRange.duplicate();workingRange.collapse(isStart);var containerElement=workingRange.parentElement(); // Sometimes collapsing a TextRange that's at the start of a text node can move it into the previous node, so\n// check for that\nif(!dom.isOrIsAncestorOf(wholeRangeContainerElement,containerElement)){containerElement = wholeRangeContainerElement;} // Deal with nodes that cannot \"contain rich HTML markup\". In practice, this means form inputs, images and\n// similar. See http://msdn.microsoft.com/en-us/library/aa703950%28VS.85%29.aspx\nif(!containerElement.canHaveHTML){var pos=new DomPosition(containerElement.parentNode,dom.getNodeIndex(containerElement));return {boundaryPosition:pos,nodeInfo:{nodeIndex:pos.offset,containerElement:pos.node}};}var workingNode=dom.getDocument(containerElement).createElement(\"span\"); // Workaround for HTML5 Shiv's insane violation of document.createElement(). See Rangy issue 104 and HTML5\n// Shiv issue 64: https://github.com/aFarkas/html5shiv/issues/64\nif(workingNode.parentNode){dom.removeNode(workingNode);}var comparison,workingComparisonType=isStart?\"StartToStart\":\"StartToEnd\";var previousNode,nextNode,boundaryPosition,boundaryNode;var start=startInfo && startInfo.containerElement == containerElement?startInfo.nodeIndex:0;var childNodeCount=containerElement.childNodes.length;var end=childNodeCount; // Check end first. Code within the loop assumes that the endth child node of the container is definitely\n// after the range boundary.\nvar nodeIndex=end;while(true) {if(nodeIndex == childNodeCount){containerElement.appendChild(workingNode);}else {containerElement.insertBefore(workingNode,containerElement.childNodes[nodeIndex]);}workingRange.moveToElementText(workingNode);comparison = workingRange.compareEndPoints(workingComparisonType,textRange);if(comparison == 0 || start == end){break;}else if(comparison == -1){if(end == start + 1){ // We know the endth child node is after the range boundary, so we must be done.\nbreak;}else {start = nodeIndex;}}else {end = end == start + 1?start:nodeIndex;}nodeIndex = Math.floor((start + end) / 2);containerElement.removeChild(workingNode);} // We've now reached or gone past the boundary of the text range we're interested in\n// so have identified the node we want\nboundaryNode = workingNode.nextSibling;if(comparison == -1 && boundaryNode && isCharacterDataNode(boundaryNode)){ // This is a character data node (text, comment, cdata). The working range is collapsed at the start of\n// the node containing the text range's boundary, so we move the end of the working range to the\n// boundary point and measure the length of its text to get the boundary's offset within the node.\nworkingRange.setEndPoint(isStart?\"EndToStart\":\"EndToEnd\",textRange);var offset;if(/[\\r\\n]/.test(boundaryNode.data)){ /*\n                        For the particular case of a boundary within a text node containing rendered line breaks (within a\n                        <pre> element, for example), we need a slightly complicated approach to get the boundary's offset in\n                        IE. The facts:\n\n                        - Each line break is represented as \\r in the text node's data/nodeValue properties\n                        - Each line break is represented as \\r\\n in the TextRange's 'text' property\n                        - The 'text' property of the TextRange does not contain trailing line breaks\n\n                        To get round the problem presented by the final fact above, we can use the fact that TextRange's\n                        moveStart() and moveEnd() methods return the actual number of characters moved, which is not\n                        necessarily the same as the number of characters it was instructed to move. The simplest approach is\n                        to use this to store the characters moved when moving both the start and end of the range to the\n                        start of the document body and subtracting the start offset from the end offset (the\n                        \"move-negative-gazillion\" method). However, this is extremely slow when the document is large and\n                        the range is near the end of it. Clearly doing the mirror image (i.e. moving the range boundaries to\n                        the end of the document) has the same problem.\n\n                        Another approach that works is to use moveStart() to move the start boundary of the range up to the\n                        end boundary one character at a time and incrementing a counter with the value returned by the\n                        moveStart() call. However, the check for whether the start boundary has reached the end boundary is\n                        expensive, so this method is slow (although unlike \"move-negative-gazillion\" is largely unaffected\n                        by the location of the range within the document).\n\n                        The approach used below is a hybrid of the two methods above. It uses the fact that a string\n                        containing the TextRange's 'text' property with each \\r\\n converted to a single \\r character cannot\n                        be longer than the text of the TextRange, so the start of the range is moved that length initially\n                        and then a character at a time to make up for any trailing line breaks not contained in the 'text'\n                        property. This has good performance in most situations compared to the previous two methods.\n                        */var tempRange=workingRange.duplicate();var rangeLength=tempRange.text.replace(/\\r\\n/g,\"\\r\").length;offset = tempRange.moveStart(\"character\",rangeLength);while((comparison = tempRange.compareEndPoints(\"StartToEnd\",tempRange)) == -1) {offset++;tempRange.moveStart(\"character\",1);}}else {offset = workingRange.text.length;}boundaryPosition = new DomPosition(boundaryNode,offset);}else { // If the boundary immediately follows a character data node and this is the end boundary, we should favour\n// a position within that, and likewise for a start boundary preceding a character data node\npreviousNode = (isCollapsed || !isStart) && workingNode.previousSibling;nextNode = (isCollapsed || isStart) && workingNode.nextSibling;if(nextNode && isCharacterDataNode(nextNode)){boundaryPosition = new DomPosition(nextNode,0);}else if(previousNode && isCharacterDataNode(previousNode)){boundaryPosition = new DomPosition(previousNode,previousNode.data.length);}else {boundaryPosition = new DomPosition(containerElement,dom.getNodeIndex(workingNode));}} // Clean up\ndom.removeNode(workingNode);return {boundaryPosition:boundaryPosition,nodeInfo:{nodeIndex:nodeIndex,containerElement:containerElement}};}; // Returns a TextRange representing the boundary of a TextRange expressed as a node and an offset within that\n// node. This function started out as an optimized version of code found in Tim Cameron Ryan's IERange\n// (http://code.google.com/p/ierange/)\nvar createBoundaryTextRange=function createBoundaryTextRange(boundaryPosition,isStart){var boundaryNode,boundaryParent,boundaryOffset=boundaryPosition.offset;var doc=dom.getDocument(boundaryPosition.node);var workingNode,childNodes,workingRange=getBody(doc).createTextRange();var nodeIsDataNode=isCharacterDataNode(boundaryPosition.node);if(nodeIsDataNode){boundaryNode = boundaryPosition.node;boundaryParent = boundaryNode.parentNode;}else {childNodes = boundaryPosition.node.childNodes;boundaryNode = boundaryOffset < childNodes.length?childNodes[boundaryOffset]:null;boundaryParent = boundaryPosition.node;} // Position the range immediately before the node containing the boundary\nworkingNode = doc.createElement(\"span\"); // Making the working element non-empty element persuades IE to consider the TextRange boundary to be within\n// the element rather than immediately before or after it\nworkingNode.innerHTML = \"&#feff;\"; // insertBefore is supposed to work like appendChild if the second parameter is null. However, a bug report\n// for IERange suggests that it can crash the browser: http://code.google.com/p/ierange/issues/detail?id=12\nif(boundaryNode){boundaryParent.insertBefore(workingNode,boundaryNode);}else {boundaryParent.appendChild(workingNode);}workingRange.moveToElementText(workingNode);workingRange.collapse(!isStart); // Clean up\nboundaryParent.removeChild(workingNode); // Move the working range to the text offset, if required\nif(nodeIsDataNode){workingRange[isStart?\"moveStart\":\"moveEnd\"](\"character\",boundaryOffset);}return workingRange;}; /*------------------------------------------------------------------------------------------------------------*/ // This is a wrapper around a TextRange, providing full DOM Range functionality using rangy's DomRange as a\n// prototype\nWrappedTextRange = function(textRange){this.textRange = textRange;this.refresh();};WrappedTextRange.prototype = new DomRange(document);WrappedTextRange.prototype.refresh = function(){var start,end,startBoundary; // TextRange's parentElement() method cannot be trusted. getTextRangeContainerElement() works around that.\nvar rangeContainerElement=getTextRangeContainerElement(this.textRange);if(textRangeIsCollapsed(this.textRange)){end = start = getTextRangeBoundaryPosition(this.textRange,rangeContainerElement,true,true).boundaryPosition;}else {startBoundary = getTextRangeBoundaryPosition(this.textRange,rangeContainerElement,true,false);start = startBoundary.boundaryPosition; // An optimization used here is that if the start and end boundaries have the same parent element, the\n// search scope for the end boundary can be limited to exclude the portion of the element that precedes\n// the start boundary\nend = getTextRangeBoundaryPosition(this.textRange,rangeContainerElement,false,false,startBoundary.nodeInfo).boundaryPosition;}this.setStart(start.node,start.offset);this.setEnd(end.node,end.offset);};WrappedTextRange.prototype.getName = function(){return \"WrappedTextRange\";};DomRange.copyComparisonConstants(WrappedTextRange);var rangeToTextRange=function rangeToTextRange(range){if(range.collapsed){return createBoundaryTextRange(new DomPosition(range.startContainer,range.startOffset),true);}else {var startRange=createBoundaryTextRange(new DomPosition(range.startContainer,range.startOffset),true);var endRange=createBoundaryTextRange(new DomPosition(range.endContainer,range.endOffset),false);var textRange=getBody(DomRange.getRangeDocument(range)).createTextRange();textRange.setEndPoint(\"StartToStart\",startRange);textRange.setEndPoint(\"EndToEnd\",endRange);return textRange;}};WrappedTextRange.rangeToTextRange = rangeToTextRange;WrappedTextRange.prototype.toTextRange = function(){return rangeToTextRange(this);};api.WrappedTextRange = WrappedTextRange; // IE 9 and above have both implementations and Rangy makes both available. The next few lines sets which\n// implementation to use by default.\nif(!api.features.implementsDomRange || api.config.preferTextRange){ // Add WrappedTextRange as the Range property of the global object to allow expression like Range.END_TO_END to work\nvar globalObj=(function(f){return f(\"return this;\")();})(Function);if(typeof globalObj.Range == \"undefined\"){globalObj.Range = WrappedTextRange;}api.createNativeRange = function(doc){doc = getContentDocument(doc,module,\"createNativeRange\");return getBody(doc).createTextRange();};api.WrappedRange = WrappedTextRange;}}api.createRange = function(doc){doc = getContentDocument(doc,module,\"createRange\");return new api.WrappedRange(api.createNativeRange(doc));};api.createRangyRange = function(doc){doc = getContentDocument(doc,module,\"createRangyRange\");return new DomRange(doc);};util.createAliasForDeprecatedMethod(api,\"createIframeRange\",\"createRange\");util.createAliasForDeprecatedMethod(api,\"createIframeRangyRange\",\"createRangyRange\");api.addShimListener(function(win){var doc=win.document;if(typeof doc.createRange == \"undefined\"){doc.createRange = function(){return api.createRange(doc);};}doc = win = null;});}); /*----------------------------------------------------------------------------------------------------------------*/ // This module creates a selection object wrapper that conforms as closely as possible to the Selection specification\n// in the HTML Editing spec (http://dvcs.w3.org/hg/editing/raw-file/tip/editing.html#selections)\napi.createCoreModule(\"WrappedSelection\",[\"DomRange\",\"WrappedRange\"],function(api,module){api.config.checkSelectionRanges = true;var BOOLEAN=\"boolean\";var NUMBER=\"number\";var dom=api.dom;var util=api.util;var isHostMethod=util.isHostMethod;var DomRange=api.DomRange;var WrappedRange=api.WrappedRange;var DOMException=api.DOMException;var DomPosition=dom.DomPosition;var getNativeSelection;var selectionIsCollapsed;var features=api.features;var CONTROL=\"Control\";var getDocument=dom.getDocument;var getBody=dom.getBody;var rangesEqual=DomRange.rangesEqual; // Utility function to support direction parameters in the API that may be a string (\"backward\", \"backwards\",\n// \"forward\" or \"forwards\") or a Boolean (true for backwards).\nfunction isDirectionBackward(dir){return typeof dir == \"string\"?/^backward(s)?$/i.test(dir):!!dir;}function getWindow(win,methodName){if(!win){return window;}else if(dom.isWindow(win)){return win;}else if(win instanceof WrappedSelection){return win.win;}else {var doc=dom.getContentDocument(win,module,methodName);return dom.getWindow(doc);}}function getWinSelection(winParam){return getWindow(winParam,\"getWinSelection\").getSelection();}function getDocSelection(winParam){return getWindow(winParam,\"getDocSelection\").document.selection;}function winSelectionIsBackward(sel){var backward=false;if(sel.anchorNode){backward = dom.comparePoints(sel.anchorNode,sel.anchorOffset,sel.focusNode,sel.focusOffset) == 1;}return backward;} // Test for the Range/TextRange and Selection features required\n// Test for ability to retrieve selection\nvar implementsWinGetSelection=isHostMethod(window,\"getSelection\"),implementsDocSelection=util.isHostObject(document,\"selection\");features.implementsWinGetSelection = implementsWinGetSelection;features.implementsDocSelection = implementsDocSelection;var useDocumentSelection=implementsDocSelection && (!implementsWinGetSelection || api.config.preferTextRange);if(useDocumentSelection){getNativeSelection = getDocSelection;api.isSelectionValid = function(winParam){var doc=getWindow(winParam,\"isSelectionValid\").document,nativeSel=doc.selection; // Check whether the selection TextRange is actually contained within the correct document\nreturn nativeSel.type != \"None\" || getDocument(nativeSel.createRange().parentElement()) == doc;};}else if(implementsWinGetSelection){getNativeSelection = getWinSelection;api.isSelectionValid = function(){return true;};}else {module.fail(\"Neither document.selection or window.getSelection() detected.\");return false;}api.getNativeSelection = getNativeSelection;var testSelection=getNativeSelection(); // In Firefox, the selection is null in an iframe with display: none. See issue #138.\nif(!testSelection){module.fail(\"Native selection was null (possibly issue 138?)\");return false;}var testRange=api.createNativeRange(document);var body=getBody(document); // Obtaining a range from a selection\nvar selectionHasAnchorAndFocus=util.areHostProperties(testSelection,[\"anchorNode\",\"focusNode\",\"anchorOffset\",\"focusOffset\"]);features.selectionHasAnchorAndFocus = selectionHasAnchorAndFocus; // Test for existence of native selection extend() method\nvar selectionHasExtend=isHostMethod(testSelection,\"extend\");features.selectionHasExtend = selectionHasExtend; // Test if rangeCount exists\nvar selectionHasRangeCount=typeof testSelection.rangeCount == NUMBER;features.selectionHasRangeCount = selectionHasRangeCount;var selectionSupportsMultipleRanges=false;var collapsedNonEditableSelectionsSupported=true;var addRangeBackwardToNative=selectionHasExtend?function(nativeSelection,range){var doc=DomRange.getRangeDocument(range);var endRange=api.createRange(doc);endRange.collapseToPoint(range.endContainer,range.endOffset);nativeSelection.addRange(getNativeRange(endRange));nativeSelection.extend(range.startContainer,range.startOffset);}:null;if(util.areHostMethods(testSelection,[\"addRange\",\"getRangeAt\",\"removeAllRanges\"]) && typeof testSelection.rangeCount == NUMBER && features.implementsDomRange){(function(){ // Previously an iframe was used but this caused problems in some circumstances in IE, so tests are\n// performed on the current document's selection. See issue 109.\n// Note also that if a selection previously existed, it is wiped and later restored by these tests. This\n// will result in the selection direction begin reversed if the original selection was backwards and the\n// browser does not support setting backwards selections (Internet Explorer, I'm looking at you).\nvar sel=window.getSelection();if(sel){ // Store the current selection\nvar originalSelectionRangeCount=sel.rangeCount;var selectionHasMultipleRanges=originalSelectionRangeCount > 1;var originalSelectionRanges=[];var originalSelectionBackward=winSelectionIsBackward(sel);for(var i=0;i < originalSelectionRangeCount;++i) {originalSelectionRanges[i] = sel.getRangeAt(i);} // Create some test elements\nvar testEl=dom.createTestElement(document,\"\",false);var textNode=testEl.appendChild(document.createTextNode(\"   \")); // Test whether the native selection will allow a collapsed selection within a non-editable element\nvar r1=document.createRange();r1.setStart(textNode,1);r1.collapse(true);sel.removeAllRanges();sel.addRange(r1);collapsedNonEditableSelectionsSupported = sel.rangeCount == 1;sel.removeAllRanges(); // Test whether the native selection is capable of supporting multiple ranges.\nif(!selectionHasMultipleRanges){ // Doing the original feature test here in Chrome 36 (and presumably later versions) prints a\n// console error of \"Discontiguous selection is not supported.\" that cannot be suppressed. There's\n// nothing we can do about this while retaining the feature test so we have to resort to a browser\n// sniff. I'm not happy about it. See\n// https://code.google.com/p/chromium/issues/detail?id=399791\nvar chromeMatch=window.navigator.appVersion.match(/Chrome\\/(.*?) /);if(chromeMatch && parseInt(chromeMatch[1]) >= 36){selectionSupportsMultipleRanges = false;}else {var r2=r1.cloneRange();r1.setStart(textNode,0);r2.setEnd(textNode,3);r2.setStart(textNode,2);sel.addRange(r1);sel.addRange(r2);selectionSupportsMultipleRanges = sel.rangeCount == 2;}} // Clean up\ndom.removeNode(testEl);sel.removeAllRanges();for(i = 0;i < originalSelectionRangeCount;++i) {if(i == 0 && originalSelectionBackward){if(addRangeBackwardToNative){addRangeBackwardToNative(sel,originalSelectionRanges[i]);}else {api.warn(\"Rangy initialization: original selection was backwards but selection has been restored forwards because the browser does not support Selection.extend\");sel.addRange(originalSelectionRanges[i]);}}else {sel.addRange(originalSelectionRanges[i]);}}}})();}features.selectionSupportsMultipleRanges = selectionSupportsMultipleRanges;features.collapsedNonEditableSelectionsSupported = collapsedNonEditableSelectionsSupported; // ControlRanges\nvar implementsControlRange=false,testControlRange;if(body && isHostMethod(body,\"createControlRange\")){testControlRange = body.createControlRange();if(util.areHostProperties(testControlRange,[\"item\",\"add\"])){implementsControlRange = true;}}features.implementsControlRange = implementsControlRange; // Selection collapsedness\nif(selectionHasAnchorAndFocus){selectionIsCollapsed = function(sel){return sel.anchorNode === sel.focusNode && sel.anchorOffset === sel.focusOffset;};}else {selectionIsCollapsed = function(sel){return sel.rangeCount?sel.getRangeAt(sel.rangeCount - 1).collapsed:false;};}function updateAnchorAndFocusFromRange(sel,range,backward){var anchorPrefix=backward?\"end\":\"start\",focusPrefix=backward?\"start\":\"end\";sel.anchorNode = range[anchorPrefix + \"Container\"];sel.anchorOffset = range[anchorPrefix + \"Offset\"];sel.focusNode = range[focusPrefix + \"Container\"];sel.focusOffset = range[focusPrefix + \"Offset\"];}function updateAnchorAndFocusFromNativeSelection(sel){var nativeSel=sel.nativeSelection;sel.anchorNode = nativeSel.anchorNode;sel.anchorOffset = nativeSel.anchorOffset;sel.focusNode = nativeSel.focusNode;sel.focusOffset = nativeSel.focusOffset;}function updateEmptySelection(sel){sel.anchorNode = sel.focusNode = null;sel.anchorOffset = sel.focusOffset = 0;sel.rangeCount = 0;sel.isCollapsed = true;sel._ranges.length = 0;}function getNativeRange(range){var nativeRange;if(range instanceof DomRange){nativeRange = api.createNativeRange(range.getDocument());nativeRange.setEnd(range.endContainer,range.endOffset);nativeRange.setStart(range.startContainer,range.startOffset);}else if(range instanceof WrappedRange){nativeRange = range.nativeRange;}else if(features.implementsDomRange && range instanceof dom.getWindow(range.startContainer).Range){nativeRange = range;}return nativeRange;}function rangeContainsSingleElement(rangeNodes){if(!rangeNodes.length || rangeNodes[0].nodeType != 1){return false;}for(var i=1,len=rangeNodes.length;i < len;++i) {if(!dom.isAncestorOf(rangeNodes[0],rangeNodes[i])){return false;}}return true;}function getSingleElementFromRange(range){var nodes=range.getNodes();if(!rangeContainsSingleElement(nodes)){throw module.createError(\"getSingleElementFromRange: range \" + range.inspect() + \" did not consist of a single element\");}return nodes[0];} // Simple, quick test which only needs to distinguish between a TextRange and a ControlRange\nfunction isTextRange(range){return !!range && typeof range.text != \"undefined\";}function updateFromTextRange(sel,range){ // Create a Range from the selected TextRange\nvar wrappedRange=new WrappedRange(range);sel._ranges = [wrappedRange];updateAnchorAndFocusFromRange(sel,wrappedRange,false);sel.rangeCount = 1;sel.isCollapsed = wrappedRange.collapsed;}function updateControlSelection(sel){ // Update the wrapped selection based on what's now in the native selection\nsel._ranges.length = 0;if(sel.docSelection.type == \"None\"){updateEmptySelection(sel);}else {var controlRange=sel.docSelection.createRange();if(isTextRange(controlRange)){ // This case (where the selection type is \"Control\" and calling createRange() on the selection returns\n// a TextRange) can happen in IE 9. It happens, for example, when all elements in the selected\n// ControlRange have been removed from the ControlRange and removed from the document.\nupdateFromTextRange(sel,controlRange);}else {sel.rangeCount = controlRange.length;var range,doc=getDocument(controlRange.item(0));for(var i=0;i < sel.rangeCount;++i) {range = api.createRange(doc);range.selectNode(controlRange.item(i));sel._ranges.push(range);}sel.isCollapsed = sel.rangeCount == 1 && sel._ranges[0].collapsed;updateAnchorAndFocusFromRange(sel,sel._ranges[sel.rangeCount - 1],false);}}}function addRangeToControlSelection(sel,range){var controlRange=sel.docSelection.createRange();var rangeElement=getSingleElementFromRange(range); // Create a new ControlRange containing all the elements in the selected ControlRange plus the element\n// contained by the supplied range\nvar doc=getDocument(controlRange.item(0));var newControlRange=getBody(doc).createControlRange();for(var i=0,len=controlRange.length;i < len;++i) {newControlRange.add(controlRange.item(i));}try{newControlRange.add(rangeElement);}catch(ex) {throw module.createError(\"addRange(): Element within the specified Range could not be added to control selection (does it have layout?)\");}newControlRange.select(); // Update the wrapped selection based on what's now in the native selection\nupdateControlSelection(sel);}var getSelectionRangeAt;if(isHostMethod(testSelection,\"getRangeAt\")){ // try/catch is present because getRangeAt() must have thrown an error in some browser and some situation.\n// Unfortunately, I didn't write a comment about the specifics and am now scared to take it out. Let that be a\n// lesson to us all, especially me.\ngetSelectionRangeAt = function(sel,index){try{return sel.getRangeAt(index);}catch(ex) {return null;}};}else if(selectionHasAnchorAndFocus){getSelectionRangeAt = function(sel){var doc=getDocument(sel.anchorNode);var range=api.createRange(doc);range.setStartAndEnd(sel.anchorNode,sel.anchorOffset,sel.focusNode,sel.focusOffset); // Handle the case when the selection was selected backwards (from the end to the start in the\n// document)\nif(range.collapsed !== this.isCollapsed){range.setStartAndEnd(sel.focusNode,sel.focusOffset,sel.anchorNode,sel.anchorOffset);}return range;};}function WrappedSelection(selection,docSelection,win){this.nativeSelection = selection;this.docSelection = docSelection;this._ranges = [];this.win = win;this.refresh();}WrappedSelection.prototype = api.selectionPrototype;function deleteProperties(sel){sel.win = sel.anchorNode = sel.focusNode = sel._ranges = null;sel.rangeCount = sel.anchorOffset = sel.focusOffset = 0;sel.detached = true;}var cachedRangySelections=[];function actOnCachedSelection(win,action){var i=cachedRangySelections.length,cached,sel;while(i--) {cached = cachedRangySelections[i];sel = cached.selection;if(action == \"deleteAll\"){deleteProperties(sel);}else if(cached.win == win){if(action == \"delete\"){cachedRangySelections.splice(i,1);return true;}else {return sel;}}}if(action == \"deleteAll\"){cachedRangySelections.length = 0;}return null;}var getSelection=function getSelection(win){ // Check if the parameter is a Rangy Selection object\nif(win && win instanceof WrappedSelection){win.refresh();return win;}win = getWindow(win,\"getNativeSelection\");var sel=actOnCachedSelection(win);var nativeSel=getNativeSelection(win),docSel=implementsDocSelection?getDocSelection(win):null;if(sel){sel.nativeSelection = nativeSel;sel.docSelection = docSel;sel.refresh();}else {sel = new WrappedSelection(nativeSel,docSel,win);cachedRangySelections.push({win:win,selection:sel});}return sel;};api.getSelection = getSelection;util.createAliasForDeprecatedMethod(api,\"getIframeSelection\",\"getSelection\");var selProto=WrappedSelection.prototype;function createControlSelection(sel,ranges){ // Ensure that the selection becomes of type \"Control\"\nvar doc=getDocument(ranges[0].startContainer);var controlRange=getBody(doc).createControlRange();for(var i=0,el,len=ranges.length;i < len;++i) {el = getSingleElementFromRange(ranges[i]);try{controlRange.add(el);}catch(ex) {throw module.createError(\"setRanges(): Element within one of the specified Ranges could not be added to control selection (does it have layout?)\");}}controlRange.select(); // Update the wrapped selection based on what's now in the native selection\nupdateControlSelection(sel);} // Selecting a range\nif(!useDocumentSelection && selectionHasAnchorAndFocus && util.areHostMethods(testSelection,[\"removeAllRanges\",\"addRange\"])){selProto.removeAllRanges = function(){this.nativeSelection.removeAllRanges();updateEmptySelection(this);};var addRangeBackward=function addRangeBackward(sel,range){addRangeBackwardToNative(sel.nativeSelection,range);sel.refresh();};if(selectionHasRangeCount){selProto.addRange = function(range,direction){if(implementsControlRange && implementsDocSelection && this.docSelection.type == CONTROL){addRangeToControlSelection(this,range);}else {if(isDirectionBackward(direction) && selectionHasExtend){addRangeBackward(this,range);}else {var previousRangeCount;if(selectionSupportsMultipleRanges){previousRangeCount = this.rangeCount;}else {this.removeAllRanges();previousRangeCount = 0;} // Clone the native range so that changing the selected range does not affect the selection.\n// This is contrary to the spec but is the only way to achieve consistency between browsers. See\n// issue 80.\nvar clonedNativeRange=getNativeRange(range).cloneRange();try{this.nativeSelection.addRange(clonedNativeRange);}catch(ex) {} // Check whether adding the range was successful\nthis.rangeCount = this.nativeSelection.rangeCount;if(this.rangeCount == previousRangeCount + 1){ // The range was added successfully\n// Check whether the range that we added to the selection is reflected in the last range extracted from\n// the selection\nif(api.config.checkSelectionRanges){var nativeRange=getSelectionRangeAt(this.nativeSelection,this.rangeCount - 1);if(nativeRange && !rangesEqual(nativeRange,range)){ // Happens in WebKit with, for example, a selection placed at the start of a text node\nrange = new WrappedRange(nativeRange);}}this._ranges[this.rangeCount - 1] = range;updateAnchorAndFocusFromRange(this,range,selectionIsBackward(this.nativeSelection));this.isCollapsed = selectionIsCollapsed(this);}else { // The range was not added successfully. The simplest thing is to refresh\nthis.refresh();}}}};}else {selProto.addRange = function(range,direction){if(isDirectionBackward(direction) && selectionHasExtend){addRangeBackward(this,range);}else {this.nativeSelection.addRange(getNativeRange(range));this.refresh();}};}selProto.setRanges = function(ranges){if(implementsControlRange && implementsDocSelection && ranges.length > 1){createControlSelection(this,ranges);}else {this.removeAllRanges();for(var i=0,len=ranges.length;i < len;++i) {this.addRange(ranges[i]);}}};}else if(isHostMethod(testSelection,\"empty\") && isHostMethod(testRange,\"select\") && implementsControlRange && useDocumentSelection){selProto.removeAllRanges = function(){ // Added try/catch as fix for issue #21\ntry{this.docSelection.empty(); // Check for empty() not working (issue #24)\nif(this.docSelection.type != \"None\"){ // Work around failure to empty a control selection by instead selecting a TextRange and then\n// calling empty()\nvar doc;if(this.anchorNode){doc = getDocument(this.anchorNode);}else if(this.docSelection.type == CONTROL){var controlRange=this.docSelection.createRange();if(controlRange.length){doc = getDocument(controlRange.item(0));}}if(doc){var textRange=getBody(doc).createTextRange();textRange.select();this.docSelection.empty();}}}catch(ex) {}updateEmptySelection(this);};selProto.addRange = function(range){if(this.docSelection.type == CONTROL){addRangeToControlSelection(this,range);}else {api.WrappedTextRange.rangeToTextRange(range).select();this._ranges[0] = range;this.rangeCount = 1;this.isCollapsed = this._ranges[0].collapsed;updateAnchorAndFocusFromRange(this,range,false);}};selProto.setRanges = function(ranges){this.removeAllRanges();var rangeCount=ranges.length;if(rangeCount > 1){createControlSelection(this,ranges);}else if(rangeCount){this.addRange(ranges[0]);}};}else {module.fail(\"No means of selecting a Range or TextRange was found\");return false;}selProto.getRangeAt = function(index){if(index < 0 || index >= this.rangeCount){throw new DOMException(\"INDEX_SIZE_ERR\");}else { // Clone the range to preserve selection-range independence. See issue 80.\nreturn this._ranges[index].cloneRange();}};var refreshSelection;if(useDocumentSelection){refreshSelection = function(sel){var range;if(api.isSelectionValid(sel.win)){range = sel.docSelection.createRange();}else {range = getBody(sel.win.document).createTextRange();range.collapse(true);}if(sel.docSelection.type == CONTROL){updateControlSelection(sel);}else if(isTextRange(range)){updateFromTextRange(sel,range);}else {updateEmptySelection(sel);}};}else if(isHostMethod(testSelection,\"getRangeAt\") && typeof testSelection.rangeCount == NUMBER){refreshSelection = function(sel){if(implementsControlRange && implementsDocSelection && sel.docSelection.type == CONTROL){updateControlSelection(sel);}else {sel._ranges.length = sel.rangeCount = sel.nativeSelection.rangeCount;if(sel.rangeCount){for(var i=0,len=sel.rangeCount;i < len;++i) {sel._ranges[i] = new api.WrappedRange(sel.nativeSelection.getRangeAt(i));}updateAnchorAndFocusFromRange(sel,sel._ranges[sel.rangeCount - 1],selectionIsBackward(sel.nativeSelection));sel.isCollapsed = selectionIsCollapsed(sel);}else {updateEmptySelection(sel);}}};}else if(selectionHasAnchorAndFocus && typeof testSelection.isCollapsed == BOOLEAN && typeof testRange.collapsed == BOOLEAN && features.implementsDomRange){refreshSelection = function(sel){var range,nativeSel=sel.nativeSelection;if(nativeSel.anchorNode){range = getSelectionRangeAt(nativeSel,0);sel._ranges = [range];sel.rangeCount = 1;updateAnchorAndFocusFromNativeSelection(sel);sel.isCollapsed = selectionIsCollapsed(sel);}else {updateEmptySelection(sel);}};}else {module.fail(\"No means of obtaining a Range or TextRange from the user's selection was found\");return false;}selProto.refresh = function(checkForChanges){var oldRanges=checkForChanges?this._ranges.slice(0):null;var oldAnchorNode=this.anchorNode,oldAnchorOffset=this.anchorOffset;refreshSelection(this);if(checkForChanges){ // Check the range count first\nvar i=oldRanges.length;if(i != this._ranges.length){return true;} // Now check the direction. Checking the anchor position is the same is enough since we're checking all the\n// ranges after this\nif(this.anchorNode != oldAnchorNode || this.anchorOffset != oldAnchorOffset){return true;} // Finally, compare each range in turn\nwhile(i--) {if(!rangesEqual(oldRanges[i],this._ranges[i])){return true;}}return false;}}; // Removal of a single range\nvar removeRangeManually=function removeRangeManually(sel,range){var ranges=sel.getAllRanges();sel.removeAllRanges();for(var i=0,len=ranges.length;i < len;++i) {if(!rangesEqual(range,ranges[i])){sel.addRange(ranges[i]);}}if(!sel.rangeCount){updateEmptySelection(sel);}};if(implementsControlRange && implementsDocSelection){selProto.removeRange = function(range){if(this.docSelection.type == CONTROL){var controlRange=this.docSelection.createRange();var rangeElement=getSingleElementFromRange(range); // Create a new ControlRange containing all the elements in the selected ControlRange minus the\n// element contained by the supplied range\nvar doc=getDocument(controlRange.item(0));var newControlRange=getBody(doc).createControlRange();var el,removed=false;for(var i=0,len=controlRange.length;i < len;++i) {el = controlRange.item(i);if(el !== rangeElement || removed){newControlRange.add(controlRange.item(i));}else {removed = true;}}newControlRange.select(); // Update the wrapped selection based on what's now in the native selection\nupdateControlSelection(this);}else {removeRangeManually(this,range);}};}else {selProto.removeRange = function(range){removeRangeManually(this,range);};} // Detecting if a selection is backward\nvar selectionIsBackward;if(!useDocumentSelection && selectionHasAnchorAndFocus && features.implementsDomRange){selectionIsBackward = winSelectionIsBackward;selProto.isBackward = function(){return selectionIsBackward(this);};}else {selectionIsBackward = selProto.isBackward = function(){return false;};} // Create an alias for backwards compatibility. From 1.3, everything is \"backward\" rather than \"backwards\"\nselProto.isBackwards = selProto.isBackward; // Selection stringifier\n// This is conformant to the old HTML5 selections draft spec but differs from WebKit and Mozilla's implementation.\n// The current spec does not yet define this method.\nselProto.toString = function(){var rangeTexts=[];for(var i=0,len=this.rangeCount;i < len;++i) {rangeTexts[i] = \"\" + this._ranges[i];}return rangeTexts.join(\"\");};function assertNodeInSameDocument(sel,node){if(sel.win.document != getDocument(node)){throw new DOMException(\"WRONG_DOCUMENT_ERR\");}} // No current browser conforms fully to the spec for this method, so Rangy's own method is always used\nselProto.collapse = function(node,offset){assertNodeInSameDocument(this,node);var range=api.createRange(node);range.collapseToPoint(node,offset);this.setSingleRange(range);this.isCollapsed = true;};selProto.collapseToStart = function(){if(this.rangeCount){var range=this._ranges[0];this.collapse(range.startContainer,range.startOffset);}else {throw new DOMException(\"INVALID_STATE_ERR\");}};selProto.collapseToEnd = function(){if(this.rangeCount){var range=this._ranges[this.rangeCount - 1];this.collapse(range.endContainer,range.endOffset);}else {throw new DOMException(\"INVALID_STATE_ERR\");}}; // The spec is very specific on how selectAllChildren should be implemented and not all browsers implement it as\n// specified so the native implementation is never used by Rangy.\nselProto.selectAllChildren = function(node){assertNodeInSameDocument(this,node);var range=api.createRange(node);range.selectNodeContents(node);this.setSingleRange(range);};selProto.deleteFromDocument = function(){ // Sepcial behaviour required for IE's control selections\nif(implementsControlRange && implementsDocSelection && this.docSelection.type == CONTROL){var controlRange=this.docSelection.createRange();var element;while(controlRange.length) {element = controlRange.item(0);controlRange.remove(element);dom.removeNode(element);}this.refresh();}else if(this.rangeCount){var ranges=this.getAllRanges();if(ranges.length){this.removeAllRanges();for(var i=0,len=ranges.length;i < len;++i) {ranges[i].deleteContents();} // The spec says nothing about what the selection should contain after calling deleteContents on each\n// range. Firefox moves the selection to where the final selected range was, so we emulate that\nthis.addRange(ranges[len - 1]);}}}; // The following are non-standard extensions\nselProto.eachRange = function(func,returnValue){for(var i=0,len=this._ranges.length;i < len;++i) {if(func(this.getRangeAt(i))){return returnValue;}}};selProto.getAllRanges = function(){var ranges=[];this.eachRange(function(range){ranges.push(range);});return ranges;};selProto.setSingleRange = function(range,direction){this.removeAllRanges();this.addRange(range,direction);};selProto.callMethodOnEachRange = function(methodName,params){var results=[];this.eachRange(function(range){results.push(range[methodName].apply(range,params || []));});return results;};function createStartOrEndSetter(isStart){return function(node,offset){var range;if(this.rangeCount){range = this.getRangeAt(0);range[\"set\" + (isStart?\"Start\":\"End\")](node,offset);}else {range = api.createRange(this.win.document);range.setStartAndEnd(node,offset);}this.setSingleRange(range,this.isBackward());};}selProto.setStart = createStartOrEndSetter(true);selProto.setEnd = createStartOrEndSetter(false); // Add select() method to Range prototype. Any existing selection will be removed.\napi.rangePrototype.select = function(direction){getSelection(this.getDocument()).setSingleRange(this,direction);};selProto.changeEachRange = function(func){var ranges=[];var backward=this.isBackward();this.eachRange(function(range){func(range);ranges.push(range);});this.removeAllRanges();if(backward && ranges.length == 1){this.addRange(ranges[0],\"backward\");}else {this.setRanges(ranges);}};selProto.containsNode = function(node,allowPartial){return this.eachRange(function(range){return range.containsNode(node,allowPartial);},true) || false;};selProto.getBookmark = function(containerNode){return {backward:this.isBackward(),rangeBookmarks:this.callMethodOnEachRange(\"getBookmark\",[containerNode])};};selProto.moveToBookmark = function(bookmark){var selRanges=[];for(var i=0,rangeBookmark,range;rangeBookmark = bookmark.rangeBookmarks[i++];) {range = api.createRange(this.win);range.moveToBookmark(rangeBookmark);selRanges.push(range);}if(bookmark.backward){this.setSingleRange(selRanges[0],\"backward\");}else {this.setRanges(selRanges);}};selProto.saveRanges = function(){return {backward:this.isBackward(),ranges:this.callMethodOnEachRange(\"cloneRange\")};};selProto.restoreRanges = function(selRanges){this.removeAllRanges();for(var i=0,range;range = selRanges.ranges[i];++i) {this.addRange(range,selRanges.backward && i == 0);}};selProto.toHtml = function(){var rangeHtmls=[];this.eachRange(function(range){rangeHtmls.push(DomRange.toHtml(range));});return rangeHtmls.join(\"\");};if(features.implementsTextRange){selProto.getNativeTextRange = function(){var sel,textRange;if(sel = this.docSelection){var range=sel.createRange();if(isTextRange(range)){return range;}else {throw module.createError(\"getNativeTextRange: selection is a control selection\");}}else if(this.rangeCount > 0){return api.WrappedTextRange.rangeToTextRange(this.getRangeAt(0));}else {throw module.createError(\"getNativeTextRange: selection contains no range\");}};}function inspect(sel){var rangeInspects=[];var anchor=new DomPosition(sel.anchorNode,sel.anchorOffset);var focus=new DomPosition(sel.focusNode,sel.focusOffset);var name=typeof sel.getName == \"function\"?sel.getName():\"Selection\";if(typeof sel.rangeCount != \"undefined\"){for(var i=0,len=sel.rangeCount;i < len;++i) {rangeInspects[i] = DomRange.inspect(sel.getRangeAt(i));}}return \"[\" + name + \"(Ranges: \" + rangeInspects.join(\", \") + \")(anchor: \" + anchor.inspect() + \", focus: \" + focus.inspect() + \"]\";}selProto.getName = function(){return \"WrappedSelection\";};selProto.inspect = function(){return inspect(this);};selProto.detach = function(){actOnCachedSelection(this.win,\"delete\");deleteProperties(this);};WrappedSelection.detachAll = function(){actOnCachedSelection(null,\"deleteAll\");};WrappedSelection.inspect = inspect;WrappedSelection.isDirectionBackward = isDirectionBackward;api.Selection = WrappedSelection;api.selectionPrototype = selProto;api.addShimListener(function(win){if(typeof win.getSelection == \"undefined\"){win.getSelection = function(){return getSelection(win);};}win = null;});}); /*----------------------------------------------------------------------------------------------------------------*/ // Wait for document to load before initializing\nvar docReady=false;var loadHandler=function loadHandler(e){if(!docReady){docReady = true;if(!api.initialized && api.config.autoInitialize){init();}}};if(isBrowser){ // Test whether the document has already been loaded and initialize immediately if so\nif(document.readyState == \"complete\"){loadHandler();}else {if(isHostMethod(document,\"addEventListener\")){document.addEventListener(\"DOMContentLoaded\",loadHandler,false);} // Add a fallback in case the DOMContentLoaded event isn't supported\naddListener(window,\"load\",loadHandler);}}return api;},undefined); // Thanks to Aleks Williams.\n// previous versions of Rangy used (with the exception of using a body element rather than a div)//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Position module for Rangy.\n * Extensions to Range and Selection objects to provide access to pixel positions relative to the viewport or document.\n *\n * Part of Rangy, a cross-browser JavaScript range and selection library\n * https://github.com/timdown/rangy\n *\n * Depends on Rangy core.\n *\n * Copyright %%build:year%%, Tim Down\n * Licensed under the MIT license.\n * Version: %%build:version%%\n * Build date: %%build:date%%\n */\n\"use strict\";\n\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { \"default\": obj };\n}\n\nvar _rangy = __webpack_require__(7);\n\nvar _rangy2 = _interopRequireDefault(_rangy);\n\n_rangy2[\"default\"].createModule(\"Position\", [\"WrappedSelection\"], function (api, module) {\n    //var log = log4javascript.getLogger(\"rangy.position\");\n\n    var NUMBER = \"number\",\n        UNDEF = \"undefined\";\n    var WrappedRange = api.WrappedRange;\n    var WrappedTextRange = api.WrappedTextRange;\n    var dom = api.dom,\n        util = api.util,\n        DomPosition = dom.DomPosition;\n\n    // Feature detection\n\n    //var caretPositionFromPointSupported = (typeof document.caretPositionFromPoint != UNDEF);\n\n    // Since Rangy can deal with multiple documents which could be in different modes, we have to do the checks every\n    // time, unless we cache a getScrollPosition function in each document. This would necessarily pollute the\n    // document's global namespace, which I'm choosing to view as a greater evil than a slight performance hit.\n    function getScrollPosition(win) {\n        var x = 0,\n            y = 0;\n        if (typeof win.pageXOffset == NUMBER && typeof win.pageYOffset == NUMBER) {\n            x = win.pageXOffset;\n            y = win.pageYOffset;\n        } else {\n            var doc = win.document;\n            var docEl = doc.documentElement;\n            var compatMode = doc.compatMode;\n            var scrollEl = typeof compatMode == \"string\" && compatMode.indexOf(\"CSS\") >= 0 && docEl ? docEl : dom.getBody(doc);\n\n            if (scrollEl && typeof scrollEl.scrollLeft == NUMBER && typeof scrollEl.scrollTop == NUMBER) {\n                try {\n                    x = scrollEl.scrollLeft;\n                    y = scrollEl.scrollTop;\n                } catch (ex) {}\n            }\n        }\n        return { x: x, y: y };\n    }\n\n    function getAncestorElement(node, tagName) {\n        tagName = tagName.toLowerCase();\n        while (node) {\n            if (node.nodeType == 1 && node.tagName.toLowerCase() == tagName) {\n                return node;\n            }\n            node = node.parentNode;\n        }\n        return null;\n    }\n\n    function Rect(top, right, bottom, left) {\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n        this.left = left;\n        this.width = right - left;\n        this.height = bottom - top;\n    }\n\n    function createRelativeRect(rect, dx, dy) {\n        return new Rect(rect.top + dy, rect.right + dx, rect.bottom + dy, rect.left + dx);\n    }\n\n    function adjustClientRect(rect, doc) {\n        // Older IEs have an issue with a two pixel margin on the body element\n        var dx = 0,\n            dy = 0;\n        var docEl = doc.documentElement,\n            body = dom.getBody(doc);\n        var container = docEl.clientWidth === 0 && typeof body.clientTop == NUMBER ? body : docEl;\n        var clientLeft = container.clientLeft,\n            clientTop = container.clientTop;\n        if (clientLeft) {\n            dx = -clientLeft;\n        }\n        if (clientTop) {\n            dy = -clientTop;\n        }\n        return createRelativeRect(rect, dx, dy);\n    }\n\n    function mergeRects(rects) {\n        var tops = [],\n            bottoms = [],\n            lefts = [],\n            rights = [];\n        for (var i = 0, len = rects.length, rect; i < len; ++i) {\n            rect = rects[i];\n            if (rect) {\n                tops.push(rect.top);\n                bottoms.push(rect.bottom);\n                lefts.push(rect.left);\n                rights.push(rect.right);\n            }\n        }\n        return new Rect(Math.min.apply(Math, tops), Math.max.apply(Math, rights), Math.max.apply(Math, bottoms), Math.min.apply(Math, lefts));\n    }\n\n    function getTextRangePosition(doc, x, y) {\n        var textRange = dom.getBody(doc).createTextRange();\n        textRange.moveToPoint(x, y);\n        var range = new api.WrappedTextRange(textRange);\n        return new DomPosition(range.startContainer, range.startOffset);\n    }\n\n    function caretPositionFromPoint(doc, x, y) {\n        var pos = doc.caretPositionFromPoint(x, y);\n        return new DomPosition(pos.offsetNode, pos.offset);\n    }\n\n    function caretRangeFromPoint(doc, x, y) {\n        var range = doc.caretRangeFromPoint(x, y);\n        return new DomPosition(range.startContainer, range.startOffset);\n    }\n\n    function getLastRangeRect(range) {\n        var rects = (range.nativeRange || range).getClientRects();\n        return rects.length > 0 ? rects[rects.length - 1] : null;\n    }\n\n    function pointIsInOrAboveRect(x, y, rect) {\n        console.log(\"pointIsInOrAboveRect\", x, y, Math.floor(rect.top), Math.floor(rect.right), Math.floor(rect.bottom), Math.floor(rect.left));\n        return y < rect.bottom && x >= rect.left && x <= rect.right;\n    }\n\n    function positionFromPoint(doc, x, y, favourPrecedingPosition) {\n        var el = doc.elementFromPoint(x, y);\n\n        console.log(\"elementFromPoint is \", el);\n\n        var range = api.createRange(doc);\n        range.selectNodeContents(el);\n        range.collapse(true);\n\n        var node = el.firstChild,\n            offset,\n            rect,\n            textLen;\n\n        if (!node) {\n            node = el.parentNode;\n            offset = dom.getNodeIndex(el);\n            if (!favourPrecedingPosition) {\n                ++offset;\n            }\n        } else {\n            // Search through the text node children of el\n            main: while (node) {\n                console.log(node);\n                if (node.nodeType == 3) {\n                    // Go through the text node character by character\n                    for (offset = 0, textLen = node.length; offset <= textLen; ++offset) {\n                        range.setEnd(node, offset);\n                        rect = getLastRangeRect(range);\n                        if (rect && pointIsInOrAboveRect(x, y, rect)) {\n                            // We've gone past the point. Now we check which side (left or right) of the character the point is nearer to\n                            if (rect.right - x > x - rect.left) {\n                                --offset;\n                            }\n                            break main;\n                        }\n                    }\n                } else {\n                    // Handle elements\n                    range.setEndAfter(node);\n                    rect = getLastRangeRect(range);\n                    if (rect && pointIsInOrAboveRect(x, y, rect)) {\n                        offset = dom.getNodeIndex(node);\n                        node = el.parentNode;\n                        if (!favourPrecedingPosition) {\n                            ++offset;\n                        }\n                        break;\n                    }\n                }\n\n                node = node.nextSibling;\n            }\n            if (!node) {\n                node = el;\n                offset = el.childNodes.length;\n            }\n        }\n\n        return new DomPosition(node, offset);\n    }\n\n    function createCaretPositionFromPointGetter(doc) {\n        if (api.features.implementsTextRange) {\n            return getTextRangePosition;\n        } else if (typeof doc.caretPositionFromPoint != UNDEF) {\n            return caretPositionFromPoint;\n        } else if (typeof doc.caretRangeFromPoint != UNDEF) {\n            return caretRangeFromPoint;\n        } else if (typeof doc.elementFromPoint != UNDEF && rangeSupportsGetClientRects) {\n            return positionFromPoint;\n        } else {\n            throw module.createError(\"createCaretPositionFromPointGetter(): Browser does not provide a recognised method to create a selection from pixel coordinates\");\n        }\n    }\n\n    function createRangeFromPoints(startX, startY, endX, endY, doc) {\n        doc = dom.getContentDocument(doc, module, \"createRangeFromPoints\");\n        var positionFinder = createCaretPositionFromPointGetter(doc);\n        var startPos = positionFinder(doc, startX, startY, false);\n        var endPos = positionFinder(doc, endX, endY, true);\n        console.log(startPos.node, startPos.offset, endPos.node, endPos.offset);\n        var range = api.createRange(doc);\n        range.setStartAndEnd(startPos.node, startPos.offset, endPos.node, endPos.offset);\n        return range;\n    }\n\n    function moveSelectionToPoints(anchorX, anchorY, focusX, focusY, doc) {\n        var startX, startY, endX, endY;\n\n        // Detect backward selection for coordinates and flip start and end coordinates if necessary\n        var backward = focusY < anchorY || anchorY == focusY && focusX < anchorX;\n\n        if (backward) {\n            startX = focusX;\n            startY = focusY;\n            endX = anchorX;\n            endY = anchorY;\n        } else {\n            startX = anchorX;\n            startY = anchorY;\n            endX = focusX;\n            endY = focusY;\n        }\n\n        var sel = _rangy2[\"default\"].getSelection(doc);\n        var range = createRangeFromPoints(startX, startY, endX, endY, doc);\n        sel.setSingleRange(range);\n        return sel;\n    }\n\n    // Test that <span> elements support getBoundingClientRect\n    var span = document.createElement(\"span\");\n    var elementSupportsGetBoundingClientRect = util.isHostMethod(span, \"getBoundingClientRect\");\n    span = null;\n\n    // Test for getBoundingClientRect support in Range\n    var rangeSupportsGetClientRects = false,\n        rangeSupportsGetBoundingClientRect = false;\n    if (api.features.implementsDomRange) {\n        var testRange = api.createNativeRange();\n        rangeSupportsGetClientRects = util.isHostMethod(testRange, \"getClientRects\");\n        rangeSupportsGetBoundingClientRect = util.isHostMethod(testRange, \"getBoundingClientRect\");\n    }\n\n    util.extend(api.features, {\n        rangeSupportsGetBoundingClientRect: rangeSupportsGetBoundingClientRect,\n        rangeSupportsGetClientRects: rangeSupportsGetClientRects,\n        elementSupportsGetBoundingClientRect: elementSupportsGetBoundingClientRect\n    });\n\n    var createClientBoundaryPosGetter = function createClientBoundaryPosGetter(isStart) {\n        return function () {\n            var boundaryRange = this.cloneRange();\n            boundaryRange.collapse(isStart);\n            var rect = boundaryRange.getBoundingClientRect();\n            return {\n                x: rect[isStart ? \"left\" : \"right\"],\n                y: rect[isStart ? \"top\" : \"bottom\"]\n            };\n        };\n    };\n\n    var rangeProto = api.rangePrototype;\n\n    if (api.features.implementsTextRange && elementSupportsGetBoundingClientRect) {\n        rangeProto.getBoundingClientRect = function () {\n            // We need a TextRange\n            var textRange = WrappedTextRange.rangeToTextRange(this);\n\n            // Work around table problems (table cell bounding rects seem not to count if TextRange spans cells)\n            var cells = this.getNodes([1], function (el) {\n                return (/^t[dh]$/i.test(el.tagName)\n                );\n            });\n\n            // Merge rects for each cell selected by the range into overall rect\n            var rect,\n                rects = [];\n            if (cells.length > 0) {\n                var lastTable = getAncestorElement(this.startContainer, \"table\");\n\n                for (var i = 0, cell, tempTextRange, table, subRange; cell = cells[i]; ++i) {\n                    // Handle non-table sections of the range\n                    table = getAncestorElement(cell, \"table\");\n                    if (!lastTable || table != lastTable) {\n                        // There is a section of the range prior to the current table, or lying between tables.\n                        // Merge in its rect\n                        subRange = this.cloneRange();\n                        if (lastTable) {\n                            subRange.setStartAfter(lastTable);\n                        }\n                        subRange.setEndBefore(table);\n                        rects.push(WrappedTextRange.rangeToTextRange(subRange).getBoundingClientRect());\n                    }\n\n                    if (this.containsNode(cell)) {\n                        rects.push(cell.getBoundingClientRect());\n                    } else {\n                        tempTextRange = textRange.duplicate();\n                        tempTextRange.moveToElementText(cell);\n                        if (tempTextRange.compareEndPoints(\"StartToStart\", textRange) == -1) {\n                            tempTextRange.setEndPoint(\"StartToStart\", textRange);\n                        } else if (tempTextRange.compareEndPoints(\"EndToEnd\", textRange) == 1) {\n                            tempTextRange.setEndPoint(\"EndToEnd\", textRange);\n                        }\n                        rects.push(tempTextRange.getBoundingClientRect());\n                    }\n                    lastTable = table;\n                }\n\n                // Merge in the rect for any content lying after the final table\n                var endTable = getAncestorElement(this.endContainer, \"table\");\n                if (!endTable && lastTable) {\n                    subRange = this.cloneRange();\n                    subRange.setStartAfter(lastTable);\n                    rects.push(WrappedTextRange.rangeToTextRange(subRange).getBoundingClientRect());\n                }\n                rect = mergeRects(rects);\n            } else {\n                rect = textRange.getBoundingClientRect();\n            }\n\n            return adjustClientRect(rect, dom.getDocument(this.startContainer));\n        };\n    } else if (api.features.implementsDomRange) {\n        var createWrappedRange = function createWrappedRange(range) {\n            return range instanceof WrappedRange ? range : new WrappedRange(range);\n        };\n\n        if (rangeSupportsGetBoundingClientRect) {\n            rangeProto.getBoundingClientRect = function () {\n                var nativeRange = createWrappedRange(this).nativeRange;\n                // Test for WebKit getBoundingClientRect bug (https://bugs.webkit.org/show_bug.cgi?id=65324)\n                var rect = nativeRange.getBoundingClientRect() || nativeRange.getClientRects()[0];\n                return adjustClientRect(rect, dom.getDocument(this.startContainer));\n            };\n\n            if (rangeSupportsGetClientRects) {\n\n                createClientBoundaryPosGetter = function (isStart) {\n                    return function () {\n                        var rect,\n                            nativeRange = createWrappedRange(this).nativeRange;\n                        var rects = nativeRange.getClientRects();\n\n                        if (rects.length === 0 && elementSupportsGetBoundingClientRect) {\n                            if (isStart) {}\n\n                            console.log(nativeRange, nativeRange.getClientRects(), nativeRange.getBoundingClientRect());\n                            if (this.collapsed && this.startContainer.nodeType === 1 && this.startOffset < this.startContainer.childNodes.length) {\n                                var n = this.startContainer.childNodes[this.startOffset];\n                                if (n.getClientRects) {\n                                    console.log(n, n.getClientRects(), this.startContainer.getClientRects());\n                                }\n                            }\n                        }\n\n                        if (rects.length > 0) {\n                            if (isStart) {\n                                rect = rects[0];\n                                return { x: rect.left, y: rect.top };\n                            } else {\n                                rect = rects[rects.length - 1];\n                                return { x: rect.right, y: rect.bottom };\n                            }\n                        } else {\n                            throw module.createError(\"Cannot get position for range \" + this.inspect());\n                        }\n                    };\n                };\n            }\n        } else {\n            var getElementBoundingClientRect = elementSupportsGetBoundingClientRect ? function (el) {\n                return adjustClientRect(el.getBoundingClientRect(), dom.getDocument(el));\n            } :\n\n            // This implementation is very naive. There are many browser quirks that make it extremely\n            function (el) {\n                var x = 0,\n                    y = 0,\n                    offsetEl = el,\n                    width = el.offsetWidth,\n                    height = el.offsetHeight;\n                while (offsetEl) {\n                    x += offsetEl.offsetLeft;\n                    y += offsetEl.offsetTop;\n                    offsetEl = offsetEl.offsetParent;\n                }\n\n                return adjustClientRect(new Rect(y, x + width, y + height, x), dom.getDocument(el));\n            };\n\n            var getRectFromBoundaries = function getRectFromBoundaries(range) {\n                var rect;\n                range.splitBoundaries();\n                var span = document.createElement(\"span\");\n\n                if (range.collapsed) {\n                    range.insertNode(span);\n                    rect = getElementBoundingClientRect(span);\n                    span.parentNode.removeChild(span);\n                } else {\n                    // TODO: This isn't right. I'm not sure it can be made right sensibly. Consider what to do.\n                    // This doesn't consider all the line boxes it needs to consider.\n                    var workingRange = range.cloneRange();\n\n                    // Get the start rectangle\n                    workingRange.collapse(true);\n                    workingRange.insertNode(span);\n                    var startRect = getElementBoundingClientRect(span);\n                    span.parentNode.removeChild(span);\n\n                    // Get the end rectangle\n                    workingRange.collapseToPoint(range.endContainer, range.endOffset);\n                    workingRange.insertNode(span);\n                    var endRect = getElementBoundingClientRect(span);\n                    span.parentNode.removeChild(span);\n\n                    // Merge the start and end rects\n                    var rects = [startRect, endRect];\n\n                    // Merge in rectangles for all elements in the range\n                    var elements = range.getNodes([1], function (el) {\n                        return range.containsNode(el);\n                    });\n\n                    for (var i = 0, len = elements.length; i < len; ++i) {\n                        rects.push(getElementBoundingClientRect(elements[i]));\n                    }\n                    rect = mergeRects(rects);\n                }\n\n                // Clean up\n                range.normalizeBoundaries();\n                return rect;\n            };\n\n            rangeProto.getBoundingClientRect = function (range) {\n                return getRectFromBoundaries(createWrappedRange(range));\n            };\n        }\n    }\n    function createDocumentBoundaryPosGetter(isStart) {\n        return function () {\n            var pos = this[\"get\" + (isStart ? \"Start\" : \"End\") + \"ClientPos\"]();\n            var scrollPos = getScrollPosition(dom.getWindow(this.startContainer));\n            return { x: pos.x + scrollPos.x, y: pos.y + scrollPos.y };\n        };\n    }\n\n    util.extend(rangeProto, {\n        getBoundingDocumentRect: function getBoundingDocumentRect() {\n            var scrollPos = getScrollPosition(dom.getWindow(this.startContainer));\n            return createRelativeRect(this.getBoundingClientRect(), scrollPos.x, scrollPos.y);\n        },\n\n        getStartClientPos: createClientBoundaryPosGetter(true),\n        getEndClientPos: createClientBoundaryPosGetter(false),\n\n        getStartDocumentPos: createDocumentBoundaryPosGetter(true),\n        getEndDocumentPos: createDocumentBoundaryPosGetter(false)\n    });\n\n    // Add Selection methods\n    function compareRanges(r1, r2) {\n        return r1.compareBoundaryPoints(r2.START_TO_START, r2);\n    }\n\n    function createSelectionRectGetter(isDocument) {\n        return function () {\n            var rangeMethodName = \"getBounding\" + (isDocument ? \"Document\" : \"Client\") + \"Rect\";\n            var rects = [];\n            for (var i = 0; i < this.rangeCount; ++i) {\n                rects.push(this.getRangeAt(i)[rangeMethodName]());\n            }\n            return mergeRects(rects);\n        };\n    }\n\n    function createSelectionBoundaryPosGetter(isStart, isDocument) {\n        return function () {\n            if (this.rangeCount === 0) {\n                return null;\n            }\n\n            var posType = isDocument ? \"Document\" : \"Client\";\n\n            var ranges = this.getAllRanges();\n            if (ranges.length > 1) {\n                // Order the ranges by position within the DOM\n                ranges.sort(compareRanges);\n            }\n\n            return isStart ? ranges[0][\"getStart\" + posType + \"Pos\"]() : ranges[ranges.length - 1][\"getEnd\" + posType + \"Pos\"]();\n        };\n    }\n\n    util.extend(api.selectionPrototype, {\n        getBoundingClientRect: createSelectionRectGetter(false),\n        getBoundingDocumentRect: createSelectionRectGetter(true),\n\n        getStartClientPos: createSelectionBoundaryPosGetter(true, false),\n        getEndClientPos: createSelectionBoundaryPosGetter(false, false),\n\n        getStartDocumentPos: createSelectionBoundaryPosGetter(true, true),\n        getEndDocumentPos: createSelectionBoundaryPosGetter(false, true)\n    });\n\n    api.positionFromPoint = function (x, y, doc) {\n        doc = dom.getContentDocument(doc, module, \"positionFromPoint\");\n        return createCaretPositionFromPointGetter(doc)(doc, x, y);\n    };\n\n    api.createRangeFromPoints = createRangeFromPoints;\n    api.moveSelectionToPoints = moveSelectionToPoints;\n});\n// difficult to get accurate element coordinates in all situations//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 9 */
/***/ function(module, exports) {

	eval("/**\n * [parseStrByDelimiter description]\n * @method parseStrByDelimiter\n * @param  {[string]} str       = ''  [origin str]\n * @param  {[string]} delimiter = '@' [delimiter str]\n * @return {[string]}\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nfunction parseStrByDelimiter() {\n\tvar str = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\tvar delimiter = arguments.length <= 1 || arguments[1] === undefined ? '@' : arguments[1];\n\n\tvar idx = str.lastIndexOf(delimiter);\n\tif (idx !== -1) {\n\t\tstr = str.substring(idx + 1);\n\t} else {\n\t\tstr = '';\n\t}\n\treturn str;\n}\n\nexports.parseStrByDelimiter = parseStrByDelimiter;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2xpYi91dGlsLmpzPzMxNzgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBbcGFyc2VTdHJCeURlbGltaXRlciBkZXNjcmlwdGlvbl1cbiAqIEBtZXRob2QgcGFyc2VTdHJCeURlbGltaXRlclxuICogQHBhcmFtICB7W3N0cmluZ119IHN0ciAgICAgICA9ICcnICBbb3JpZ2luIHN0cl1cbiAqIEBwYXJhbSAge1tzdHJpbmddfSBkZWxpbWl0ZXIgPSAnQCcgW2RlbGltaXRlciBzdHJdXG4gKiBAcmV0dXJuIHtbc3RyaW5nXX1cbiAqL1xuZnVuY3Rpb24gcGFyc2VTdHJCeURlbGltaXRlcihzdHIgPSAnJywgZGVsaW1pdGVyID0gJ0AnKSB7XG5cdGxldCBpZHggPSBzdHIubGFzdEluZGV4T2YoZGVsaW1pdGVyKTtcblx0aWYgKGlkeCAhPT0gLTEpIHtcblx0XHRzdHIgPSBzdHIuc3Vic3RyaW5nKGlkeCArIDEpO1xuXHR9IGVsc2Uge1xuXHRcdHN0ciA9ICcnO1xuXHR9XG5cdHJldHVybiBzdHI7XG59XG5cbmV4cG9ydCB7cGFyc2VTdHJCeURlbGltaXRlcn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL2xpYi91dGlsLmpzXG4gKiovIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBTUE7QUFDQTtBQUNBO0FBUEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBU0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 10 */
/***/ function(module, exports) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n   value: true\n});\nvar KEYCODE = {\n   DOWN: 40,\n   UP: 38,\n   ESC: 27,\n   TAB: 9,\n   ENTER: 13,\n   CTRL: 17,\n   BACKSPACE: 8,\n   DELETE: 46\n};\nexports.KEYCODE = KEYCODE;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9saWIva2V5Y29kZS5qcz8yZmMxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBLRVlDT0RFID0ge1xuXHRET1dOXHRcdDogNDAsXG4gICAgVVBcdFx0XHQ6IDM4LFxuICAgIEVTQ1x0XHRcdDogMjcsXG4gICAgVEFCXHRcdFx0OiA5LFxuICAgIEVOVEVSXHRcdDogMTMsXG4gICAgQ1RSTFx0XHQ6IDE3LFxuICAgIEJBQ0tTUEFDRVx0OiA4LFxuICAgIERFTEVURVx0XHQ6IDQ2XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9saWIva2V5Y29kZS5qc1xuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(12);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(14)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/less-loader/index.js!./style.less\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/less-loader/index.js!./style.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlL3N0eWxlLmxlc3M/NzM3MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9pbmRleC5qcyEuL3N0eWxlLmxlc3NcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9hZGRTdHlsZXMuanNcIikoY29udGVudCwge30pO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2luZGV4LmpzIS4vc3R5bGUubGVzc1wiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9pbmRleC5qcyEuL3N0eWxlLmxlc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9leGFtcGxlL3N0eWxlLmxlc3NcbiAqKiBtb2R1bGUgaWQgPSAxMVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	eval("exports = module.exports = __webpack_require__(13)();\nexports.push([module.id, \".kuma-mention-node {\\n  padding: 0 2px;\\n  background: none;\\n  border: 0 none;\\n  color: #2691F7;\\n}\\n.kuma-mention-panel {\\n  position: absolute;\\n  margin: 0;\\n  padding: 0;\\n  background-color: #fff;\\n  border: 1px solid #000;\\n  display: none;\\n}\\n.kuma-mention-panel-visible {\\n  display: block;\\n}\\n.kuma-mention-panel-item {\\n  display: block;\\n  cursor: pointer;\\n}\\n.kuma-mention-panel-item:hover {\\n  background-color: #ccc;\\n}\\n.kuma-mention-panel-item-current {\\n  background-color: #bbb;\\n}\\n\", \"\"]);//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlL3N0eWxlLmxlc3M/NWQ0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoKTtcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5rdW1hLW1lbnRpb24tbm9kZSB7XFxuICBwYWRkaW5nOiAwIDJweDtcXG4gIGJhY2tncm91bmQ6IG5vbmU7XFxuICBib3JkZXI6IDAgbm9uZTtcXG4gIGNvbG9yOiAjMjY5MUY3O1xcbn1cXG4ua3VtYS1tZW50aW9uLXBhbmVsIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgYm9yZGVyOiAxcHggc29saWQgIzAwMDtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcbi5rdW1hLW1lbnRpb24tcGFuZWwtdmlzaWJsZSB7XFxuICBkaXNwbGF5OiBibG9jaztcXG59XFxuLmt1bWEtbWVudGlvbi1wYW5lbC1pdGVtIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG4ua3VtYS1tZW50aW9uLXBhbmVsLWl0ZW06aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcXG59XFxuLmt1bWEtbWVudGlvbi1wYW5lbC1pdGVtLWN1cnJlbnQge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2JiYjtcXG59XFxuXCIsIFwiXCJdKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyIS4vfi9sZXNzLWxvYWRlciEuL2V4YW1wbGUvc3R5bGUubGVzc1xuICoqIG1vZHVsZSBpZCA9IDEyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 13 */
/***/ function(module, exports) {

	eval("/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n// css base code, injected by the css-loader\n\"use strict\";\n\nmodule.exports = function () {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor (var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif (item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function (modules, mediaQuery) {\n\t\tif (typeof modules === \"string\") modules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor (var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif (typeof id === \"number\") alreadyImportedModules[id] = true;\n\t\t}\n\t\tfor (i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif (typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif (mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if (mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzP2RhMDQiXSwic291cmNlc0NvbnRlbnQiOlsiLypcclxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxyXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcclxuKi9cclxuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcclxuXHR2YXIgbGlzdCA9IFtdO1xyXG5cclxuXHQvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXHJcblx0bGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xyXG5cdFx0dmFyIHJlc3VsdCA9IFtdO1xyXG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0dmFyIGl0ZW0gPSB0aGlzW2ldO1xyXG5cdFx0XHRpZihpdGVtWzJdKSB7XHJcblx0XHRcdFx0cmVzdWx0LnB1c2goXCJAbWVkaWEgXCIgKyBpdGVtWzJdICsgXCJ7XCIgKyBpdGVtWzFdICsgXCJ9XCIpO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdHJlc3VsdC5wdXNoKGl0ZW1bMV0pO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gcmVzdWx0LmpvaW4oXCJcIik7XHJcblx0fTtcclxuXHJcblx0Ly8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcclxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XHJcblx0XHRpZih0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIilcclxuXHRcdFx0bW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xyXG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcclxuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHZhciBpZCA9IHRoaXNbaV1bMF07XHJcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcclxuXHRcdFx0XHRhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XHJcblx0XHR9XHJcblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHZhciBpdGVtID0gbW9kdWxlc1tpXTtcclxuXHRcdFx0Ly8gc2tpcCBhbHJlYWR5IGltcG9ydGVkIG1vZHVsZVxyXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xyXG5cdFx0XHQvLyAgd2hlbiBhIG1vZHVsZSBpcyBpbXBvcnRlZCBtdWx0aXBsZSB0aW1lcyB3aXRoIGRpZmZlcmVudCBtZWRpYSBxdWVyaWVzLlxyXG5cdFx0XHQvLyAgSSBob3BlIHRoaXMgd2lsbCBuZXZlciBvY2N1ciAoSGV5IHRoaXMgd2F5IHdlIGhhdmUgc21hbGxlciBidW5kbGVzKVxyXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xyXG5cdFx0XHRcdGlmKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcclxuXHRcdFx0XHRcdGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xyXG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XHJcblx0XHRcdFx0XHRpdGVtWzJdID0gXCIoXCIgKyBpdGVtWzJdICsgXCIpIGFuZCAoXCIgKyBtZWRpYVF1ZXJ5ICsgXCIpXCI7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH07XHJcblx0cmV0dXJuIGxpc3Q7XHJcbn07XHJcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vfi9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1xuICoqLyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUtBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	eval("/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0;\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(false) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction createStyleElement() {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tvar head = getHeadElement();\r\n\tstyleElement.type = \"text/css\";\r\n\thead.appendChild(styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement() {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tvar head = getHeadElement();\r\n\tlinkElement.rel = \"stylesheet\";\r\n\thead.appendChild(linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement());\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement();\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement();\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3N0eWxlLWxvYWRlci9hZGRTdHlsZXMuanM/Yjk4MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXHJcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxyXG4qL1xyXG52YXIgc3R5bGVzSW5Eb20gPSB7fSxcclxuXHRtZW1vaXplID0gZnVuY3Rpb24oZm4pIHtcclxuXHRcdHZhciBtZW1vO1xyXG5cdFx0cmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0aWYgKHR5cGVvZiBtZW1vID09PSBcInVuZGVmaW5lZFwiKSBtZW1vID0gZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxuXHRcdFx0cmV0dXJuIG1lbW87XHJcblx0XHR9O1xyXG5cdH0sXHJcblx0aXNPbGRJRSA9IG1lbW9pemUoZnVuY3Rpb24oKSB7XHJcblx0XHRyZXR1cm4gL21zaWUgWzYtOV1cXGIvLnRlc3Qod2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKSk7XHJcblx0fSksXHJcblx0Z2V0SGVhZEVsZW1lbnQgPSBtZW1vaXplKGZ1bmN0aW9uICgpIHtcclxuXHRcdHJldHVybiBkb2N1bWVudC5oZWFkIHx8IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaGVhZFwiKVswXTtcclxuXHR9KSxcclxuXHRzaW5nbGV0b25FbGVtZW50ID0gbnVsbCxcclxuXHRzaW5nbGV0b25Db3VudGVyID0gMDtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGlzdCwgb3B0aW9ucykge1xyXG5cdGlmKHR5cGVvZiBERUJVRyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBERUJVRykge1xyXG5cdFx0aWYodHlwZW9mIGRvY3VtZW50ICE9PSBcIm9iamVjdFwiKSB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgc3R5bGUtbG9hZGVyIGNhbm5vdCBiZSB1c2VkIGluIGEgbm9uLWJyb3dzZXIgZW52aXJvbm1lbnRcIik7XHJcblx0fVxyXG5cclxuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcclxuXHQvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cclxuXHQvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXHJcblx0aWYgKHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiA9PT0gXCJ1bmRlZmluZWRcIikgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XHJcblxyXG5cdHZhciBzdHlsZXMgPSBsaXN0VG9TdHlsZXMobGlzdCk7XHJcblx0YWRkU3R5bGVzVG9Eb20oc3R5bGVzLCBvcHRpb25zKTtcclxuXHJcblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XHJcblx0XHR2YXIgbWF5UmVtb3ZlID0gW107XHJcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xyXG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcclxuXHRcdFx0ZG9tU3R5bGUucmVmcy0tO1xyXG5cdFx0XHRtYXlSZW1vdmUucHVzaChkb21TdHlsZSk7XHJcblx0XHR9XHJcblx0XHRpZihuZXdMaXN0KSB7XHJcblx0XHRcdHZhciBuZXdTdHlsZXMgPSBsaXN0VG9TdHlsZXMobmV3TGlzdCk7XHJcblx0XHRcdGFkZFN0eWxlc1RvRG9tKG5ld1N0eWxlcywgb3B0aW9ucyk7XHJcblx0XHR9XHJcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgbWF5UmVtb3ZlLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHZhciBkb21TdHlsZSA9IG1heVJlbW92ZVtpXTtcclxuXHRcdFx0aWYoZG9tU3R5bGUucmVmcyA9PT0gMCkge1xyXG5cdFx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKylcclxuXHRcdFx0XHRcdGRvbVN0eWxlLnBhcnRzW2pdKCk7XHJcblx0XHRcdFx0ZGVsZXRlIHN0eWxlc0luRG9tW2RvbVN0eWxlLmlkXTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH07XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFkZFN0eWxlc1RvRG9tKHN0eWxlcywgb3B0aW9ucykge1xyXG5cdGZvcih2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcclxuXHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xyXG5cdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XHJcblx0XHRpZihkb21TdHlsZSkge1xyXG5cdFx0XHRkb21TdHlsZS5yZWZzKys7XHJcblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykge1xyXG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzW2pdKGl0ZW0ucGFydHNbal0pO1xyXG5cdFx0XHR9XHJcblx0XHRcdGZvcig7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XHJcblx0XHRcdFx0ZG9tU3R5bGUucGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XHJcblx0XHRcdH1cclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdHZhciBwYXJ0cyA9IFtdO1xyXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xyXG5cdFx0XHRcdHBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xyXG5cdFx0XHR9XHJcblx0XHRcdHN0eWxlc0luRG9tW2l0ZW0uaWRdID0ge2lkOiBpdGVtLmlkLCByZWZzOiAxLCBwYXJ0czogcGFydHN9O1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuZnVuY3Rpb24gbGlzdFRvU3R5bGVzKGxpc3QpIHtcclxuXHR2YXIgc3R5bGVzID0gW107XHJcblx0dmFyIG5ld1N0eWxlcyA9IHt9O1xyXG5cdGZvcih2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XHJcblx0XHR2YXIgaXRlbSA9IGxpc3RbaV07XHJcblx0XHR2YXIgaWQgPSBpdGVtWzBdO1xyXG5cdFx0dmFyIGNzcyA9IGl0ZW1bMV07XHJcblx0XHR2YXIgbWVkaWEgPSBpdGVtWzJdO1xyXG5cdFx0dmFyIHNvdXJjZU1hcCA9IGl0ZW1bM107XHJcblx0XHR2YXIgcGFydCA9IHtjc3M6IGNzcywgbWVkaWE6IG1lZGlhLCBzb3VyY2VNYXA6IHNvdXJjZU1hcH07XHJcblx0XHRpZighbmV3U3R5bGVzW2lkXSlcclxuXHRcdFx0c3R5bGVzLnB1c2gobmV3U3R5bGVzW2lkXSA9IHtpZDogaWQsIHBhcnRzOiBbcGFydF19KTtcclxuXHRcdGVsc2VcclxuXHRcdFx0bmV3U3R5bGVzW2lkXS5wYXJ0cy5wdXNoKHBhcnQpO1xyXG5cdH1cclxuXHRyZXR1cm4gc3R5bGVzO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVTdHlsZUVsZW1lbnQoKSB7XHJcblx0dmFyIHN0eWxlRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcclxuXHR2YXIgaGVhZCA9IGdldEhlYWRFbGVtZW50KCk7XHJcblx0c3R5bGVFbGVtZW50LnR5cGUgPSBcInRleHQvY3NzXCI7XHJcblx0aGVhZC5hcHBlbmRDaGlsZChzdHlsZUVsZW1lbnQpO1xyXG5cdHJldHVybiBzdHlsZUVsZW1lbnQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUxpbmtFbGVtZW50KCkge1xyXG5cdHZhciBsaW5rRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIpO1xyXG5cdHZhciBoZWFkID0gZ2V0SGVhZEVsZW1lbnQoKTtcclxuXHRsaW5rRWxlbWVudC5yZWwgPSBcInN0eWxlc2hlZXRcIjtcclxuXHRoZWFkLmFwcGVuZENoaWxkKGxpbmtFbGVtZW50KTtcclxuXHRyZXR1cm4gbGlua0VsZW1lbnQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xyXG5cdHZhciBzdHlsZUVsZW1lbnQsIHVwZGF0ZSwgcmVtb3ZlO1xyXG5cclxuXHRpZiAob3B0aW9ucy5zaW5nbGV0b24pIHtcclxuXHRcdHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xyXG5cdFx0c3R5bGVFbGVtZW50ID0gc2luZ2xldG9uRWxlbWVudCB8fCAoc2luZ2xldG9uRWxlbWVudCA9IGNyZWF0ZVN0eWxlRWxlbWVudCgpKTtcclxuXHRcdHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZUVsZW1lbnQsIHN0eWxlSW5kZXgsIGZhbHNlKTtcclxuXHRcdHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZUVsZW1lbnQsIHN0eWxlSW5kZXgsIHRydWUpO1xyXG5cdH0gZWxzZSBpZihvYmouc291cmNlTWFwICYmXHJcblx0XHR0eXBlb2YgVVJMID09PSBcImZ1bmN0aW9uXCIgJiZcclxuXHRcdHR5cGVvZiBVUkwuY3JlYXRlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcclxuXHRcdHR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcclxuXHRcdHR5cGVvZiBCbG9iID09PSBcImZ1bmN0aW9uXCIgJiZcclxuXHRcdHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcclxuXHRcdHN0eWxlRWxlbWVudCA9IGNyZWF0ZUxpbmtFbGVtZW50KCk7XHJcblx0XHR1cGRhdGUgPSB1cGRhdGVMaW5rLmJpbmQobnVsbCwgc3R5bGVFbGVtZW50KTtcclxuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xyXG5cdFx0XHRpZihzdHlsZUVsZW1lbnQuaHJlZilcclxuXHRcdFx0XHRVUkwucmV2b2tlT2JqZWN0VVJMKHN0eWxlRWxlbWVudC5ocmVmKTtcclxuXHRcdH07XHJcblx0fSBlbHNlIHtcclxuXHRcdHN0eWxlRWxlbWVudCA9IGNyZWF0ZVN0eWxlRWxlbWVudCgpO1xyXG5cdFx0dXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlRWxlbWVudCk7XHJcblx0XHRyZW1vdmUgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0c3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcclxuXHRcdH07XHJcblx0fVxyXG5cclxuXHR1cGRhdGUob2JqKTtcclxuXHJcblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlKG5ld09iaikge1xyXG5cdFx0aWYobmV3T2JqKSB7XHJcblx0XHRcdGlmKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcClcclxuXHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdHVwZGF0ZShvYmogPSBuZXdPYmopO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0cmVtb3ZlKCk7XHJcblx0XHR9XHJcblx0fTtcclxufVxyXG5cclxudmFyIHJlcGxhY2VUZXh0ID0gKGZ1bmN0aW9uICgpIHtcclxuXHR2YXIgdGV4dFN0b3JlID0gW107XHJcblxyXG5cdHJldHVybiBmdW5jdGlvbiAoaW5kZXgsIHJlcGxhY2VtZW50KSB7XHJcblx0XHR0ZXh0U3RvcmVbaW5kZXhdID0gcmVwbGFjZW1lbnQ7XHJcblx0XHRyZXR1cm4gdGV4dFN0b3JlLmZpbHRlcihCb29sZWFuKS5qb2luKCdcXG4nKTtcclxuXHR9O1xyXG59KSgpO1xyXG5cclxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyhzdHlsZUVsZW1lbnQsIGluZGV4LCByZW1vdmUsIG9iaikge1xyXG5cdHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcclxuXHJcblx0aWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XHJcblx0XHRzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gcmVwbGFjZVRleHQoaW5kZXgsIGNzcyk7XHJcblx0fSBlbHNlIHtcclxuXHRcdHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcclxuXHRcdHZhciBjaGlsZE5vZGVzID0gc3R5bGVFbGVtZW50LmNoaWxkTm9kZXM7XHJcblx0XHRpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XHJcblx0XHRpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcclxuXHRcdFx0c3R5bGVFbGVtZW50Lmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlRWxlbWVudCwgb2JqKSB7XHJcblx0dmFyIGNzcyA9IG9iai5jc3M7XHJcblx0dmFyIG1lZGlhID0gb2JqLm1lZGlhO1xyXG5cdHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xyXG5cclxuXHRpZihtZWRpYSkge1xyXG5cdFx0c3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKVxyXG5cdH1cclxuXHJcblx0aWYoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcclxuXHRcdHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XHJcblx0fSBlbHNlIHtcclxuXHRcdHdoaWxlKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XHJcblx0XHRcdHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XHJcblx0XHR9XHJcblx0XHRzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XHJcblx0fVxyXG59XHJcblxyXG5mdW5jdGlvbiB1cGRhdGVMaW5rKGxpbmtFbGVtZW50LCBvYmopIHtcclxuXHR2YXIgY3NzID0gb2JqLmNzcztcclxuXHR2YXIgbWVkaWEgPSBvYmoubWVkaWE7XHJcblx0dmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XHJcblxyXG5cdGlmKHNvdXJjZU1hcCkge1xyXG5cdFx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjY2MDM4NzVcclxuXHRcdGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIgKyBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpICsgXCIgKi9cIjtcclxuXHR9XHJcblxyXG5cdHZhciBibG9iID0gbmV3IEJsb2IoW2Nzc10sIHsgdHlwZTogXCJ0ZXh0L2Nzc1wiIH0pO1xyXG5cclxuXHR2YXIgb2xkU3JjID0gbGlua0VsZW1lbnQuaHJlZjtcclxuXHJcblx0bGlua0VsZW1lbnQuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XHJcblxyXG5cdGlmKG9sZFNyYylcclxuXHRcdFVSTC5yZXZva2VPYmplY3RVUkwob2xkU3JjKTtcclxufVxyXG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9zdHlsZS1sb2FkZXIvYWRkU3R5bGVzLmpzXG4gKiogbW9kdWxlIGlkID0gMTRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }
]);